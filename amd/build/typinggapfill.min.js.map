{"version":3,"file":"typinggapfill.min.js","sources":["../src/typinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates'\n], function($, log, ajax, def, anim, progresstimer, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson typing gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.getItems();\n            self.appReady();\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_listen_cont\");\n            var qbox = $(\"#\" + self.itemdata.uniqueid + \"_container .question\");\n            //var recorderbox = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_speakbtncontainer\");\n            var gamebox = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_game\");\n            var controlsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_controls\");\n            var resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_resultscontainer\");\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  //recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            // Next page button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n\n            // Start button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            // Skip.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_skip_btn\").on(\"click\", function() {\n                $(this).prop(\"disabled\", true);\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\").prop(\"disabled\", true);\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                // Move on after short time, to next prompt, or next question.\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".tgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n            // Check.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\").on(\"click\", function() {\n                self.check_answer();\n            });\n\n            // Listen for enter key on input boxes\n            $(\"#\" + self.itemdata.uniqueid + \"_container\").on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 13) {\n                    self.check_answer();\n                }\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    timer: [],\n                    typed: \"\",\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_loaded\").show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\").prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            var timelimit_progressbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\");\n            if (comparison) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + \" .tgapfill_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n                //make the input boxes green and move forward\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + \" input\").addClass(\"ml_gapfill_char_correct\");\n\n            //if they cant retry OR the time limit is up, move on\n            } else if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + \" .tgapfill_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                //it was wrong but they can retry\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    $(\".tgapfill_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            $(\".tgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_controls\").show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            $(\".tgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            self.updateProgressDots();\n\n            self.nextReply();\n        },\n\n        updateProgressDots: function() {\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n              color = \"gray\";\n              if (self.items[idx].answered && self.items[idx].correct) {\n                color = \"green\";\n              } else if (self.items[idx].answered && !self.items[idx].correct) {\n                color = \"red\";\n              }\n              return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_title\").html(progress);\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='tgapfill_reply tgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='tgapfill_feedback'></i></div>\";\n\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n            code += \"</div>\";\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n\n            var newreply = $(\".tgapfill_reply_\" + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            var inputElements = [...document.querySelectorAll(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character')];\n            self.formReady(inputElements);\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character:first').focus();\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        log.debug('timer finished');\n                        var btn = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\");\n                        log.debug(btn);\n\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                     inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","anim","progresstimer","templates","debug","clone","extend","this","init","index","itemdata","quizhelper","animopts","useanimatecss","register_events","getItems","appReady","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","show_item_review","review_data","listencont","uniqueid","qbox","gamebox","controlsbox","resultsbox","render","then","html","js","show","hide","runTemplateJS","self","on","start","prop","stopTimer","game","pointer","timer","answered","setTimeout","nextPrompt","end","check_answer","which","passage","parsedstring","characterunputs","transcript","each","data","value","val","push","getComparison","comparison","gotComparison","text_items","sentences","map","target","sentence","prompt","definition","typed","audio","hidestartpage","timelimit_progressbar","addClass","allowretry","hasClass","thereply","do_animate","callback","correctanswer","forEach","char","type","character","updateProgressDots","showitemreview","item","spoken","nextReply","color","progress","idx","join","code","append","newreply","inputElements","document","querySelectorAll","formReady","focus","timelimit","progressTimer","height","timeLimit","onFinish","btn","trigger","attr","timers","clearInterval","ele","addEventListener","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}