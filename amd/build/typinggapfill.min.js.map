{"version":3,"file":"typinggapfill.min.js","sources":["../src/typinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates'\n], function($, log, ajax, def, anim, progresstimer, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson typing gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.init_controls();\n            self.register_events();\n            self.getItems();\n            self.appReady();\n        },\n\n        init_controls: function() {\n            var self = this;\n            self.controls = {\n                container: $(\"#\" + self.itemdata.uniqueid + \"_container\"),\n                listen_cont: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_listen_cont\"),\n                nextbutton: $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\"),\n                start_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\"),\n                skip_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_skip_btn\"),\n                ctrl_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\"),\n                check_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\"),\n                game: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_game\"),\n                controlsbox: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_controls\"),\n                resultscontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_resultscontainer\"),\n                mainmenu: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_mainmenu\"),\n                title: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_title\"),\n                progress_container: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\"),\n                progress_bar: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\"),\n                question: $(\"#\" + self.itemdata.uniqueid + \"_container .question\")\n            };\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = self.controls.listen_cont;\n            var qbox = self.controls.question;\n            var gamebox = self.controls.game;\n            var controlsbox = self.controls.controlsbox;\n            var resultsbox = self.controls.resultscontainer;\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  //recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            // Next page button.\n            self.controls.nextbutton.on('click', function(e) {\n                self.next_question();\n            });\n\n            // Start button.\n            self.controls.start_btn.on(\"click\", function() {\n                self.start();\n            });\n\n            // Skip.\n            self.controls.skip_btn.on(\"click\", function() {\n                $(this).prop(\"disabled\", true);\n                self.controls.check_btn.prop(\"disabled\", true);\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                // Move on after short time, to next prompt, or next question.\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        self.controls.container.find('.tgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n            // Check.\n            self.controls.check_btn.on(\"click\", function() {\n                self.check_answer();\n            });\n\n            // Listen for enter key on input boxes\n            self.controls.container.on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 13) {\n                    self.check_answer();\n                }\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    timer: [],\n                    typed: \"\",\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            self.controls.container.find('.tgapfill_not_loaded').hide();\n            self.controls.container.find('.tgapfill_loaded').show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                self.controls.start_btn.prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            var timelimit_progressbar = self.controls.progress_bar;\n            if (comparison) {\n                self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' .tgapfill_feedback[data-idx=\"' + self.game.pointer + '\"]').addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n                //make the input boxes green and move forward\n                self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input').addClass(\"ml_gapfill_char_correct\");\n\n            //if they cant retry OR the time limit is up, move on\n            } else if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')) {\n                self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' .tgapfill_feedback[data-idx=\"' + self.game.pointer + '\"]').addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                //it was wrong but they can retry\n                var thereply = self.controls.container.find('.tgapfill_reply_' + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        self.controls.ctrl_btn.prop(\"disabled\", false);\n                    }\n                );\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            self.controls.question.show();\n            self.controls.start_btn.hide();\n            self.controls.mainmenu.hide();\n            self.controls.controlsbox.show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            self.updateProgressDots();\n\n            self.nextReply();\n        },\n\n        updateProgressDots: function() {\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n              color = \"gray\";\n              if (self.items[idx].answered && self.items[idx].correct) {\n                color = \"green\";\n              } else if (self.items[idx].answered && !self.items[idx].correct) {\n                color = \"red\";\n              }\n              return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            self.controls.title.html(progress);\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='tgapfill_reply tgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='tgapfill_feedback'></i></div>\";\n\n            //hint - image\n            if( self.items[self.game.pointer].imageurl) {\n                code += \"<div class='minilesson_sentence_image'><div class='minilesson_padded_image'><img src='\"\n                    + self.items[self.game.pointer].imageurl + \"' alt='Image for gap fill' /></div></div>\";\n            }\n            //hint - definition\n            if( self.items[self.game.pointer].definition) {\n                code += \"<div class='definition-container'><div class='definition'>\"\n                    + self.items[self.game.pointer].definition + \"</div>\";\n            }            code += \"</div>\";\n            self.controls.question.append(code);\n            var newreply = self.controls.container.find('.tgapfill_reply_' + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            var inputElements = Array.from(self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character'));\n            self.formReady(inputElements);\n\n            self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character:first').focus();\n\n            self.startTimer();\n        },\n\n        startTimer: function(){\n            var self = this;\n            // If we have a time limit, set up the timer, otherwise return\n            if (self.itemdata.timelimit > 0) {\n               // This is a function to start the timer (we call it conditionally below)\n                var doStartTimer = function() {\n                     // This shows progress bar\n                    self.controls.progress_container.show();\n                    self.controls.progress_container.find('i').show();\n                    var progresbar = self.controls.progress_container.find('#progresstimer').progressTimer({\n                        height: '5px',\n                        timeLimit: self.itemdata.timelimit,\n                        onFinish: function() {\n                            self.controls.skip_btn.trigger('click');\n                        }\n                    });\n                    progresbar.each(function() {\n                        self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                    });\n                }\n\n                // This adds the timer and starts it. But if we dont have a start page and its the first item\n                // we need to defer the timer start until the item is shown\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        doStartTimer();\n                    });\n                }else{\n                    doStartTimer();\n                }\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                     inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","anim","progresstimer","templates","debug","clone","extend","this","init","index","itemdata","quizhelper","animopts","useanimatecss","init_controls","register_events","getItems","appReady","controls","container","uniqueid","listen_cont","nextbutton","start_btn","skip_btn","ctrl_btn","check_btn","game","controlsbox","resultscontainer","mainmenu","title","progress_container","progress_bar","question","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","show_item_review","review_data","listencont","qbox","gamebox","resultsbox","render","then","html","js","show","hide","runTemplateJS","self","on","start","prop","stopTimer","pointer","timer","answered","setTimeout","find","nextPrompt","end","check_answer","which","passage","parsedstring","characterunputs","transcript","each","data","value","val","push","getComparison","comparison","gotComparison","text_items","sentences","map","target","sentence","prompt","definition","typed","audio","imageurl","hidestartpage","timelimit_progressbar","addClass","allowretry","hasClass","thereply","do_animate","callback","correctanswer","forEach","char","type","character","updateProgressDots","showitemreview","item","spoken","nextReply","color","progress","idx","join","code","append","newreply","inputElements","Array","from","formReady","focus","startTimer","timelimit","doStartTimer","progressTimer","height","timeLimit","onFinish","trigger","attr","timers","clearInterval","ele","addEventListener","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"AAAAA,sCAAO,CAAC,SACJ,WACA,YACA,6BACA,4BACA,+BACA,mBACD,SAASC,EAAGC,IAAKC,KAAMC,IAAKC,KAAMC,cAAeC,kBAGhDL,IAAIM,MAAM,4CAEH,CAGHC,MAAO,kBACIR,EAAES,QAAO,EAAM,GAAIC,OAG9BC,KAAM,SAASC,MAAOC,SAAUC,YACjBJ,KACNG,SAAWA,SADLH,KAENI,WAAaA,WAFPJ,KAGNE,MAAQA,UAETG,SAAW,GACfA,SAASC,cAAgBF,WAAWE,cACpCZ,KAAKO,KAAKI,UAPCL,KASNO,gBATMP,KAUNQ,kBAVMR,KAWNS,WAXMT,KAYNU,YAGTH,cAAe,WACAP,KACNW,SAAW,CACZC,UAAWtB,EAAE,IAFNU,KAEiBG,SAASU,SAAW,cAC5CC,YAAaxB,EAAE,IAHRU,KAGmBG,SAASU,SAAW,oCAC9CE,WAAYzB,EAAE,IAJPU,KAIkBG,SAASU,SAAW,qCAC7CG,UAAW1B,EAAE,IALNU,KAKiBG,SAASU,SAAW,kCAC5CI,SAAU3B,EAAE,IANLU,KAMgBG,SAASU,SAAW,iCAC3CK,SAAU5B,EAAE,IAPLU,KAOgBG,SAASU,SAAW,iCAC3CM,UAAW7B,EAAE,IARNU,KAQiBG,SAASU,SAAW,kCAC5CO,KAAM9B,EAAE,IATDU,KASYG,SAASU,SAAW,6BACvCQ,YAAa/B,EAAE,IAVRU,KAUmBG,SAASU,SAAW,iCAC9CS,iBAAkBhC,EAAE,IAXbU,KAWwBG,SAASU,SAAW,yCACnDU,SAAUjC,EAAE,IAZLU,KAYgBG,SAASU,SAAW,iCAC3CW,MAAOlC,EAAE,IAbFU,KAaaG,SAASU,SAAW,8BACxCY,mBAAoBnC,EAAE,IAdfU,KAc0BG,SAASU,SAAW,kCACrDa,aAAcpC,EAAE,IAfTU,KAeoBG,SAASU,SAAW,gDAC/Cc,SAAUrC,EAAE,IAhBLU,KAgBgBG,SAASU,SAAW,0BAInDe,cAAe,eAEPC,SAAW,GACfA,SAAS3B,MAFEF,KAEWE,MACtB2B,SAASC,UAAW,EACpBD,SAASE,WAJE/B,KAIgBgC,MAAMC,OACjCJ,SAASK,aALElC,KAKkBgC,MAAMG,QAAO,SAASC,UACxCA,EAAEC,WACVJ,OACHJ,SAASS,MAAQC,KAAKC,MAAOX,SAASK,aAAeL,SAASE,WAAc,KARjE/B,KASNI,WAAWqC,QAAQZ,WAG5Ba,iBAAiB,eAETC,YAAc,GAClBA,YAAYX,MAFHhC,KAEgBgC,MACzBW,YAAYZ,WAHH/B,KAGmBgC,MAAMC,OAClCU,YAAYT,aAJHlC,KAIqBgC,MAAMG,QAAO,SAASC,UAAWA,EAAEC,WAAWJ,WAGxEW,WAPK5C,KAOaW,SAASG,YAC3B+B,KARK7C,KAQOW,SAASgB,SACrBmB,QATK9C,KASUW,SAASS,KACxBC,YAVKrB,KAUcW,SAASU,YAC5B0B,WAXK/C,KAWaW,SAASW,iBAG/B1B,UAAUoD,OAAO,iCAAiCL,aAAaM,MAC7D,SAASC,KAAKC,IACVJ,WAAWG,KAAKA,MAEhBH,WAAWK,OACXN,QAAQO,OACRhC,YAAYgC,OACZT,WAAWS,OACXR,KAAKQ,OAGLzD,UAAU0D,cAAcH,QAKlC3C,gBAAiB,eAET+C,KAAOvD,KAGXuD,KAAK5C,SAASI,WAAWyC,GAAG,SAAS,SAASpB,GAC1CmB,KAAK3B,mBAIT2B,KAAK5C,SAASK,UAAUwC,GAAG,SAAS,WAChCD,KAAKE,WAITF,KAAK5C,SAASM,SAASuC,GAAG,SAAS,WAC/BlE,EAAEU,MAAM0D,KAAK,YAAY,GACzBH,KAAK5C,SAASQ,UAAUuC,KAAK,YAAY,GACzCH,KAAKI,UAAUJ,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASC,OAG7CN,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASE,UAAW,EACzCP,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASvB,SAAU,EAGpCkB,KAAKnC,KAAKwC,QAAUL,KAAKvB,MAAMC,OAAS,EACxC8B,YAAW,WACPR,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,SAASP,OACrEE,KAAKnC,KAAKwC,UACVL,KAAKU,eACN,KAEHV,KAAKW,SAKbX,KAAK5C,SAASQ,UAAUqC,GAAG,SAAS,WAChCD,KAAKY,kBAITZ,KAAK5C,SAASC,UAAU4C,GAAG,UAAW,qBAAqB,SAASpB,GACjD,IAAXA,EAAEgC,OACFb,KAAKY,mBAKjB/C,KAAM,CACFwC,QAAS,GAGbO,aAAc,eACNZ,KAAOvD,KACPqE,QAAUd,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASU,aACxCC,gBAAkBhB,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,QAAU,2BACxFY,WAAa,GAEjBD,gBAAgBE,MAAK,eACbvE,MAAQZ,EAAEU,MAAM0E,KAAK,SACrBC,MAAQrF,EAAEU,MAAM4E,MACpBJ,WAAWK,KAAQ,CACf3E,MAAOA,MACPyE,MAAOA,UAIfpB,KAAKuB,cAAcT,QAASG,YAAY,SAASO,YAC7CxB,KAAKyB,cAAcD,gBAI3BtE,SAAU,eAEFwE,WADOjF,KACWG,SAAS+E,UADpBlF,KAGNgC,MAAQiD,WAAWE,KAAI,SAASC,cAC1B,CACHA,OAAQA,OAAOC,SACfC,OAAQF,OAAOE,OACfhB,aAAcc,OAAOd,aACrBiB,WAAYH,OAAOG,WACnB1B,MAAO,GACP2B,MAAO,GACP1B,UAAU,EACVzB,SAAS,EACToD,MAAO,KACPC,SAAUN,OAAOM,aAEtBvD,QAAO,SAASC,SACK,KAAbA,EAAEgD,WAIjB1E,SAAU,WACKV,KACNW,SAASC,UAAUoD,KAAK,wBAAwBX,OAD1CrD,KAENW,SAASC,UAAUoD,KAAK,oBAAoBZ,OAFtCpD,KAGHG,SAASwF,cAHN3F,KAIFyD,QAJEzD,KAMFW,SAASK,UAAU0C,KAAK,YAAY,IAIjDsB,cAAe,SAASD,gBAChBxB,KAAOvD,KACP4F,sBAAwBrC,KAAK5C,SAASe,gBACtCqD,WACAxB,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,QAAU,iCAAmCL,KAAKnC,KAAKwC,QAAU,MAAMiC,SAAS,eAC5ItC,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASE,UAAW,EACzCP,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASvB,SAAU,EACxCkB,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAAS4B,OAAQ,EAEtCjC,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,QAAU,UAAUiC,SAAS,+BAGtF,CAAA,GAAItC,KAAKpD,SAAS2F,aAAcF,sBAAsBG,SAAS,yBAK/D,KAECC,SAAWzC,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,qBAC3ElE,KAAKuG,WAAWD,SAAU,0BAA0B/C,MAChD,WACIM,KAAK5C,SAASO,SAASwC,KAAK,YAAY,MAThDH,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,QAAU,iCAAmCL,KAAKnC,KAAKwC,QAAU,MAAMiC,SAAS,eAC5ItC,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASE,UAAW,EACzCP,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASvB,SAAU,EACxCkB,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAAS4B,OAAQ,EAY1CjC,KAAKI,UAAUJ,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASC,OAEzCN,KAAKnC,KAAKwC,QAAUL,KAAKvB,MAAMC,OAAS,EACxC8B,YAAW,WACPzE,EAAE,IAAMiE,KAAKpD,SAASU,SAAW,8BAAgC0C,KAAKnC,KAAKwC,SAASP,OACpFE,KAAKnC,KAAKwC,UACVL,KAAKU,eACN,KAEHV,KAAKW,OAIbY,cAAe,SAAST,QAASG,WAAY0B,cACrC3C,KAAOvD,KAEXV,EAAE,IAAMiE,KAAKpD,SAASU,SAAW,iCAAiC6C,KAAK,YAAY,OAE/EyC,eAAgB,EAEpB9B,QAAQ+B,SAAQ,SAAS1B,KAAMxE,WACvBmG,KAAO,GAEO,UAAd3B,KAAK4B,OACiB,IAAlBH,gBAEY,KADZE,KAAO9C,KAAK5C,SAASC,UAAUoD,KAAK,mBAAqBT,KAAKnC,KAAKwC,QAAU,uCAAyC1D,MAAQ,MAAM0E,QAGzHyB,MAAQ3B,KAAK6B,aADpBJ,eAAgB,MAQhCD,SAASC,gBAGbjC,IAAK,eACGX,KAAOvD,KACXV,EAAE,0BAA0BoE,KAAK,YAAY,GAG7CH,KAAKiD,qBAELzC,YAAW,WACPzE,EAAE,0BAA0BoE,KAAK,YAAW,GACzCH,KAAKnD,WAAWqG,eACflD,KAAKb,mBAELa,KAAK3B,kBAEV,MAGP6B,MAAO,WACQzD,KAENW,SAASO,SAASwC,KAAK,YAAY,GAF7B1D,KAINgC,MAAMoE,SAAQ,SAASM,MACxBA,KAAKC,OAAS,GACdD,KAAK5C,UAAW,EAChB4C,KAAKrE,SAAU,KAPRrC,KAUNoB,KAAKwC,QAAU,EAVT5D,KAYNW,SAASgB,SAASyB,OAZZpD,KAaNW,SAASK,UAAUqC,OAbbrD,KAcNW,SAASY,SAAS8B,OAdZrD,KAeNW,SAASU,YAAY+B,OAffpD,KAiBNiE,cAITA,WAAY,WAEGjE,KAENW,SAASO,SAASwC,KAAK,YAAY,GAF7B1D,KAINwG,qBAJMxG,KAMN4G,aAGTJ,mBAAoB,eAEZK,MADAtD,KAAOvD,KAEP8G,SAAWvD,KAAKvB,MAAMmD,KAAI,SAASuB,KAAMK,YAC3CF,MAAQ,OACJtD,KAAKvB,MAAM+E,KAAKjD,UAAYP,KAAKvB,MAAM+E,KAAK1E,QAC9CwE,MAAQ,QACCtD,KAAKvB,MAAM+E,KAAKjD,WAAaP,KAAKvB,MAAM+E,KAAK1E,UACtDwE,MAAQ,OAEH,mBAAqBA,MAAQ,iCACnCG,KAAK,KACRzD,KAAK5C,SAASa,MAAM0B,KAAK4D,WAG7BF,UAAW,eAEHK,KAAO,6CADAjH,KACoDoB,KAAKwC,QAAU,uCAE9EqD,MAAQ,+BAHGjH,KAINgC,MAJMhC,KAIKoB,KAAKwC,SAASU,aAAa8B,SAAQ,SAAS1B,KAAMxE,OAC5C,UAAdwE,KAAK4B,KACLW,MAAQ,gFAAkF/G,MAAQ,+BAAiCA,MAAQ,KACtH,UAAdwE,KAAK4B,KACZW,MAAQ,mEAAqE/G,MAAQ,0BAA4BwE,KAAK6B,UAAY,cAElIU,MAAQvC,KAAK6B,aAGrBU,MAAQ,iBAbGjH,KAaqBoB,KAAKwC,QAAU,yCAbpC5D,KAgBFgC,MAhBEhC,KAgBSoB,KAAKwC,SAAS8B,WAC9BuB,MAAQ,yFAjBDjH,KAkBIgC,MAlBJhC,KAkBeoB,KAAKwC,SAAS8B,SAAW,6CAlBxC1F,KAqBFgC,MArBEhC,KAqBSoB,KAAKwC,SAAS2B,aAC9B0B,MAAQ,6DAtBDjH,KAuBIgC,MAvBJhC,KAuBeoB,KAAKwC,SAAS2B,WAAa,UACxC0B,MAAQ,SAxBVjH,KAyBNW,SAASgB,SAASuF,OAAOD,UAC1BE,SA1BOnH,KA0BSW,SAASC,UAAUoD,KAAK,mBA1BjChE,KA0B2DoB,KAAKwC,SAE3ElE,KAAKuG,WAAWkB,SAAU,yBAA0B,MAAMlE,MACtD,eA7BOjD,KAiCNW,SAASO,SAASwC,KAAK,YAAY,OAEpC0D,cAAgBC,MAAMC,KAnCftH,KAmCyBW,SAASC,UAAUoD,KAAK,mBAnCjDhE,KAmC2EoB,KAAKwC,QAAU,4BAnC1F5D,KAoCNuH,UAAUH,eApCJpH,KAsCNW,SAASC,UAAUoD,KAAK,mBAtClBhE,KAsC4CoB,KAAKwC,QAAU,iCAAiC4D,QAtC5FxH,KAwCNyH,cAGTA,WAAY,eACJlE,KAAOvD,QAEPuD,KAAKpD,SAASuH,UAAY,EAAG,KAEzBC,aAAe,WAEfpE,KAAK5C,SAASc,mBAAmB2B,OACjCG,KAAK5C,SAASc,mBAAmBuC,KAAK,KAAKZ,OAC1BG,KAAK5C,SAASc,mBAAmBuC,KAAK,kBAAkB4D,cAAc,CACnFC,OAAQ,MACRC,UAAWvE,KAAKpD,SAASuH,UACzBK,SAAU,WACNxE,KAAK5C,SAASM,SAAS+G,QAAQ,YAG5BvD,MAAK,WACZlB,KAAKvB,MAAMuB,KAAKnC,KAAKwC,SAASC,MAAMgB,KAAKvF,EAAEU,MAAMiI,KAAK,cAM3D1E,KAAKpD,SAASwF,eAAuC,IAAtBpC,KAAKnC,KAAKwC,QACxCL,KAAK5C,SAASC,UAAU4C,GAAG,eAAe,KACtCmE,kBAGJA,iBAKZhE,UAAW,SAASuE,QACZA,OAAOjG,QACPiG,OAAO9B,SAAQ,SAASvC,OACpBsE,cAActE,WAK1B0D,UAAW,SAASH,eAChBA,cAAchB,SAAQ,SAASgC,IAAKlI,OAChCkI,IAAIC,iBAAiB,WAAW,SAASjG,GAInB,IAAdA,EAAEkG,SAAoC,KAAnBlG,EAAEgD,OAAOT,OAC/ByC,cAAc7E,KAAKgG,IAAI,EAAGrI,MAAQ,IAAIsH,WAG3CY,IAAIC,iBAAiB,SAAS,SAASjG,SAI5BoG,SAAUC,MAAQrG,EAAEgD,OAAOT,MAClCvC,EAAEgD,OAAOT,MAAQ6D,MAAAA,MAAAA,MAAS,SACpBE,aAAexI,QAAUkH,cAAcnF,OAAS,OACnB0G,IAAVH,QACAE,eAErBtB,cAAclH,MAAQ,GAAGsH,QACzBJ,cAAclH,MAAQ,GAAGyE,MAAQ8D,KAAKzB,KAAK,IAC3CI,cAAclH,MAAQ,GAAG0I,cAAc,IAAIC,MAAM"}