{"version":3,"file":"typinggapfill.min.js","sources":["../src/typinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates',\n    'core/str',\n    'core/notification'\n], function($, log, ajax, def, anim, progresstimer, templates,str,notification) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson typing gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n            self.strings = {};\n\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.init_controls();\n            self.init_strings();\n            self.register_events();\n            self.getItems();\n            self.appReady();\n        },\n\n        init_controls: function() {\n            var self = this;\n            self.controls = {\n                container: $(\"#\" + self.itemdata.uniqueid + \"_container\"),\n                listen_cont: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_listen_cont\"),\n                nextbutton: $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\"),\n                start_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\"),\n                skip_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_skip_btn\"),\n                ctrl_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\"),\n                check_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\"),\n                game: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_game\"),\n                controlsbox: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_controls\"),\n                resultscontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_resultscontainer\"),\n                mainmenu: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_mainmenu\"),\n                title: $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_title\"),\n                progress_container: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\"),\n                progress_bar: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\"),\n                question: $(\"#\" + self.itemdata.uniqueid + \"_container .question\")\n            };\n        },\n\n        init_strings: function() {\n            var self = this;\n            str.get_strings([\n                { \"key\": \"nextlessonitem\", \"component\": 'mod_minilesson'},\n                { \"key\": \"confirm_desc\", \"component\": 'mod_minilesson'},\n                { \"key\": \"yes\", \"component\": 'moodle'},\n                { \"key\": \"no\", \"component\": 'moodle'},\n            ]).done(function (s) {\n                var i = 0;\n                self.strings.nextlessonitem = s[i++];\n                self.strings.confirm_desc = s[i++];\n                self.strings.yes = s[i++];\n                self.strings.no = s[i++];\n            });\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = self.controls.listen_cont;\n            var qbox = self.controls.question;\n            var gamebox = self.controls.game;\n            var controlsbox = self.controls.controlsbox;\n            var resultsbox = self.controls.resultscontainer;\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  //recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            // Next page button.\n            self.controls.nextbutton.on('click', function(e) {\n                if (self.items.some(item => !item.answered)) {\n                    notification.confirm(self.strings.nextlessonitem,\n                        self.strings.confirm_desc,\n                        self.strings.yes,\n                        self.strings.no,\n                        function() {\n                            self.next_question();\n                        }\n                    );\n                } else {\n                    self.next_question();\n                }\n            });\n\n            // Start button.\n            self.controls.start_btn.on(\"click\", function() {\n                self.start();\n            });\n\n            // Skip.\n            self.controls.skip_btn.on(\"click\", function() {\n                $(this).prop(\"disabled\", true);\n                self.controls.check_btn.prop(\"disabled\", true);\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                // Move on after short time, to next prompt, or next question.\n                if (self.game.pointer < self.items.length - 1) {\n                    self.controls.skip_btn.prop(\"disabled\", true);\n                    self.controls.skip_btn.children('.fa').removeClass('fa-arrow-right');\n                    self.controls.skip_btn.children('.fa').addClass('fa-spinner fa-spin');\n                    setTimeout(function() {\n                        self.controls.skip_btn.children('.fa').removeClass('fa-spinner fa-spin');\n                        self.controls.skip_btn.children('.fa').addClass('fa-arrow-right');\n                        self.controls.skip_btn.prop(\"disabled\", false);\n                        self.controls.container.find('.tgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n            // Check.\n            self.controls.check_btn.on(\"click\", function() {\n                self.check_answer();\n            });\n\n            // Listen for enter key on input boxes\n            self.controls.container.on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 13) {\n                    self.check_answer();\n                }\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    timer: [],\n                    typed: \"\",\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            self.controls.container.find('.tgapfill_not_loaded').hide();\n            self.controls.container.find('.tgapfill_loaded').show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                self.controls.start_btn.prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            var timelimit_progressbar = self.controls.progress_bar;\n            if (comparison) {\n                self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' .tgapfill_feedback[data-idx=\"' + self.game.pointer + '\"]').addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n                //make the input boxes green and move forward\n                self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input').addClass(\"ml_gapfill_char_correct\");\n\n            //if they cant retry OR the time limit is up, move on\n            } else if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')) {\n                self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' .tgapfill_feedback[data-idx=\"' + self.game.pointer + '\"]').addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                //it was wrong but they can retry\n                var thereply = self.controls.container.find('.tgapfill_reply_' + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        self.controls.ctrl_btn.prop(\"disabled\", false);\n                    }\n                );\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    self.controls.container.find(\".tgapfill_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            self.controls.nextbutton.prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                self.controls.nextbutton.prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            self.controls.question.show();\n            self.controls.start_btn.hide();\n            self.controls.mainmenu.hide();\n            self.controls.controlsbox.show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            self.updateProgressDots();\n\n            self.nextReply();\n        },\n\n        updateProgressDots: function() {\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n              color = \"gray\";\n              if (self.items[idx].answered && self.items[idx].correct) {\n                color = \"green\";\n              } else if (self.items[idx].answered && !self.items[idx].correct) {\n                color = \"red\";\n              }\n              return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            self.controls.title.html(progress);\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='tgapfill_reply tgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n            var brackets = {started: false, ended: false, index: null};\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (brackets.started && !brackets.ended && brackets.index !== data.index) {\n                    brackets.started = brackets.ended = false;\n                    code += '</span>';\n                }\n                if ((data.type === 'input' || data.type === 'mtext') && !brackets.started) {\n                    code += '<span class=\"form-input-phrase-online\" data-mindex=\"'+data.index+'\">';\n                    brackets.started = true;\n                }\n                brackets.index = data.index;\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' autocapitalize='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            if (brackets.started && !brackets.ended) {\n                code += '</span>';\n            }\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='tgapfill_feedback'></i></div>\";\n\n            //hint - image\n            if( self.items[self.game.pointer].imageurl) {\n                code += \"<div class='minilesson_sentence_image'><div class='minilesson_padded_image'><img src='\"\n                    + self.items[self.game.pointer].imageurl + \"' alt='Image for gap fill' /></div></div>\";\n            }\n            //hint - definition\n            if( self.items[self.game.pointer].definition) {\n                code += \"<div class='definition-container'><div class='definition'>\"\n                    + self.items[self.game.pointer].definition + \"</div>\";\n            }            code += \"</div>\";\n            self.controls.question.append(code);\n            var newreply = self.controls.container.find('.tgapfill_reply_' + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            var inputElements = Array.from(self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character'));\n            self.formReady(inputElements);\n\n            self.controls.container.find('.tgapfill_reply_' + self.game.pointer + ' input.single-character:first').focus();\n\n            self.startTimer();\n        },\n\n        startTimer: function(){\n            var self = this;\n            // If we have a time limit, set up the timer, otherwise return\n            if (self.itemdata.timelimit > 0) {\n               // This is a function to start the timer (we call it conditionally below)\n                var doStartTimer = function() {\n                     // This shows progress bar\n                    self.controls.progress_container.show();\n                    self.controls.progress_container.find('i').show();\n                    var progresbar = self.controls.progress_container.find('#progresstimer').progressTimer({\n                        height: '5px',\n                        timeLimit: self.itemdata.timelimit,\n                        onFinish: function() {\n                            self.controls.skip_btn.trigger('click');\n                        }\n                    });\n                    progresbar.each(function() {\n                        self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                    });\n                }\n\n                // This adds the timer and starts it. But if we dont have a start page and its the first item\n                // we need to defer the timer start until the item is shown\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        doStartTimer();\n                    });\n                }else{\n                    doStartTimer();\n                }\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                     inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","anim","progresstimer","templates","str","notification","debug","clone","extend","this","init","index","itemdata","quizhelper","strings","animopts","useanimatecss","init_controls","init_strings","register_events","getItems","appReady","controls","container","uniqueid","listen_cont","nextbutton","start_btn","skip_btn","ctrl_btn","check_btn","game","controlsbox","resultscontainer","mainmenu","title","progress_container","progress_bar","question","self","get_strings","done","s","i","nextlessonitem","confirm_desc","yes","no","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","show_item_review","review_data","listencont","qbox","gamebox","resultsbox","render","then","html","js","show","hide","runTemplateJS","on","some","item","answered","confirm","start","prop","stopTimer","pointer","timer","children","removeClass","addClass","setTimeout","find","nextPrompt","end","check_answer","which","passage","parsedstring","characterunputs","transcript","each","data","value","val","push","getComparison","comparison","gotComparison","text_items","sentences","map","target","sentence","prompt","definition","typed","audio","imageurl","hidestartpage","timelimit_progressbar","allowretry","hasClass","thereply","do_animate","callback","correctanswer","forEach","char","type","character","updateProgressDots","showitemreview","spoken","nextReply","color","progress","idx","join","code","brackets","started","ended","append","newreply","inputElements","Array","from","formReady","focus","startTimer","timelimit","doStartTimer","progressTimer","height","timeLimit","onFinish","trigger","attr","timers","clearInterval","ele","addEventListener","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}