{"version":3,"file":"sthelper.min.js","sources":["../src/sthelper.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/cloudpoodllloader',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n], function($,  log, Ajax, def, polly, cloudpoodll, ttrecorder, anim) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the quiz stage\n   */\n\n  log.debug('MiniLesson ST Helper: initialising');\n\nvar app = {\n    passmark: 90,\n    pointer: 1,\n    jsondata: null,\n    props: null,\n    dryRun: false,\n    language: 'en-US',\n    terms: [],\n    phonetics: [],\n    displayterms: [],\n    results: [],\n    controls: {},\n    ttrec: null, //a handle on the tt recorder\n\n\n    init: function(props) {\n      var dd = this;\n\n      //pick up opts from html\n      var theid='#amdopts_' + props.widgetid;\n      var configcontrol = $(theid).get(0);\n      if(configcontrol){\n        dd.activitydata = JSON.parse(configcontrol.value);\n        $(theid).remove();\n      }else{\n        //if there is no config we might as well give up\n        log.debug('MiniLesson ST helper: No config found on page. Giving up.');\n        return;\n      }\n\n          this.init_polly();\n          this.init_controls();\n          this.initComponents();\n          this.register_events();\n    },\n    init_polly: function() {\n\n        //get the polly token\n        var pollytoken = this.activitydata.token;\n        var pollyregion = this.activitydata.region;\n        var pollyowner = 'poodll';\n        polly.init(pollytoken, pollyregion, pollyowner);\n        log.debug('polly initialised');\n    },\n\n    init_controls: function() {\n            log.debug('sthelper init controls');\n          app.controls = {};\n          app.controls.pollybutton = $(\"#speechtester_pollybutton\");\n          app.controls.pollyvoice = $(\"#speechtester_voice\");\n          app.controls.pollylanguage = $(\"#speechtester_language\");\n          app.controls.pollytext = $(\"#speechtester_text\");\n          app.controls.audioplayer = $(\"#speechtester_audioplayer\");\n          app.controls.transcribebutton = $(\"#speechtester_transcribebutton\");\n          app.controls.transcription = $(\"#speechtester_transcription\");\n          app.controls.transcriptioncoverage = $(\"#speechtester_transcription_coverage\");\n          app.controls.opentranscription = $(\"#speechtester_open\");\n\n    },\n\n        register_events: function() {\n            log.debug('sthelper register events');\n\n            //polly button\n          app.controls.pollybutton.on('click',function() {\n              log.debug('pollybutton clicked');\n              log.debug(app.controls.pollytext.val());\n              log.debug(app.controls.pollyvoice.val());\n                polly.fetch_polly_url(app.controls.pollytext.val(),'text', app.controls.pollyvoice.val()).then(function(audiourl) {\n                    app.controls.audioplayer.attr('src',audiourl);\n                    log.debug(audiourl);\n                });\n          });\n          //transcribe button\n            app.controls.transcribebutton.on('click',function() {\n                log.debug('transcribebutton clicked');\n                log.debug(app.controls.audioplayer.attr('src'));\n                app.downloadAndSubmitMP3(app.controls.audioplayer.attr('src'),app.doTranscribe);\n            });\n        },\n\n    downloadAndSubmitMP3: function(url, submitFunction) {\n        // Fetch the MP3 file from the URL\n        fetch(url)\n            .then(response => response.blob())\n            .then(blob => {\n                // Call the submit function with the Blob as an argument\n                log.debug(blob);\n                submitFunction(blob);\n            })\n            .catch(error => {\n                log.debug('Error downloading MP3:', error);\n            });\n    },\n\n    doTranscribe: function(blob) {\n        //clear the existing results\n        app.controls.transcriptioncoverage.html('');\n        app.controls.transcription.html('');\n\n        var bodyFormData = new FormData();\n        var blobname = Math.floor(Math.random() * 100) +  '.mp3';\n        var guided = app.controls.opentranscription.prop('checked')==false;\n        log.debug('guided is: ' + guided);\n        var prompt = app.controls.pollytext.val();\n        bodyFormData.append('audioFile', blob, blobname);\n        bodyFormData.append('scorer', '');\n        if(guided) {\n            bodyFormData.append('strictmode', 'false');\n        }else{\n            bodyFormData.append('strictmode', 'true');\n        }\n        //prompt is used by whisper and other transcibers down the line\n        if(guided){\n            bodyFormData.append('prompt', app.controls.pollytext.val());\n        }\n        bodyFormData.append('lang', app.controls.pollylanguage.val());\n        bodyFormData.append('wwwroot', M.cfg.wwwroot);\n\n        var oReq = new XMLHttpRequest();\n        oReq.open(\"POST\", app.activitydata.asrurl, true);\n        oReq.onUploadProgress= function(progressEvent) {};\n        oReq.onload = function(oEvent) {\n            if (oReq.status === 200) {\n                var respObject = JSON.parse(oReq.response);\n                if(respObject.data.hasOwnProperty('transcript')) {\n                    var transcript = respObject.data.transcript;\n                    app.controls.transcription.text(transcript);\n                    //correct the transcript\n                    app.comparePassageToTranscript(prompt,transcript).then(function(ajaxresult) {\n                        var comparison = JSON.parse(ajaxresult);\n                        if (comparison) {\n                            var allCorrect = comparison.filter(function(e){return !e.matched;}).length==0;\n                            var coverage = comparison.filter(function(e){return e.matched;}).length/comparison.length;\n                            coverage = coverage * 100;\n                            coverage = Math.round(coverage);\n                            var tc_report = 'All correct: ' + allCorrect + '<br>';\n                            tc_report += 'Coverage: ' + coverage + '%<br>';\n                            if(coverage<100){\n                                $.each(comparison, function (index, value) {\n                                    if (!value.matched) {\n                                        tc_report += 'unmatched word: ' + value.word + '<br>';\n                                        //var start = value.start;\n                                        //var end = value.end;\n                                    }\n                                });\n                            }\n                            app.controls.transcriptioncoverage.html(tc_report);\n                        }\n                    });\n                }else{\n                    app.controls.transcription.text(\"no transcript was in the result\");\n                }\n            } else {\n                app.controls.transcription.text( \"error\");\n                log.debug(oReq.error);\n            }\n        };\n        try {\n            oReq.send(bodyFormData);\n\n        }catch(err){\n            app.controls.transcription.text( \"error\");\n            log.debug(err);\n        }\n    },\n\n    comparePassageToTranscript: function (passage,transcript){\n        return Ajax.call([{\n            methodname: 'mod_minilesson_compare_passage_to_transcript',\n            args: {\n                passage: passage,\n                transcript: transcript,\n                alternatives: '',\n                phonetic: '',\n                language: app.controls.pollylanguage.val(),\n                region: app.activitydata.region,\n                cmid: app.activitydata.cmid\n            },\n            async: false\n        }])[0];\n    },\n\n     initComponents: function() {\n\n              var theCallback = function(message) {\n\n                switch (message.type) {\n                  case 'recording':\n\n                    break;\n\n                  case 'speech':\n                    var speechtext = message.capturedspeech;\n             \n                    log.debug('speechtext:',speechtext);\n\n                } //end of switch message type\n              };\n\n              //init tt recorder\n              var opts = {};\n              opts.uniqueid = app.activitydata.uniqueid;\n              opts.callback = theCallback;\n              opts.stt_guided= app.controls.opentranscription.prop('checked')==false;\n              app.ttrec = ttrecorder.clone();\n              app.ttrec.init(opts);\n\n        },\n\n\n      }; //end of app definition\n      return app;\n\n\n});"],"names":["define","$","log","Ajax","def","polly","cloudpoodll","ttrecorder","anim","debug","app","passmark","pointer","jsondata","props","dryRun","language","terms","phonetics","displayterms","results","controls","ttrec","init","theid","widgetid","configcontrol","get","this","activitydata","JSON","parse","value","remove","init_polly","init_controls","initComponents","register_events","pollytoken","token","pollyregion","region","pollybutton","pollyvoice","pollylanguage","pollytext","audioplayer","transcribebutton","transcription","transcriptioncoverage","opentranscription","on","val","fetch_polly_url","then","audiourl","attr","downloadAndSubmitMP3","doTranscribe","url","submitFunction","fetch","response","blob","catch","error","html","bodyFormData","FormData","blobname","Math","floor","random","guided","prop","prompt","append","M","cfg","wwwroot","oReq","XMLHttpRequest","open","asrurl","onUploadProgress","progressEvent","onload","oEvent","status","respObject","data","hasOwnProperty","transcript","text","comparePassageToTranscript","ajaxresult","comparison","allCorrect","filter","e","matched","length","coverage","round","tc_report","each","index","word","send","err","passage","call","methodname","args","alternatives","phonetic","cmid","async","opts","uniqueid","callback","message","type","speechtext","capturedspeech","stt_guided","clone"],"mappings":"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"}