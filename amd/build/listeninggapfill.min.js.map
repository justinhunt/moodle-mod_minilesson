{"version":3,"file":"listeninggapfill.min.js","sources":["../src/listeninggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates',\n    'core/str',\n    'core/notification'\n], function($, log, ajax, def, polly, anim, progresstimer, templates, str,notification) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson listening gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        usevoice: 'Amy',\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.strings = {};\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.init_controls();\n            self.init_strings();\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        init_controls: function() {\n            var self = this;\n            self.controls = {\n                container: $(\"#\" + self.itemdata.uniqueid + \"_container\"),\n                listen_cont: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_listen_cont\"),\n                nextbutton: $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\"),\n                start_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_start_btn\"),\n                skip_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_skip_btn\"),\n                ctrl_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_ctrl-btn\"),\n                check_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_check_btn\"),\n                game: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_game\"),\n                controlsbox: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_controls\"),\n                resultscontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_resultscontainer\"),\n                mainmenu: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_mainmenu\"),\n                title: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_title\"),\n                progress_container: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\"),\n                progress_bar: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\"),\n                question: $(\"#\" + self.itemdata.uniqueid + \"_container .question\"),\n                listen_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_listen_btn\"),\n            };\n        },\n\n        init_strings: function() {\n            var self = this;\n            str.get_strings([\n                { \"key\": \"nextlessonitem\", \"component\": 'mod_minilesson'},\n                { \"key\": \"confirm_desc\", \"component\": 'mod_minilesson'},\n                { \"key\": \"yes\", \"component\": 'moodle'},\n                { \"key\": \"no\", \"component\": 'moodle'},\n            ]).done(function (s) {\n                var i = 0;\n                self.strings.nextlessonitem = s[i++];\n                self.strings.confirm_desc = s[i++];\n                self.strings.yes = s[i++];\n                self.strings.no = s[i++];\n            });\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n\n            //stop audio\n            self.stop_audio();\n\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = self.controls.listen_cont;\n            var qbox = self.controls.question;\n            var gamebox = self.controls.game;\n            var controlsbox = self.controls.controlsbox;\n            var resultsbox = self.controls.resultscontainer;\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  //recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n            self.controls.nextbutton.on('click', function(e) {\n                if (self.items.some(item => !item.answered)) {\n                    notification.confirm(self.strings.nextlessonitem,\n                        self.strings.confirm_desc,\n                        self.strings.yes,\n                        self.strings.no,\n                        function() {\n                            self.next_question();\n                        }\n                    );\n                } else {\n                    self.next_question();\n                }\n            });\n\n            self.controls.start_btn.on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER events\n            var audioplayerbtn = self.controls.listen_btn;\n            //audio button click event\n            audioplayerbtn.on(\"click\", function() {\n                var theaudio =self.items[self.game.pointer].audio;\n\n                //if we are already playing stop playing\n                if(!theaudio.paused){\n                    theaudio.pause();\n                    theaudio.currentTime=0;\n                    $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                    $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    return;\n                }\n\n                //change icon to indicate playing state\n                theaudio.addEventListener('ended', function(){\n                    $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                    $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                });\n\n                theaudio.addEventListener('play', function(){\n                    $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                    $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                });\n\n                theaudio.load();\n                theaudio.play();\n            });\n\n            //toggle audio playback on spacekey press in input boxes\n            self.controls.container.on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 32) {\n                    e.preventDefault();\n                    audioplayerbtn.trigger(\"click\");\n                }\n            });\n\n            // On skip button click\n            self.controls.skip_btn.on(\"click\", function() {\n                // Disable buttons\n                self.controls.ctrl_btn.prop(\"disabled\", true);\n                // Reveal prompt\n                self.controls.container.find('.lgapfill_speech.lgapfill_teacher_left').text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal answers\n                self.controls.container.find('.lgapfill_targetWord').each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var lgapfill_targetWord = self.items[self.game.pointer].lgapfill_targetWords[realidx];\n                    $(this).val(lgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                // Move on after short time, to next prompt, or next question\n                if (self.game.pointer < self.items.length - 1) {\n                    self.controls.skip_btn.prop(\"disabled\", true);\n                    self.controls.skip_btn.children('.fa').removeClass('fa-arrow-right');\n                    self.controls.skip_btn.children('.fa').addClass('fa-spinner fa-spin');\n                    setTimeout(function() {\n                        self.controls.skip_btn.children('.fa').removeClass('fa-spinner fa-spin');\n                        self.controls.skip_btn.children('.fa').addClass('fa-arrow-right');\n                        self.controls.skip_btn.prop(\"disabled\", false);\n                        self.controls.container.find('.lgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 1500);\n                } else {\n                    self.end();\n                }\n            });\n\n\n            self.controls.check_btn.on(\"click\", function() {\n                self.check_answer();\n            });\n\n            // Listen for enter key on input boxes\n            self.controls.container.on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 13) {\n                    self.check_answer();\n                }\n            });\n\n            // Auto nav between inputs\n            self.controls.container.on(\"keyup\", \".lgapfill_targetWord\", function(e) {\n\n                // Move focus between textboxes\n                // log.debug(e);\n                var target = e.srcElement || e.target;\n                var maxLength = parseInt(target.attributes.maxlength.value, 10);\n                var myLength = target.value.length;\n                var key = e.which;\n                if (myLength >= maxLength) {\n                    var nextIdx = $(this).data('idx') + 1;\n                    var next = self.controls.container.find('input.lgapfill_targetWord[data-idx=\"' + nextIdx + '\"');\n                    if (next.length === 1) {\n                        next.focus();\n                    }\n\n                    // Move to previous field if empty (user pressed backspace or delete)\n                } else if ((key == 8 || key == 46) && myLength === 0) {\n                    var previousIdx = $(this).data('idx') - 1;\n                    var previous = self.controls.container.find('input.lgapfill_targetWord[data-idx=\"' + previousIdx + '\"');\n                    if (previous.length === 1) {\n                        previous.focus();\n                    }\n                }\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    audiourl: target.audiourl ? target.audiourl : \"\",\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            //Prepare audio\n            $.each(self.items, function (index, item) {\n                item.audio = new Audio();\n                item.audio.src = item.audiourl;\n            });\n            self.appReady();\n\n        },\n\n        appReady: function() {\n            var self = this;\n            self.controls.container.find('.lgapfill_not_loaded').hide();\n            self.controls.container.find('.lgapfill_loaded').show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                self.controls.start_btn.prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            log.debug(\"gotComparison\", comparison);\n            var timelimit_progressbar = self.controls.progress_bar;\n            if (comparison) {\n                self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' .lgapfill_feedback[data-idx=\"' + self.game.pointer + '\"]').addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n                //if they got it correct, make the input boxes green and move forward\n                log.debug(\"correct!!\");\n                self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' input').addClass(\"ml_gapfill_char_correct\");\n\n\n                //if they cant retry OR the time limit is up, move on\n            } else if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')) {\n                self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' .lgapfill_feedback[data-idx=\"' + self.game.pointer + '\"]').addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                //it was wrong but they can retry\n                var thereply = self.controls.container.find('.lgapfill_reply_' + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        self.controls.ctrl_btn.prop(\"disabled\", false);\n                    }\n                );\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    self.controls.container.find('.lgapfill_reply_' + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getWords: function(thetext) {\n            var self = this;\n            var checkcase = false;\n            if (checkcase == 'false') {\n                thetext = thetext.toLowerCase();\n            }\n            var chunks = thetext.split(self.quizhelper.spliton_regexp).filter(function(e) {\n                return e !== \"\";\n            });\n            var words = [];\n            for (var i = 0; i < chunks.length; i++) {\n                if (!chunks[i].match(self.quizhelper.spliton_regexp)) {\n                    words.push(chunks[i]);\n                }\n            }\n            return words;\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            self.controls.nextbutton.prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            //disable the buttons and go to next question or review\n            setTimeout(function() {\n                self.controls.nextbutton.prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n            self.controls.listen_cont.show();\n            self.controls.question.show();\n            self.controls.game.show();\n            self.controls.start_btn.hide();\n            self.controls.mainmenu.hide();\n            self.controls.controlsbox.show();\n\n            self.nextPrompt();\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            self.updateProgressDots();\n\n            self.nextReply();\n\n            // We autoplay the audio on item entry, if its not a mobile user.\n            // If we do not have a start page and its the first item, we play on the item show event\n            if (self.items[self.game.pointer].audio !==null && !self.quizhelper.mobile_user()){\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        setTimeout(function() {\n                            self.controls.listen_btn.trigger('click');\n                        }, 1000);\n                    });\n                }else{\n                    setTimeout(function() {\n                        self.controls.listen_btn.trigger('click');\n                    }, 1000);\n                }\n            }\n        },\n\n        updateProgressDots: function() {\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n              color = \"gray\";\n              if (self.items[idx].answered && self.items[idx].correct) {\n                color = \"green\";\n              } else if (self.items[idx].answered && !self.items[idx].correct) {\n                color = \"red\";\n              }\n              return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            self.controls.title.html(progress);\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='lgapfill_reply lgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n            var brackets = {started: false, ended: false, index: null};\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (brackets.started && !brackets.ended && brackets.index !== data.index) {\n                    brackets.started = brackets.ended = false;\n                    code += '</span>';\n                }\n                if ((data.type === 'input' || data.type === 'mtext') && !brackets.started) {\n                    code += '<span class=\"form-input-phrase-online\" data-mindex=\"'+data.index+'\">';\n                    brackets.started = true;\n                }\n                brackets.index = data.index;\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' type='text' autocomplete='off' autocapitalize='off' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' autocomplete='off' autocapitalize='off' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            if (brackets.started && !brackets.ended) {\n                code += '</span>';\n            }\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='lgapfill_feedback'></i></div>\";\n\n            //hint - image\n            if( self.items[self.game.pointer].imageurl) {\n                code += \"<div class='minilesson_sentence_image'><div class='minilesson_padded_image'><img src='\"\n                    + self.items[self.game.pointer].imageurl + \"' alt='Image for gap fill' /></div></div>\";\n            }\n            //hint - definition\n            if( self.items[self.game.pointer].definition) {\n                code += \"<div class='definition-container'><div class='definition'>\"\n                    + self.items[self.game.pointer].definition + \"</div>\";\n            }\n\n            code += \"</div>\";\n            self.controls.question.append(code);\n            var newreply = self.controls.container.find('.lgapfill_reply_' + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            var inputElements = Array.from(self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' input.single-character'));\n            self.formReady(inputElements);\n\n            self.controls.container.find('.lgapfill_reply_' + self.game.pointer + ' input.single-character:first').focus();\n\n            self.startTimer();\n        },\n\n         startTimer: function(){\n            var self = this;\n            // If we have a time limit, set up the timer, otherwise return\n            if (self.itemdata.timelimit > 0) {\n               // This is a function to start the timer (we call it conditionally below)\n                var doStartTimer = function() {\n                     // This shows progress bar\n                    self.controls.progress_container.show();\n                    self.controls.progress_container.find('i').show();\n                    var progresbar = self.controls.progress_container.find('#progresstimer').progressTimer({\n                        height: '5px',\n                        timeLimit: self.itemdata.timelimit,\n                        onFinish: function() {\n                            self.controls.skip_btn.trigger('click');\n                        }\n                    });\n                    progresbar.each(function() {\n                        self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                    });\n                }\n\n                // This adds the timer and starts it. But if we dont have a start page and its the first item\n                // we need to defer the timer start until the item is shown\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        doStartTimer();\n                    });\n                }else{\n                    doStartTimer();\n                }\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        // Stop audio .. usually when leaving the item or sentence\n        stop_audio: function(){\n            var self =this;\n            //pause audio if its playing\n            var theaudio = self.items[self.game.pointer].audio;\n            if(theaudio && !theaudio.paused) {\n                theaudio.pause();\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                        inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","anim","progresstimer","templates","str","notification","debug","clone","extend","this","usevoice","init","index","itemdata","quizhelper","strings","animopts","useanimatecss","init_controls","init_strings","register_events","setvoice","getItems","controls","container","uniqueid","listen_cont","nextbutton","start_btn","skip_btn","ctrl_btn","check_btn","game","controlsbox","resultscontainer","mainmenu","title","progress_container","progress_bar","question","listen_btn","self","get_strings","done","s","i","nextlessonitem","confirm_desc","yes","no","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","stop_audio","do_next","show_item_review","review_data","listencont","qbox","gamebox","resultsbox","render","then","html","js","show","hide","runTemplateJS","on","some","item","answered","confirm","start","audioplayerbtn","theaudio","pointer","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","which","preventDefault","trigger","prop","find","text","prompt","each","realidx","data","lgapfill_targetWord","lgapfill_targetWords","val","stopTimer","timer","setTimeout","nextPrompt","end","check_answer","target","srcElement","maxLength","parseInt","attributes","maxlength","value","myLength","key","nextIdx","next","focus","previousIdx","previous","passage","parsedstring","characterunputs","transcript","push","getComparison","comparison","gotComparison","voiceoption","text_items","sentences","map","sentence","definition","typed","audiourl","imageurl","Audio","src","appReady","hidestartpage","timelimit_progressbar","allowretry","hasClass","thereply","do_animate","getWords","thetext","chunks","split","spliton_regexp","words","match","callback","correctanswer","forEach","char","type","character","updateProgressDots","showitemreview","spoken","nextReply","mobile_user","color","progress","idx","join","code","brackets","started","ended","append","newreply","inputElements","Array","from","formReady","startTimer","timelimit","doStartTimer","progressTimer","height","timeLimit","onFinish","attr","timers","clearInterval","ele","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}