{"version":3,"file":"passagegapfill.min.js","sources":["../src/passagegapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates'\n], function($, log, ajax, def, polly, anim, progresstimer, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson passage gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {hintsused: 0}, this);\n        },\n\n        controls: {},\n        gapitems: [],\n        items: [],\n        hintsused: 0,\n        penalizehints: false,\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.penalizehints = itemdata.penalizehints || false; // Default to penalizing hints\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Animation. - we might use this to shake the incorrect text boxes or something. See how its used in speakinggapfill.js\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_controls();\n           // self.prepare_audio(); .. we pass the audio url in from PHP now, so no need to prepare it here.\n            self.register_events();\n            self.getGapItems();\n        },\n\n        register_controls: function() {\n            var self = this;\n            self.controls.rootelement = document.querySelector(`#${self.itemdata.uniqueid}_container`);\n            self.controls.audioplayer =$(\"#\" + self.itemdata.uniqueid + \"_container .pgapfill_audio_player\");\n            self.controls.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .passage_gapfill_results_actions\");\n            self.controls.finishbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .pgapfill_finish_btn\");\n            self.controls.hintbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .pgapfill_hint_btn\");\n            self.controls.nextbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n        },\n\n        prepare_audio: function() {\n            var self = this;\n            polly.fetch_polly_url(self.itemdata.passagedata.plaintext, self.itemdata.voiceoption,\n                self.itemdata.usevoice).then(function(audiourl) {\n                self.controls.audioplayer.attr(\"src\", audiourl);\n            });\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = self.get_stepdata();\n            self.quizhelper.do_next(stepdata);\n        },\n\n        submit_grade: function() {\n            var self = this;\n            var stepdata = self.get_stepdata();\n            self.quizhelper.report_step_grade(stepdata);\n        },\n\n        get_stepdata: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.resultsdata = {items: self.items};\n            stepdata.totalitems = self.items.length;\n            var totalhints = self.items.reduce((sum, obj) => sum + (obj.totalhints || 0), 0);\n            stepdata.correctitems = self.items.filter(e => e.correct).length;\n            // If the user has used hints, we need to adjust the grade - its a bit yuk\n            var hintspenalty = self.penalizehints ? totalhints / 3 : 0;\n            stepdata.grade = Math.round(((stepdata.correctitems - hintspenalty) / stepdata.totalitems) * 100);\n            if(hintspenalty >0){\n                stepdata.correctitems = Math.round(stepdata.correctitems - hintspenalty);\n            }\n            return stepdata;\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = self.get_stepdata();\n            var resultsbox = self.controls.resultsbox;\n            review_data.items = self.items;\n\n            //display results\n            templates.render('mod_minilesson/passagegapfillresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            self.controls.nextbtn.on('click', function() {\n                self.next_question();\n            });\n\n\n            self.controls.hintbtn.on(\"click\", function(e) {\n                e.preventDefault();\n                self.give_hint();\n            });\n\n            self.controls.finishbtn.on(\"click\", function(e) {\n                e.preventDefault();\n                self.check_answer([], true, true);\n                // Prevent submit grade when finishing.\n                // self.submit_grade();\n                self.show_item_review();\n                $(this).hide();\n                self.controls.hintbtn.hide();\n            });\n\n            self.controls.rootelement.addEventListener('input', e => {\n                const inputelement = e.target;\n                self.items.forEach(item => {\n                    if (item.inputelement === inputelement) {\n                        self.check_answer(item, false);\n                    }\n                });\n            });\n\n\n        },\n\n\n        check_answer: function(items = null, displaywrong = true, readonly = false) {\n            var self = this;\n            items = [].concat(items);\n            if (items.length === 0) {\n                items = self.items;\n            }\n            self.items.map(gapitem => {\n                if (!gapitem.inputelement) {\n                    return;\n                }\n                const gapelement = gapitem.inputelement.parentElement;\n                gapelement.classList.remove('psg_gapfill_wrong', 'psg_gapfill_correct');\n                gapitem.correct = gapitem.inputelement.value === gapitem.text;\n                gapitem.totalhints = parseInt(gapitem.inputelement.getAttribute('data-hints')) || 0;\n                if (gapitem.correct) {\n                    gapelement.classList.add('psg_gapfill_correct');\n                } else if (displaywrong) {\n                    gapelement.classList.add('psg_gapfill_wrong');\n                }\n                if (readonly) {\n                    if (self.quizhelper.showitemreview) {\n                        gapitem.inputelement.value = gapitem.text;\n                        gapelement.classList.add('pgapfill_gap_reviewing');\n                    }\n                    gapitem.inputelement.setAttribute('readonly', 'readonly');\n                }\n                return gapitem;\n            });\n        },\n\n        give_hint: function() {\n            var self = this;\n            var anyhintdisplayed = false;\n            self.items.forEach(element => {\n                const inputelement = element.inputelement;\n                if (!inputelement) {\n                    return;\n                }\n                //update the placeholder text\n                const placeholder = inputelement.placeholder;\n                const replaceposition = self.hintsused === 1 ? 1: element.placeholder.length - 1;\n                inputelement.placeholder = placeholder.slice(0, replaceposition) +\n                    element.text[replaceposition] + placeholder.slice(replaceposition + 1);\n                inputelement.setAttribute('placeholder', inputelement.placeholder);\n\n                // If the user has not entered the correct text, clear the input box, so they see the hint\n                if (inputelement.value !== element.text) {\n                    inputelement.value = '';\n                    inputelement.setAttribute('data-hints', 1 + self.hintsused);\n                    anyhintdisplayed = true;\n                }\n                \n            });\n\n           //manage the hint count\n            self.hintsused++;\n            if (self.hintsused >= parseInt(self.itemdata.hints)) {\n                self.controls.hintbtn.remove();\n            } else if (self.hintsused === 1 && self.hintsused < parseInt(self.itemdata.hints)) {\n                self.controls.hintbtn.text(self.controls.hintbtn.data('alttext'));\n            }\n        },\n\n\n\n        getGapItems: function() {\n            //TO DO implement this\n            // This function prepares the gap items from the passage data.\n           log.debug(\"getting gap items\");\n\n            var self = this;\n            var passagedata = self.itemdata.passagedata;\n\n            //Track the inputboxes and assoc data so we can work with it from JS\n            self.gapitems = passagedata.chunks.map(target => ({\n                wordindex: target.wordindex,\n                text: target.text,\n                placeholder: target.placeholder,\n                isgap: target.isgap,\n                correct: false\n            }));\n            self.items = self.gapitems.filter(gapitem => gapitem.isgap).map(item => {\n                item.inputelement = self.controls.rootelement\n                    .querySelector(`.pgapfill_gap_input[data-wordindex=\"${item.wordindex}\"]`);\n                return item;\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            self.start();\n        },\n\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //disable the buttons and go to next question or review\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n            self.controls.question.show();\n\n        },\n\n\n        stopTimer: function(timer) {\n            if (timer) {\n                    clearInterval(timer);\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","anim","progresstimer","templates","debug","clone","extend","hintsused","this","controls","gapitems","items","penalizehints","init","index","itemdata","quizhelper","animopts","useanimatecss","register_controls","register_events","getGapItems","rootelement","document","querySelector","uniqueid","audioplayer","resultsbox","finishbtn","hintbtn","nextbtn","prepare_audio","self","fetch_polly_url","passagedata","plaintext","voiceoption","usevoice","then","audiourl","attr","next_question","stepdata","get_stepdata","do_next","submit_grade","report_step_grade","hasgrade","resultsdata","totalitems","length","totalhints","reduce","sum","obj","correctitems","filter","e","correct","hintspenalty","grade","Math","round","show_item_review","review_data","render","html","js","runTemplateJS","on","preventDefault","give_hint","check_answer","hide","addEventListener","inputelement","target","forEach","item","displaywrong","readonly","concat","map","gapitem","gapelement","parentElement","classList","remove","value","text","parseInt","getAttribute","add","showitemreview","setAttribute","element","placeholder","replaceposition","slice","hints","data","chunks","wordindex","isgap","appReady","start","end","prop","setTimeout","question","show","stopTimer","timer","clearInterval"],"mappings":"AAAAA,uCAAO,CAAC,SACJ,WACA,YACA,6BACA,6BACA,4BACA,+BACA,mBACD,SAASC,EAAGC,IAAKC,KAAMC,IAAKC,MAAOC,KAAMC,cAAeC,kBAGvDN,IAAIO,MAAM,6CAEH,CAGHC,MAAO,kBACIT,EAAEU,QAAO,EAAM,CAACC,UAAW,GAAIC,OAG1CC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPJ,UAAW,EACXK,eAAe,EAEfC,KAAM,SAASC,MAAOC,SAAUC,YACjBR,KACNO,SAAWA,SADLP,KAENI,cAAgBG,SAASH,gBAAiB,EAFpCJ,KAGNQ,WAAaA,WAHPR,KAINM,MAAQA,UAGTG,SAAW,GACfA,SAASC,cAAgBF,WAAWE,cACpCjB,KAAKY,KAAKI,UATCT,KAWNW,oBAXMX,KAaNY,kBAbMZ,KAcNa,eAGTF,kBAAmB,WACJX,KACNC,SAASa,YAAcC,SAASC,yBAD1BhB,KACiDO,SAASU,wBAD1DjB,KAENC,SAASiB,YAAa9B,EAAE,IAFlBY,KAE6BO,SAASU,SAAW,qCAFjDjB,KAGNC,SAASkB,WAAa/B,EAAE,IAHlBY,KAG6BO,SAASU,SAAW,+CAHjDjB,KAINC,SAASmB,UAAYhC,EAAE,IAJjBY,KAI4BO,SAASU,SAAW,mCAJhDjB,KAKNC,SAASoB,QAAUjC,EAAE,IALfY,KAK0BO,SAASU,SAAW,iCAL9CjB,KAMNC,SAASqB,QAAUlC,EAAE,IANfY,KAM0BO,SAASU,SAAW,sCAG7DM,cAAe,eACPC,KAAOxB,KACXR,MAAMiC,gBAAgBD,KAAKjB,SAASmB,YAAYC,UAAWH,KAAKjB,SAASqB,YACrEJ,KAAKjB,SAASsB,UAAUC,MAAK,SAASC,UACtCP,KAAKvB,SAASiB,YAAYc,KAAK,MAAOD,cAI9CE,cAAe,eAEPC,SADOlC,KACSmC,eADTnC,KAENQ,WAAW4B,QAAQF,WAG5BG,aAAc,eAENH,SADOlC,KACSmC,eADTnC,KAENQ,WAAW8B,kBAAkBJ,WAGtCC,aAAc,eAEND,SAAW,GACfA,SAAS5B,MAFEN,KAEWM,MACtB4B,SAASK,UAAW,EACpBL,SAASM,YAAc,CAACrC,MAJbH,KAIyBG,OACpC+B,SAASO,WALEzC,KAKgBG,MAAMuC,WAC7BC,WANO3C,KAMWG,MAAMyC,QAAO,CAACC,IAAKC,MAAQD,KAAOC,IAAIH,YAAc,IAAI,GAC9ET,SAASa,aAPE/C,KAOkBG,MAAM6C,QAAOC,GAAKA,EAAEC,UAASR,WAEtDS,aATOnD,KASaI,cAAgBuC,WAAa,EAAI,SACzDT,SAASkB,MAAQC,KAAKC,OAAQpB,SAASa,aAAeI,cAAgBjB,SAASO,WAAc,KAC1FU,aAAc,IACbjB,SAASa,aAAeM,KAAKC,MAAMpB,SAASa,aAAeI,eAExDjB,UAGXqB,iBAAiB,eAETC,YADKxD,KACcmC,eACnBhB,WAFKnB,KAEaC,SAASkB,WAC/BqC,YAAYrD,MAHHH,KAGgBG,MAGzBR,UAAU8D,OAAO,uCAAuCD,aAAa1B,MACnE,SAAS4B,KAAKC,IACVxC,WAAWuC,KAAKA,MAGhB/D,UAAUiE,cAAcD,QAKlC/C,gBAAiB,eAETY,KAAOxB,KAEXwB,KAAKvB,SAASqB,QAAQuC,GAAG,SAAS,WAC9BrC,KAAKS,mBAITT,KAAKvB,SAASoB,QAAQwC,GAAG,SAAS,SAASZ,GACvCA,EAAEa,iBACFtC,KAAKuC,eAGTvC,KAAKvB,SAASmB,UAAUyC,GAAG,SAAS,SAASZ,GACzCA,EAAEa,iBACFtC,KAAKwC,aAAa,IAAI,GAAM,GAG5BxC,KAAK+B,mBACLnE,EAAEY,MAAMiE,OACRzC,KAAKvB,SAASoB,QAAQ4C,UAG1BzC,KAAKvB,SAASa,YAAYoD,iBAAiB,SAASjB,UAC1CkB,aAAelB,EAAEmB,OACvB5C,KAAKrB,MAAMkE,SAAQC,OACXA,KAAKH,eAAiBA,cACtB3C,KAAKwC,aAAaM,MAAM,UASxCN,aAAc,eAAS7D,6DAAQ,KAAMoE,wEAAqBC,qEAClDhD,KAAOxB,KACXG,MAAQ,GAAGsE,OAAOtE,OACG,IAAjBA,MAAMuC,SACNvC,MAAQqB,KAAKrB,OAEjBqB,KAAKrB,MAAMuE,KAAIC,cACNA,QAAQR,0BAGPS,WAAaD,QAAQR,aAAaU,qBACxCD,WAAWE,UAAUC,OAAO,oBAAqB,uBACjDJ,QAAQzB,QAAUyB,QAAQR,aAAaa,QAAUL,QAAQM,KACzDN,QAAQhC,WAAauC,SAASP,QAAQR,aAAagB,aAAa,gBAAkB,EAC9ER,QAAQzB,QACR0B,WAAWE,UAAUM,IAAI,uBAClBb,cACPK,WAAWE,UAAUM,IAAI,qBAEzBZ,WACIhD,KAAKhB,WAAW6E,iBAChBV,QAAQR,aAAaa,MAAQL,QAAQM,KACrCL,WAAWE,UAAUM,IAAI,2BAE7BT,QAAQR,aAAamB,aAAa,WAAY,aAE3CX,YAIfZ,UAAW,eACHvC,KAAOxB,KAEXwB,KAAKrB,MAAMkE,SAAQkB,gBACTpB,aAAeoB,QAAQpB,iBACxBA,0BAICqB,YAAcrB,aAAaqB,YAC3BC,gBAAqC,IAAnBjE,KAAKzB,UAAkB,EAAGwF,QAAQC,YAAY9C,OAAS,EAC/EyB,aAAaqB,YAAcA,YAAYE,MAAM,EAAGD,iBAC5CF,QAAQN,KAAKQ,iBAAmBD,YAAYE,MAAMD,gBAAkB,GACxEtB,aAAamB,aAAa,cAAenB,aAAaqB,aAGlDrB,aAAaa,QAAUO,QAAQN,OAC/Bd,aAAaa,MAAQ,GACrBb,aAAamB,aAAa,aAAc,EAAI9D,KAAKzB,YAC9B,MAM3ByB,KAAKzB,YACDyB,KAAKzB,WAAamF,SAAS1D,KAAKjB,SAASoF,OACzCnE,KAAKvB,SAASoB,QAAQ0D,SACI,IAAnBvD,KAAKzB,WAAmByB,KAAKzB,UAAYmF,SAAS1D,KAAKjB,SAASoF,QACvEnE,KAAKvB,SAASoB,QAAQ4D,KAAKzD,KAAKvB,SAASoB,QAAQuE,KAAK,aAM9D/E,YAAa,WAGVxB,IAAIO,MAAM,yBAEL4B,KAAOxB,KACP0B,YAAcF,KAAKjB,SAASmB,YAGhCF,KAAKtB,SAAWwB,YAAYmE,OAAOnB,KAAIN,UACnC0B,UAAW1B,OAAO0B,UAClBb,KAAMb,OAAOa,KACbO,YAAapB,OAAOoB,YACpBO,MAAO3B,OAAO2B,MACd7C,SAAS,MAEb1B,KAAKrB,MAAQqB,KAAKtB,SAAS8C,QAAO2B,SAAWA,QAAQoB,QAAOrB,KAAIJ,OAC5DA,KAAKH,aAAe3C,KAAKvB,SAASa,YAC7BE,4DAAqDsD,KAAKwB,iBACxDxB,SAIf0B,SAAU,WACKhG,KACNiG,SAITC,IAAK,eACG1E,KAAOxB,KACXZ,EAAE,0BAA0B+G,KAAK,YAAY,GAG7CC,YAAW,WACPhH,EAAE,0BAA0B+G,KAAK,YAAW,GACzC3E,KAAKhB,WAAW6E,eACf7D,KAAK+B,mBAEL/B,KAAKS,kBAEV,MAGPgE,MAAO,WACQjG,KACNC,SAASoG,SAASC,QAK3BC,UAAW,SAASC,OACZA,OACIC,cAAcD"}