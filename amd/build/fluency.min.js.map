{"version":3,"file":"fluency.min.js","sources":["../src/fluency.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions','mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder', 'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer', 'core/templates', 'core/chartjs'],\n    function($, log, def,polly, ttrecorder,anim, progresstimer, templates, chartjs) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the fluency item type\n   */\n\n  log.debug('MiniLesson Fluency: initialising');\n\n  var thefluencyitem = {\n    phonemeWarningThreshold: 75, // Threshold for phoneme error rate\n    phonemeErrorThreshold: 50, // Threshold for phoneme error rate\n    dummyResult: {\n    \"privPronJson\": {\n        \"Confidence\": 0.84381866,\n        \"Lexical\": \"this is a pencil\",\n        \"ITN\": \"this is a pencil\",\n        \"MaskedITN\": \"this is a pencil\",\n        \"Display\": \"This is a pencil.\",\n        \"PronunciationAssessment\": {\n            \"AccuracyScore\": 42,\n            \"FluencyScore\": 100,\n            \"ProsodyScore\": 81.1,\n            \"CompletenessScore\": 44,\n            \"PronScore\": 61.8\n        },\n        \"Words\": [\n            {\n                \"Word\": \"this\",\n                \"Offset\": 11000000,\n                \"Duration\": 4900000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 94,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"dhihs\",\n                        \"Grapheme\": \"this\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 69\n                        },\n                        \"Offset\": 11000000,\n                        \"Duration\": 4900000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"dh\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 78\n                        },\n                        \"Offset\": 11000000,\n                        \"Duration\": 2000000\n                    },\n                    {\n                        \"Phoneme\": \"ih\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 13100000,\n                        \"Duration\": 600000\n                    },\n                    {\n                        \"Phoneme\": \"s\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 51\n                        },\n                        \"Offset\": 13800000,\n                        \"Duration\": 2100000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"is\",\n                \"Offset\": 16000000,\n                \"Duration\": 1500000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 91,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"UnexpectedBreak\": {\n                                    \"Confidence\": 3.7878788e-8\n                                },\n                                \"MissingBreak\": {\n                                    \"Confidence\": 1\n                                },\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"ihz\",\n                        \"Grapheme\": \"is\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 91\n                        },\n                        \"Offset\": 16000000,\n                        \"Duration\": 1500000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"ih\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 80\n                        },\n                        \"Offset\": 16000000,\n                        \"Duration\": 500000\n                    },\n                    {\n                        \"Phoneme\": \"z\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 98\n                        },\n                        \"Offset\": 16600000,\n                        \"Duration\": 900000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"a\",\n                \"Offset\": 17600000,\n                \"Duration\": 700000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 100,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"UnexpectedBreak\": {\n                                    \"Confidence\": 3.7878788e-8\n                                },\n                                \"MissingBreak\": {\n                                    \"Confidence\": 1\n                                },\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"ax\",\n                        \"Grapheme\": \"a\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 17600000,\n                        \"Duration\": 700000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"ax\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 17600000,\n                        \"Duration\": 700000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"pencil\",\n                \"Offset\": 18400000,\n                \"Duration\": 5700000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 97,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"UnexpectedBreak\": {\n                                    \"Confidence\": 3.7878788e-8\n                                },\n                                \"MissingBreak\": {\n                                    \"Confidence\": 1\n                                },\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"pehn\",\n                        \"Grapheme\": \"pen\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 94\n                        },\n                        \"Offset\": 18400000,\n                        \"Duration\": 3100000\n                    },\n                    {\n                        \"Syllable\": \"saxl\",\n                        \"Grapheme\": \"cil\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 83\n                        },\n                        \"Offset\": 21600000,\n                        \"Duration\": 2500000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"p\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 85\n                        },\n                        \"Offset\": 18400000,\n                        \"Duration\": 1100000\n                    },\n                    {\n                        \"Phoneme\": \"eh\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 19600000,\n                        \"Duration\": 900000\n                    },\n                    {\n                        \"Phoneme\": \"n\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 20600000,\n                        \"Duration\": 900000\n                    },\n                    {\n                        \"Phoneme\": \"s\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 21600000,\n                        \"Duration\": 1200000\n                    },\n                    {\n                        \"Phoneme\": \"ax\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 80\n                        },\n                        \"Offset\": 22900000,\n                        \"Duration\": 600000\n                    },\n                    {\n                        \"Phoneme\": \"l\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 49\n                        },\n                        \"Offset\": 23600000,\n                        \"Duration\": 500000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"and\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"this\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"is\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"a\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"pen\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            }\n        ]\n    }\n},\n\n\n    speechConfig: null,\n    //this is just a placeholder for the actualtext which is from the sentences in items\n    referencetext: 'I met my love by the gas works wall',\n    game: {pointer: 0},\n    usevoice: '',\n    items: null,\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.itemdata = itemdata;\n      this.quizhelper = quizhelper;\n      this.init_components(quizhelper, itemdata);\n\n      // Anim\n      var animopts = {};\n      animopts.useanimatecss = quizhelper.useanimatecss;\n      anim.init(animopts);\n\n      //Events and voice and items parse\n      this.register_events(index, itemdata, quizhelper);\n      this.setvoice();\n      this.getItems();\n    },\n\n    init_components: function(quizhelper,itemdata){\n      var self=this;\n\n      self.thebutton = \"thettrbutton\"; // To Do impl. this\n      self.wordcount = $(\"#\" + self.itemdata.uniqueid + \"_container span.ml_wordcount\");\n      self.actionbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_actionbox\");\n      self.pendingbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_pendingbox\");\n      self.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_resultsbox\");\n      self.timerdisplay = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_timerdisplay\");\n      self.audioplayerbtn =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn\");\n      self.skipbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_skip_btn\");\n      self.startbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_start_btn\");\n      self.smallnextbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n      self.bignextbtn = $(\".minilesson_nextbutton\");\n      self.ctrlbtns =  $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_ctrl_btn\");\n      self.speakbtncont = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_speakbtncontainer\");\n      self.questioncont = $(\"#\" + self.itemdata.uniqueid + \"_container .question\");\n      self.listencont = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_cont\");\n      self.mainmenu = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_mainmenu\");\n      self.controls = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_controls\");\n      self.progresscont = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\");\n      self.itemresultscont = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n\n      // Callback: Recorder updates.\n      var recorderCallback = function(message) {\n\n        switch (message.type) {\n          case 'recording':\n            break;\n\n          case 'pronunciation_results':\n            var speechresults= message.results;\n            log.debug(speechresults);\n            self.do_evaluation(speechresults);    \n        } //end of switch message type\n      };\n \n        //init tt recorder\n        var opts = {};\n        opts.uniqueid = itemdata.uniqueid;\n        opts.callback = recorderCallback;\n        opts.stt_guided=false;\n        opts.referencetext=this.referencetext;\n        self.ttrec = ttrecorder.clone();\n        self.ttrec.init(opts);\n\n    }, //end of init components\n\n    setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption=self.itemdata.voiceoption;\n            return;\n    },\n\n    getItems: function() {\n      var self = this;\n      var text_items = self.itemdata.sentences;\n\n      self.items = text_items.map(function(target) {\n          return {\n              target: target.sentence,\n              prompt: target.prompt,\n              parsedstring: target.parsedstring,\n              displayprompt: target.displayprompt,\n              definition: target.definition,\n              phonetic: target.phonetic,\n              words: target.words,\n              typed: \"\",\n              timer: [],\n              answered: false,\n              correct: false,\n              audio: null\n          };\n      }).filter(function(e) {\n          return e.target !== \"\";\n      });\n\n\n      $.each(self.items, function(index, item) {\n        polly.fetch_polly_url(item.prompt,  self.voiceoption, self.usevoice).then(function(audiourl) {\n          item.audio = new Audio();\n          item.audio.src = audiourl;\n          if (self.items.filter(function(e) {\n              return e.audio === null;\n            }).length === 0) {\n            self.appReady();\n          }\n        });\n      });\n    },\n\n    appReady: function() {\n      var self = this;\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_not_loaded\").hide();\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_loaded\").show();\n      if(self.itemdata.hidestartpage){\n          self.start();\n      }else{\n          $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_start_btn\").prop(\"disabled\", false);\n      }\n  },\n\n    next_question: function(percent) {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = 1;\n      stepdata.correctitems = percent>0?1:0;\n      stepdata.grade = percent;\n      self.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      \n      var self = this;\n      // On next button click\n      self.bignextbtn.on('click', function(e) {\n          self.next_question(0);\n      });\n\n      // On start button click\n      self.startbtn.on(\"click\", function() {\n          self.start();\n      });\n\n      //AUDIO PLAYER Button events\n      // On listen button click\n      if(self.itemdata.readsentence) {\n          self.audioplayerbtn.on(\"click\", function () {\n              var theaudio = self.items[self.game.pointer].audio;\n\n              //if we are already playing stop playing\n              if(!theaudio.paused){\n                  theaudio.pause();\n                  theaudio.currentTime=0;\n                  $(self.audioplayerbtn).children('.fa').removeClass('fa-stop');\n                  $(self.audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                  return;\n              }\n\n              //change icon to indicate playing state\n              theaudio.addEventListener('ended', function () {\n                  $(self.audioplayerbtn).children('.fa').removeClass('fa-stop');\n                  $(self.audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                  self.do_evaluation(self.dummyResult);  \n\n              });\n\n              theaudio.addEventListener('play', function () {\n                  $(self.audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                  $(self.audioplayerbtn).children('.fa').addClass('fa-stop');\n              });\n              theaudio.load();\n              theaudio.play();\n          });\n      }\n\n      // On skip button click\n      self.skipbtn.on(\"click\", function() {\n          // Disable all the control buttons\n         self.ctrlbtns.prop(\"disabled\", true);\n          // Reveal the prompt\n          $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_speech.fluency_teacher_left\").text(self.items[self.game.pointer].prompt + \"\");\n          // Reveal the answer\n          var targetwords =  $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_targetWord\");\n          targetwords.each(function() {\n              var realidx = $(this).data(\"realidx\");\n              var fluency_targetWord = self.items[self.game.pointer].fluency_targetWords[realidx];\n              $(this).val(fluency_targetWord);\n          });\n\n          self.stopTimer(self.items[self.game.pointer].timer);\n\n          //mark as answered and incorrect\n          self.items[self.game.pointer].answered = true;\n          self.items[self.game.pointer].correct = false;\n\n          if (self.game.pointer < self.items.length - 1) {\n              // Move on after short time to next prompt\n              setTimeout(function() {\n                  $(\".fluency_reply_\" + self.game.pointer).hide();\n                  self.game.pointer++;\n                  self.nextPrompt();\n              }, 2000);\n              // End question\n          } else {\n              self.end();\n          }\n      });\n    },\n\n    end: function() {\n      var self = this;\n      self.bignextbtn.prop(\"disabled\", true);\n\n      //progress dots are updated on next_item. The last item has no next item, so we update from here\n      self.updateProgressDots();\n\n      setTimeout(function() {\n          self.bignextbtn.prop(\"disabled\",false);\n          if(self.quizhelper.showitemreview){\n              self.show_item_review();\n          }else{\n              self.next_question();\n          }\n      }, 2000);\n\n  },\n\n  start: function() {\n      var self = this;\n\n      self.ctrlbtns.prop(\"disabled\", true);\n      self.speakbtncont.show();\n\n      self.items.forEach(function(item) {\n          item.spoken = \"\";\n          item.answered = false;\n          item.correct = false;\n      });\n\n      self.game.pointer = 0;\n\n      self.questioncont.show();\n      if(self.itemdata.readsentence) {\n          self.listencont.show();\n      }\n      self.startbtn.hide();\n      self.mainmenu.hide();\n      self.controls.show();\n\n      self.nextPrompt();\n  },\n\n  updateProgressDots: function(){\n      var self = this;\n      var color;\n      var progress = self.items.map(function(item, idx) {\n          color = \"gray\";\n          if (self.items[idx].answered && self.items[idx].correct) {\n              color = \"green\";\n          } else if (self.items[idx].answered && !self.items[idx].correct) {\n              color = \"red\";\n          }\n          return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n      }).join(\" \");\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_title\").html(progress);\n  },\n\n  nextPrompt: function() {\n      var self = this;\n      self.ctrlbtns.prop(\"disabled\", false);\n      self.updateProgressDots();\n      var newprompt = $(\".fluency_prompt_\" + self.game.pointer);\n      anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n          function() {\n          }\n      );\n      self.nextReply();\n  },\n  \n\n  nextReply: function() {\n      var self = this;\n\n      var code = \"<div class='fluency_reply fluency_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n      code += \"<div class='form-container'>\";\n      self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n          if (data.type === 'input') {\n              code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n          } else if (data.type === 'mtext') {\n              code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n          } else {\n              code += data.character;\n          }\n      });\n      //correct or not\n      code += \" <i data-idx='\" + self.game.pointer + \"' class='fluency_feedback'></i></div>\";\n\n      //definition\n      code += \"<div class='item-results-container'>\";\n      code += \"</div>\";\n\n\n      $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n      var newreply = $(\".fluency_reply_\" + self.game.pointer);\n      anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n          function() {\n          }\n      );\n      self.ctrlbtns.prop(\"disabled\", false);\n\n      if (self.itemdata.timelimit > 0) {\n          self.progresscont.show();\n          self.progresscont.find('i').show();\n          var progresbar = self.progresscont.find('#progresstimer').progressTimer({\n              height: '5px',\n              timeLimit: self.itemdata.timelimit,\n              onFinish: function() {\n                  self.skipbtn.trigger('click');\n              }\n          });\n\n          progresbar.each(function() {\n              self.items[self.game.pointer].timer.push($(this).attr('timer'));\n          });\n      }\n\n      if (!self.quizhelper.mobile_user()) {\n          setTimeout(function() {\n              self.audioplayerbtn.trigger('click');\n          }, 1000);\n      }\n\n      //target is the speech we expect\n      var target = self.items[self.game.pointer].target;\n      //in some cases ttrecorder wants to know the target\n      if(self.quizhelper.use_ttrecorder()) {\n        self.ttrec.update_currentprompt(target);\n      }\n    },\n\n    stopTimer: function(timers) {\n      if (timers.length) {\n          timers.forEach(function(timer) {\n              clearInterval(timer);\n          });\n      }\n    },\n\n    do_evaluation: function (pronunciation_result) {\n        var self = this;\n        var itemresultscont = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n        // Clear previous results\n        itemresultscont.html(\"\");\n\n        var twoletterlang = self.itemdata.language.substr(0, 2);\n        if(self.itemdata.rtl){\n            var words = pronunciation_result.privPronJson.Words.reverse();\n        }else{\n            var words = pronunciation_result.privPronJson.Words;\n        }\n      \n      \n        // Render pronunciation feedback for each word\n\n        words.forEach(function (wordobject) {\n            var adata = self.markuphelper.alignPhonemesToLetters(wordobject.Word, \n                wordobject.Phonemes, \n                twoletterlang);\n             self.markuphelper.renderPronunciationFeedback( self.itemdata.uniqueid + \"_container .item-results-container\", adata, self.itemdata.rtl);\n        });\n        return;\n\n      var self = this;\n      var itemresultscont = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n      itemresultscont.html(\"\");\n      \n      var itemresults = [];\n\n      itemresults.push(\"Accuracy score: \" + pronunciation_result.accuracyScore);\n      itemresults.push(\"Pronunciation score: \" + pronunciation_result.pronunciationScore);\n      itemresults.push(\"Completeness score: \" + pronunciation_result.completenessScore);\n      itemresults.push(\"Fluency score: \" + pronunciation_result.fluencyScore);\n      itemresults.push(\"Prosody score: \" +  pronunciation_result.prosodyScore);\n      itemresultscont.append(itemresults.join(\"<br>\"));\n\n        //make a chart for each score\n        var labels = [\"Accuracy\", \"Pronunciation\", \"Completeness\", \"Fluency\", \"Prosody\"];\n        var data = [\n            pronunciation_result.accuracyScore,\n            pronunciation_result.pronunciationScore,\n            pronunciation_result.completenessScore,\n            pronunciation_result.fluencyScore,\n            pronunciation_result.prosodyScore\n        ];\n        labels.forEach(function(label, index) {\n            var chartContainerId = self.itemdata.uniqueid + \"_chart_\" + index;\n            itemresultscont.append('<canvas id=\"' + chartContainerId + '\"></canvas>');\n            self.createRadialChart(chartContainerId, [label], [data[index]]);\n        });\n\n      log.debug(\"Accuracy score: \", pronunciation_result.accuracyScore);\n      log.debug(\"Pronunciation score: \", pronunciation_result.pronunciationScore);\n      log.debug(\"Completeness score : \", pronunciation_result.completenessScore);\n      log.debug(\"Fluency score: \", pronunciation_result.fluencyScore);\n      log.debug(\"Prosody score: \", pronunciation_result.prosodyScore);\n      \n      log.debug(\"  Word-level details:\");\n      pronunciation_result.detailResult.Words.forEach(function (word, idx) {\n          console.log(\"    \", idx + 1, \": word: \", word.Word, \"\\taccuracy score: \", word.PronunciationAssessment.AccuracyScore, \"\\terror type: \", word.PronunciationAssessment.ErrorType, \";\");\n      });\n    },\n\n    createRadialChart: function(containerId, labels, data) {\n        var ctx = document.getElementById(containerId).getContext('2d');\n        new chartjs(ctx, {\n            type: 'doughnut',\n            data: {\n                labels: labels,\n                datasets: [{\n                    label: 'Scores',\n                    data: data,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scale: {\n                    ticks: {\n                        beginAtZero: true,\n                        max: 100\n                    }\n                }\n            }\n        });\n    },\n\n    markuphelper: {\n        // Language mappings for phoneme to grapheme groups\n        languageMappings: {\n            en: {\n                graphemeGroups: [\"sh\", \"th\", \"ch\", \"ph\", \"wh\", \"ck\", \"ng\"],\n                phonemeGroups: {\n                    \"ʃ\": [\"sh\"],\n                    \"tʃ\": [\"ch\"],\n                    \"θ\": [\"th\"],\n                    \"ŋ\": [\"ng\"],\n                }\n            },\n            es: {\n                graphemeGroups: [\"ll\", \"ch\", \"rr\"],\n                phonemeGroups: {\n                    \"ʎ\": [\"ll\"],\n                    \"tʃ\": [\"ch\"],\n                    \"r\": [\"rr\"],\n                }\n            },\n            fr: {\n                graphemeGroups: [\"ch\", \"gn\", \"ou\", \"eau\", \"oi\"],\n                phonemeGroups: {\n                    \"ʃ\": [\"ch\"],\n                    \"ɲ\": [\"gn\"],\n                    \"u\": [\"ou\"],\n                    \"o\": [\"eau\"],\n                    \"wa\": [\"oi\"]\n                }\n            },\n            ar: {\n                graphemeGroups: [], // Arabic uses isolated characters\n                phonemeGroups: {}   // Optional: use Arabic IPA mappings if needed\n            }\n        },\n\n\n        alignPhonemesToLetters: function(word, phonemesWithScores, language = \"en\") {\n            const { graphemeGroups = [], phonemeGroups = {} } = this.languageMappings[language] || {};\n\n            // Normalize letters (strip accents, diacritics)\n            function normalizeWord(word, language) {\n                switch (language) {\n                    case \"ar\": return word.normalize(\"NFKD\").replace(/[\\u064B-\\u065F\\u0670]/g, \"\");\n                    default: return word.normalize(\"NFKD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n                }\n            }\n\n            // Chunk graphemes into known groups\n            function tokenizeGraphemes(word, groups) {\n                const tokens = [];\n                let i = 0;\n                while (i < word.length) {\n                    let matched = false;\n                    for (const g of groups.sort((a, b) => b.length - a.length)) {\n                        if (word.slice(i, i + g.length) === g) {\n                            tokens.push(g);\n                            i += g.length;\n                            matched = true;\n                            break;\n                        }\n                    }\n                    if (!matched) {\n                        tokens.push(word[i]);\n                        i += 1;\n                    }\n                }\n                return tokens;\n            }\n\n            // Tokenize phonemes based on mappings\n            function normalizePhoneme(p) {\n                for (const group in phonemeGroups) {\n                    if (phonemeGroups[group].includes(p)) return group;\n                }\n                return p;\n            }\n\n            const normWord = normalizeWord(word, language);\n            const graphemes = tokenizeGraphemes(normWord, graphemeGroups);\n            const phonemes = phonemesWithScores.map(p => normalizePhoneme(p.Phoneme));\n\n            // Dynamic programming\n            const m = graphemes.length, n = phonemes.length;\n            const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));\n            const traceback = Array(m + 1).fill().map(() => Array(n + 1).fill(null));\n\n            const matchCost = 0, mismatchCost = 1, gap = 1;\n\n            for (let i = 0; i <= m; i++) { dp[i][0] = i * gap; traceback[i][0] = \"up\"; }\n            for (let j = 0; j <= n; j++) { dp[0][j] = j * gap; traceback[0][j] = \"left\"; }\n\n            for (let i = 1; i <= m; i++) {\n                for (let j = 1; j <= n; j++) {\n                    const letter = graphemes[i - 1];\n                    const phoneme = phonemes[j - 1];\n                    const cost = letter === phoneme ? matchCost : mismatchCost;\n\n                    const diag = dp[i - 1][j - 1] + cost;\n                    const up = dp[i - 1][j] + gap;\n                    const left = dp[i][j - 1] + gap;\n\n                    dp[i][j] = Math.min(diag, up, left);\n                    traceback[i][j] = (dp[i][j] === diag) ? \"diag\" : (dp[i][j] === up ? \"up\" : \"left\");\n                }\n            }\n\n            let i = m, j = n;\n            const result = [];\n\n            while (i > 0 || j > 0) {\n                const move = traceback[i][j];\n                if (move === \"diag\") {\n                    result.unshift({\n                        letter: graphemes[i - 1],\n                        phoneme: phonemesWithScores[j - 1].Phoneme,\n                        score: phonemesWithScores[j - 1].PronunciationAssessment.AccuracyScore,\n                    });\n                    i--; j--;\n                } else if (move === \"up\") {\n                    result.unshift({ letter: graphemes[i - 1], phoneme: null, score: null });\n                    i--;\n                } else {\n                    j--;\n                }\n            }\n\n            return result;\n        },\n\n        scoreToColorClass: function(score)\n        {\n            if (score === null) return \"gray\";\n            if (score >= thefluencyitem.phonemeWarningThreshold) return \"green\";\n            if (score >= thefluencyitem.phonemeErrorThreshold) return \"orange\";\n            return \"red\";\n        },\n\n        renderPronunciationFeedback: function(containerId, alignmentData, rtl) {\n            var mhelper = this;\n            const $container = $(\"#\" + containerId);\n\n            const $wrapper = $(\"<div class='fluencywordresult'>\");\n\n            alignmentData.forEach(({letter, phoneme, score}) => {\n                const $span = $(\"<span class='fluencyletterresult'>\")\n                    .text(letter)\n                    .css({\n                        color: mhelper.scoreToColorClass(score),\n                    });\n\n                // Tooltip\n                const tooltipText = score === null\n                    ? \"No phoneme matched\"\n                    : `Phoneme: ${phoneme}, Score: ${score}`;\n                $span.attr(\"title\", tooltipText);\n\n                // Apply color\n                const color = mhelper.scoreToColorClass(score);\n                switch (color) {\n                    case \"green\":\n                        $span.css(\"color\", \"#15803d\");\n                        break;\n                    case \"orange\":\n                        $span.css(\"color\", \"#b45309\");\n                        break;\n                    case \"red\":\n                        $span.css(\"color\", \"#b91c1c\");\n                        break;\n                    case \"gray\":\n                    default:\n                        $span.css(\"color\", \"#6b7280\");\n                        break;\n                }\n               // if(rtl){\n               //     $wrapper.prepend($span);\n               // }else{\n                    $wrapper.append($span);\n               // }\n            });\n\n            $container.append($wrapper);\n        } //end of renderPronunciationFeedback\n    }//end of markup helper\n\n\n    };//end of thefluencyitem\n    return thefluencyitem;\n});"],"names":["define","$","log","def","polly","ttrecorder","anim","progresstimer","templates","chartjs","debug","thefluencyitem","phonemeWarningThreshold","phonemeErrorThreshold","dummyResult","speechConfig","referencetext","game","pointer","usevoice","items","clone","extend","this","init","index","itemdata","quizhelper","init_components","animopts","useanimatecss","register_events","setvoice","getItems","self","thebutton","wordcount","uniqueid","actionbox","pendingbox","resultsbox","timerdisplay","audioplayerbtn","skipbtn","startbtn","smallnextbtn","bignextbtn","ctrlbtns","speakbtncont","questioncont","listencont","mainmenu","controls","progresscont","itemresultscont","opts","callback","message","type","speechresults","results","do_evaluation","stt_guided","ttrec","voiceoption","text_items","sentences","map","target","sentence","prompt","parsedstring","displayprompt","definition","phonetic","words","typed","timer","answered","correct","audio","filter","e","each","item","fetch_polly_url","then","audiourl","Audio","src","length","appReady","hide","show","hidestartpage","start","prop","next_question","percent","stepdata","hasgrade","totalitems","correctitems","grade","do_next","on","readsentence","theaudio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","text","realidx","data","fluency_targetWord","fluency_targetWords","val","stopTimer","setTimeout","nextPrompt","end","updateProgressDots","showitemreview","show_item_review","forEach","spoken","color","progress","idx","join","html","newprompt","do_animate","nextReply","code","character","append","newreply","timelimit","find","progressTimer","height","timeLimit","onFinish","trigger","push","attr","mobile_user","use_ttrecorder","update_currentprompt","timers","clearInterval","pronunciation_result","twoletterlang","language","substr","rtl","privPronJson","Words","reverse","wordobject","adata","markuphelper","alignPhonemesToLetters","Word","Phonemes","renderPronunciationFeedback","createRadialChart","containerId","labels","ctx","document","getElementById","getContext","datasets","label","backgroundColor","borderColor","borderWidth","options","scale","ticks","beginAtZero","max","languageMappings","en","graphemeGroups","phonemeGroups","es","fr","ar","word","phonemesWithScores","normalizeWord","normalize","replace","toLowerCase","tokenizeGraphemes","groups","tokens","i","matched","g","sort","a","b","slice","normalizePhoneme","p","group","includes","normWord","graphemes","phonemes","Phoneme","m","n","dp","Array","fill","traceback","matchCost","mismatchCost","gap","j","cost","diag","up","left","Math","min","result","move","unshift","letter","phoneme","score","PronunciationAssessment","AccuracyScore","scoreToColorClass","alignmentData","mhelper","$container","$wrapper","_ref","$span","css","tooltipText"],"mappings":"AAAAA,gCAAO,CAAC,SAAU,WAAY,6BAA6B,6BACvD,4BAA6B,4BAC7B,+BAAgC,iBAAkB,iBAClD,SAASC,EAAGC,IAAKC,IAAIC,MAAOC,WAAWC,KAAMC,cAAeC,UAAWC,SAOzEP,IAAIQ,MAAM,wCAENC,eAAiB,CACnBC,wBAAyB,GACzBC,sBAAuB,GACvBC,YAAa,cACG,YACE,kBACH,uBACJ,6BACM,2BACF,4CACgB,eACN,gBACD,iBACA,uBACK,aACR,YAER,CACL,MACY,cACE,cACE,6BACe,eACN,aACJ,gBACD,SACG,OACE,YACS,CACV,oBAEW,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,iBACA,+BACe,eACN,WAEX,cACE,gBAGR,CACR,SACe,6BACgB,eACN,WAEX,cACE,KAEhB,SACe,6BACgB,eACN,YAEX,eACE,KAEhB,SACe,4BACgB,eACN,WAEX,eACE,QAIxB,MACY,YACE,cACE,6BACe,eACN,aACJ,gBACD,SACG,OACE,YACS,CACV,wBAEe,YACD,2BAEF,YACE,eAEH,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,eACA,6BACe,eACN,WAEX,cACE,gBAGR,CACR,SACe,6BACgB,eACN,WAEX,cACE,KAEhB,SACe,4BACgB,eACN,WAEX,eACE,OAIxB,MACY,WACE,eACE,4BACe,eACN,cACJ,gBACD,SACG,OACE,YACS,CACV,wBAEe,YACD,2BAEF,YACE,eAEH,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,cACA,4BACe,eACN,YAEX,eACE,eAGR,CACR,SACe,6BACgB,eACN,YAEX,eACE,OAIxB,MACY,gBACE,eACE,6BACe,eACN,aACJ,gBACD,SACG,OACE,YACS,CACV,wBAEe,YACD,2BAEF,YACE,eAEH,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,gBACA,8BACe,eACN,WAEX,eACE,MAEhB,UACgB,gBACA,8BACe,eACN,WAEX,eACE,gBAGR,CACR,SACe,4BACgB,eACN,WAEX,eACE,MAEhB,SACe,6BACgB,eACN,YAEX,eAC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"}