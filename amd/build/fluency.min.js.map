{"version":3,"file":"fluency.min.js","sources":["../src/fluency.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions','mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder', 'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer', 'core/templates', 'core/chartjs'],\n    function($, log, def,polly, ttrecorder,anim, progresstimer, templates, chartjs) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the fluency item type\n   */\n\n  log.debug('MiniLesson Fluency: initialising');\n\n  var thefluencyitem = {\n    phonemeWarningThreshold: 75, // Threshold for phoneme error rate\n    phonemeErrorThreshold: 50, // Threshold for phoneme error rate\n    dummyResult: {\n    \"privPronJson\": {\n        \"Confidence\": 0.84381866,\n        \"Lexical\": \"this is a pencil\",\n        \"ITN\": \"this is a pencil\",\n        \"MaskedITN\": \"this is a pencil\",\n        \"Display\": \"This is a pencil.\",\n        \"PronunciationAssessment\": {\n            \"AccuracyScore\": 42,\n            \"FluencyScore\": 100,\n            \"ProsodyScore\": 81.1,\n            \"CompletenessScore\": 44,\n            \"PronScore\": 61.8\n        },\n        \"Words\": [\n            {\n                \"Word\": \"this\",\n                \"Offset\": 11000000,\n                \"Duration\": 4900000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 94,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"dhihs\",\n                        \"Grapheme\": \"this\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 69\n                        },\n                        \"Offset\": 11000000,\n                        \"Duration\": 4900000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"dh\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 78\n                        },\n                        \"Offset\": 11000000,\n                        \"Duration\": 2000000\n                    },\n                    {\n                        \"Phoneme\": \"ih\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 13100000,\n                        \"Duration\": 600000\n                    },\n                    {\n                        \"Phoneme\": \"s\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 51\n                        },\n                        \"Offset\": 13800000,\n                        \"Duration\": 2100000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"is\",\n                \"Offset\": 16000000,\n                \"Duration\": 1500000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 91,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"UnexpectedBreak\": {\n                                    \"Confidence\": 3.7878788e-8\n                                },\n                                \"MissingBreak\": {\n                                    \"Confidence\": 1\n                                },\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"ihz\",\n                        \"Grapheme\": \"is\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 91\n                        },\n                        \"Offset\": 16000000,\n                        \"Duration\": 1500000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"ih\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 80\n                        },\n                        \"Offset\": 16000000,\n                        \"Duration\": 500000\n                    },\n                    {\n                        \"Phoneme\": \"z\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 98\n                        },\n                        \"Offset\": 16600000,\n                        \"Duration\": 900000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"a\",\n                \"Offset\": 17600000,\n                \"Duration\": 700000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 100,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"UnexpectedBreak\": {\n                                    \"Confidence\": 3.7878788e-8\n                                },\n                                \"MissingBreak\": {\n                                    \"Confidence\": 1\n                                },\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"ax\",\n                        \"Grapheme\": \"a\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 17600000,\n                        \"Duration\": 700000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"ax\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 17600000,\n                        \"Duration\": 700000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"pencil\",\n                \"Offset\": 18400000,\n                \"Duration\": 5700000,\n                \"PronunciationAssessment\": {\n                    \"AccuracyScore\": 97,\n                    \"ErrorType\": \"None\",\n                    \"Feedback\": {\n                        \"Prosody\": {\n                            \"Break\": {\n                                \"ErrorTypes\": [\n                                    \"None\"\n                                ],\n                                \"UnexpectedBreak\": {\n                                    \"Confidence\": 3.7878788e-8\n                                },\n                                \"MissingBreak\": {\n                                    \"Confidence\": 1\n                                },\n                                \"BreakLength\": 0\n                            },\n                            \"Intonation\": {\n                                \"ErrorTypes\": [],\n                                \"Monotone\": {\n                                    \"SyllablePitchDeltaConfidence\": 0.8836736\n                                }\n                            }\n                        }\n                    }\n                },\n                \"Syllables\": [\n                    {\n                        \"Syllable\": \"pehn\",\n                        \"Grapheme\": \"pen\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 94\n                        },\n                        \"Offset\": 18400000,\n                        \"Duration\": 3100000\n                    },\n                    {\n                        \"Syllable\": \"saxl\",\n                        \"Grapheme\": \"cil\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 83\n                        },\n                        \"Offset\": 21600000,\n                        \"Duration\": 2500000\n                    }\n                ],\n                \"Phonemes\": [\n                    {\n                        \"Phoneme\": \"p\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 85\n                        },\n                        \"Offset\": 18400000,\n                        \"Duration\": 1100000\n                    },\n                    {\n                        \"Phoneme\": \"eh\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 19600000,\n                        \"Duration\": 900000\n                    },\n                    {\n                        \"Phoneme\": \"n\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 20600000,\n                        \"Duration\": 900000\n                    },\n                    {\n                        \"Phoneme\": \"s\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 100\n                        },\n                        \"Offset\": 21600000,\n                        \"Duration\": 1200000\n                    },\n                    {\n                        \"Phoneme\": \"ax\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 80\n                        },\n                        \"Offset\": 22900000,\n                        \"Duration\": 600000\n                    },\n                    {\n                        \"Phoneme\": \"l\",\n                        \"PronunciationAssessment\": {\n                            \"AccuracyScore\": 49\n                        },\n                        \"Offset\": 23600000,\n                        \"Duration\": 500000\n                    }\n                ]\n            },\n            {\n                \"Word\": \"and\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"this\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"is\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"a\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            },\n            {\n                \"Word\": \"pen\",\n                \"PronunciationAssessment\": {\n                    \"ErrorType\": \"Omission\"\n                },\n                \"Phonemes\": []\n            }\n        ]\n    }\n},\n\n\n    speechConfig: null,\n    //this is just a placeholder for the actualtext which is from the sentences in items\n    referencetext: 'I met my love by the gas works wall',\n    game: {pointer: 0},\n    usevoice: '',\n    items: null,\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.itemdata = itemdata;\n      this.quizhelper = quizhelper;\n      this.index = index;\n      this.init_components(quizhelper, itemdata);\n\n      // Anim\n      var animopts = {};\n      animopts.useanimatecss = quizhelper.useanimatecss;\n      anim.init(animopts);\n\n      //Events and voice and items parse\n      this.register_events(index, itemdata, quizhelper);\n      this.setvoice();\n      this.getItems();\n    },\n\n    init_components: function(quizhelper,itemdata){\n      var self=this;\n\n      self.thebutton = \"thettrbutton\"; // To Do impl. this\n      self.wordcount = $(\"#\" + self.itemdata.uniqueid + \"_container span.ml_wordcount\");\n      self.actionbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_actionbox\");\n      self.pendingbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_pendingbox\");\n      self.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.fluency_resultscontainer\");\n      self.timerdisplay = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_timerdisplay\");\n      self.audioplayerbtn =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn\");\n      self.audioplayerbtn_audiomodel =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn.audiomodel\");\n      self.audioplayerbtn_audioself =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn.audioself\");\n      self.skipbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_skip_btn\");\n      self.startbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_start_btn\");\n      self.smallnextbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n      self.bignextbtn = $(\".minilesson_nextbutton\");\n      self.ctrlbtns =  $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_ctrl_btn\");\n      self.speakbtncont = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_speakbtncontainer\");\n      self.questioncont = $(\"#\" + self.itemdata.uniqueid + \"_container .question\");\n      self.listencont = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_cont\");\n      self.mainmenu = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_mainmenu\");\n      self.mainstage = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_mainstage\");\n      self.controls = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_controls\");\n      self.progresscont = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\");\n      self.itemresultscont = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n\n      // Callback: Recorder updates.\n      var recorderCallback = function(message) {\n\n        switch (message.type) {\n          case 'recording':\n            break;\n\n          case 'pronunciation_results':\n            var speechresults= message.results;\n            log.debug(speechresults);\n            self.do_evaluation(speechresults);    \n        } //end of switch message type\n      };\n \n        //init tt recorder\n        var opts = {};\n        opts.uniqueid = itemdata.uniqueid;\n        opts.callback = recorderCallback;\n        opts.stt_guided=false;\n        opts.referencetext=this.referencetext;\n        self.ttrec = ttrecorder.clone();\n        self.ttrec.init(opts);\n\n    }, //end of init components\n\n    setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption=self.itemdata.voiceoption;\n            return;\n    },\n\n    getItems: function() {\n      var self = this;\n      var text_items = self.itemdata.sentences;\n\n      self.items = text_items.map(function(target) {\n          return {\n              target: target.sentence,\n              prompt: target.prompt,\n              parsedstring: target.parsedstring,\n              displayprompt: target.displayprompt,\n              definition: target.definition,\n              phonetic: target.phonetic,\n              words: target.words,\n              typed: \"\",\n              timer: [],\n              answered: false,\n              correct: false,\n              audio: null\n          };\n      }).filter(function(e) {\n          return e.target !== \"\";\n      });\n\n\n      $.each(self.items, function(index, item) {\n        polly.fetch_polly_url(item.prompt,  self.voiceoption, self.usevoice).then(function(audiourl) {\n          item.audio = new Audio();\n          item.audio.src = audiourl;\n          if (self.items.filter(function(e) {\n              return e.audio === null;\n            }).length === 0) {\n            self.appReady();\n          }\n        });\n      });\n    },\n\n    appReady: function() {\n      var self = this;\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_not_loaded\").hide();\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_loaded\").show();\n      if(self.itemdata.hidestartpage){\n          self.start();\n      }else{\n          $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_start_btn\").prop(\"disabled\", false);\n      }\n  },\n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = self.items.length;\n      stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n      stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n        var review_data = {};\n        review_data.correctitems = self.items.filter(function(e) {return e.correct;}).length;\n        review_data.totalitems = self.items.length;\n        review_data.items = self.items;\n      stepdata.resultsdata = review_data;\n      self.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      \n      var self = this;\n      // On next button click\n      self.bignextbtn.on('click', function(e) {\n          self.next_question();\n      });\n\n      // On start button click\n      self.startbtn.on(\"click\", function() {\n          self.start();\n      });\n\n      //AUDIO PLAYER Button events\n      // On listen button click\n      if(self.itemdata.readsentence) {\n          self.audioplayerbtn.on(\"click\", function () {\n            const $button = $(this);  // capture the button\n            if($button.hasClass('audioself')) {\n              var theaudio = self.items[self.game.pointer].audioself;\n            }else{\n              var theaudio = self.items[self.game.pointer].audio;\n            }\n\n            //if we are already playing stop playing\n            if(!theaudio.paused){\n                theaudio.pause();\n                theaudio.currentTime=0;\n                $button.children('.fa').removeClass('fa-stop');\n                $button.children('.fa').addClass('fa-play');\n                return;\n            }\n\n            //change icon to indicate playing state\n            theaudio.addEventListener('ended', function () {\n                $button.children('.fa').removeClass('fa-stop');\n                $button.children('.fa').addClass('fa-play');\n                // self.do_evaluation(self.dummyResult);  \n\n            });\n\n            theaudio.addEventListener('play', function () {\n                $button.children('.fa').removeClass('fa-play');\n                $button.children('.fa').addClass('fa-stop');\n            });\n            theaudio.load();\n            theaudio.play();\n          });\n      }\n\n      // On skip button click\n      self.skipbtn.on(\"click\", function() {\n\n          self.stopTimer(self.items[self.game.pointer].timer);\n\n          if (self.game.pointer < self.items.length - 1) {\n              // Move on after short time to next prompt\n              setTimeout(function() {\n                  $(\".fluency_reply_\" + self.game.pointer).hide();\n                  self.game.pointer++;\n                  self.nextPrompt();\n              }, 2000);\n              // End question\n          } else {\n              self.end();\n          }\n      });\n    },\n\n    end: function() {\n      var self = this;\n      self.bignextbtn.prop(\"disabled\", true);\n\n      //progress dots are updated on next_item. The last item has no next item, so we update from here\n      self.updateProgressDots();\n\n      setTimeout(function() {\n          self.bignextbtn.prop(\"disabled\",false);\n          if(self.quizhelper.showitemreview){\n              self.show_item_review();\n          }else{\n              self.next_question();\n          }\n      }, 2000);\n\n  },\n\n  start: function() {\n      var self = this;\n\n      self.ctrlbtns.prop(\"disabled\", true);\n      self.speakbtncont.show();\n\n      self.items.forEach(function(item) {\n          item.spoken = \"\";\n          item.answered = false;\n          item.correct = false;\n      });\n\n      self.game.pointer = 0;\n\n      self.questioncont.show();\n      if(self.itemdata.readsentence) {\n          self.listencont.show();\n      }\n      self.startbtn.hide();\n      self.mainmenu.hide();\n      self.controls.show();\n\n      self.nextPrompt();\n  },\n\n  show_item_review:function(){\n      var self=this;\n      //build review data\n      var review_data = {};\n      review_data.correctitems = self.items.filter(function(e) {return e.correct;}).length;\n      review_data.totalitems = self.items.length;\n      review_data.items = self.items;\n\n      //display results\n      templates.render('mod_minilesson/listitemresults',review_data).then(\n        function(html,js){\n            self.resultsbox.html(html);\n            //show and hide\n            self.resultsbox.show();\n            self.mainstage.hide();\n            // Run js for audio player events\n            templates.runTemplateJS(js);\n        }\n      );// End of templates\n    },\n\n  updateProgressDots: function(){\n      var self = this;\n      var color;\n      var progress = self.items.map(function(item, idx) {\n          color = \"gray\";\n          if (self.items[idx].answered && self.items[idx].correct) {\n              color = \"green\";\n          } else if (self.items[idx].answered && !self.items[idx].correct) {\n              color = \"red\";\n          }\n          return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n      }).join(\" \");\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_title\").html(progress);\n  },\n\n  nextPrompt: function() {\n      var self = this;\n      self.ctrlbtns.prop(\"disabled\", false);\n      self.updateProgressDots();\n      var newprompt = $(\".fluency_prompt_\" + self.game.pointer);\n      anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n          function() {\n          }\n      );\n      self.nextReply();\n  },\n  \n\n  nextReply: function() {\n      var self = this;\n\n      var code = \"<div class='fluency_reply fluency_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n      code += \"<div class='form-container'>\";\n      self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n          if (data.type === 'input') {\n              code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n          } else if (data.type === 'mtext') {\n              code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n          } else {\n              code += data.character;\n          }\n      });\n      //correct or not\n      code += \" <i data-idx='\" + self.game.pointer + \"' class='fluency_feedback'></i></div>\";\n\n      //definition\n      code += \"<div class='item-results-container'>\";\n      code += \"</div>\";\n\n\n      $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n      var newreply = $(\".fluency_reply_\" + self.game.pointer);\n      anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n          function() {\n          }\n      );\n      self.ctrlbtns.prop(\"disabled\", false);\n\n      if (self.itemdata.timelimit > 0) {\n          self.progresscont.show();\n          self.progresscont.find('i').show();\n          var progresbar = self.progresscont.find('#progresstimer').progressTimer({\n              height: '5px',\n              timeLimit: self.itemdata.timelimit,\n              onFinish: function() {\n                  self.skipbtn.trigger('click');\n              }\n          });\n\n          progresbar.each(function() {\n              self.items[self.game.pointer].timer.push($(this).attr('timer'));\n          });\n      }\n\n      //Hide the response audio because its not ready yet\n       self.audioplayerbtn_audioself.hide();\n\n      //Autoplay the audio\n      if (!self.quizhelper.mobile_user()) {\n          setTimeout(function() {\n              self.audioplayerbtn_audiomodel.trigger('click');\n          }, 1000);\n      }\n\n      //target is the speech we expect\n      var target = self.items[self.game.pointer].target;\n      //in some cases ttrecorder wants to know the target\n      if(self.quizhelper.use_ttrecorder()) {\n        self.ttrec.update_currentprompt(target);\n      }\n    },\n\n    stopTimer: function(timers) {\n      if (timers.length) {\n          timers.forEach(function(timer) {\n              clearInterval(timer);\n          });\n      }\n    },\n\n    do_evaluation: function (pronunciation_result) {\n        var self = this;\n        var itemresultscont = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n        // Clear previous results\n        itemresultscont.html(\"\");\n\n        var twoletterlang = self.itemdata.language.substr(0, 2);\n        if(self.itemdata.rtl){\n            var words = pronunciation_result.privPronJson.Words.reverse();\n        }else{\n            var words = pronunciation_result.privPronJson.Words;\n        }\n      \n      \n        // Render pronunciation feedback for each word\n\n        words.forEach(function (wordobject) {\n            //MS Returns syllables, at least for English, and these have a grapheme so its the best data\n            if(wordobject.Syllables){\n                var adata =[];\n                wordobject.Syllables.forEach(function(syllable){\n                    adata.push({\n                        letter: syllable.Grapheme,\n                        phoneme: syllable.Syllable,\n                        score: syllable.PronunciationAssessment.AccuracyScore,\n                    });\n                });\n            //If no syllable data we do our best to simulate it    \n            }else{\n                var adata = self.markuphelper.alignPhonemesToLetters(wordobject.Word, \n                    wordobject.Phonemes, \n                    twoletterlang);\n            }\n             self.markuphelper.renderPronunciationFeedback( self.itemdata.uniqueid + \"_container .item-results-container\", adata, self.itemdata.rtl);\n        });\n\n        //store results for later use\n        self.items[self.game.pointer].pronunciation_result = pronunciation_result;\n        self.items[self.game.pointer].answered = true;\n        self.items[self.game.pointer].correct = pronunciation_result.privPronJson.PronunciationAssessment.AccuracyScore >= self.phonemeWarningThreshold;\n        self.items[self.game.pointer].audioself = new Audio();\n        self.items[self.game.pointer].audioself.src = URL.createObjectURL(self.ttrec.audio.blob);\n\n        //since we now have audio, show the self audio player button\n        self.audioplayerbtn_audioself.show();\n\n        //update progress dots\n        self.updateProgressDots();\n        \n        //We no longer do this!!! left in for future ref.\n        // If we are correct move to next item\n        if(false && self.items[self.game.pointer].correct ){\n            if ((self.game.pointer < self.items.length - 1)) {\n                log.debug('moving to next prompt B');\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextReply();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        }\n        \n        return;\n\n      var self = this;\n      var itemresultscont = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n      itemresultscont.html(\"\");\n      \n      var itemresults = [];\n\n      itemresults.push(\"Accuracy score: \" + pronunciation_result.accuracyScore);\n      itemresults.push(\"Pronunciation score: \" + pronunciation_result.pronunciationScore);\n      itemresults.push(\"Completeness score: \" + pronunciation_result.completenessScore);\n      itemresults.push(\"Fluency score: \" + pronunciation_result.fluencyScore);\n      itemresults.push(\"Prosody score: \" +  pronunciation_result.prosodyScore);\n      itemresultscont.append(itemresults.join(\"<br>\"));\n\n        //make a chart for each score\n        var labels = [\"Accuracy\", \"Pronunciation\", \"Completeness\", \"Fluency\", \"Prosody\"];\n        var data = [\n            pronunciation_result.accuracyScore,\n            pronunciation_result.pronunciationScore,\n            pronunciation_result.completenessScore,\n            pronunciation_result.fluencyScore,\n            pronunciation_result.prosodyScore\n        ];\n        labels.forEach(function(label, index) {\n            var chartContainerId = self.itemdata.uniqueid + \"_chart_\" + index;\n            itemresultscont.append('<canvas id=\"' + chartContainerId + '\"></canvas>');\n            self.createRadialChart(chartContainerId, [label], [data[index]]);\n        });\n\n      log.debug(\"Accuracy score: \", pronunciation_result.accuracyScore);\n      log.debug(\"Pronunciation score: \", pronunciation_result.pronunciationScore);\n      log.debug(\"Completeness score : \", pronunciation_result.completenessScore);\n      log.debug(\"Fluency score: \", pronunciation_result.fluencyScore);\n      log.debug(\"Prosody score: \", pronunciation_result.prosodyScore);\n      \n      log.debug(\"  Word-level details:\");\n      pronunciation_result.detailResult.Words.forEach(function (word, idx) {\n          console.log(\"    \", idx + 1, \": word: \", word.Word, \"\\taccuracy score: \", word.PronunciationAssessment.AccuracyScore, \"\\terror type: \", word.PronunciationAssessment.ErrorType, \";\");\n      });\n    },\n\n    createRadialChart: function(containerId, labels, data) {\n        var ctx = document.getElementById(containerId).getContext('2d');\n        new chartjs(ctx, {\n            type: 'doughnut',\n            data: {\n                labels: labels,\n                datasets: [{\n                    label: 'Scores',\n                    data: data,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scale: {\n                    ticks: {\n                        beginAtZero: true,\n                        max: 100\n                    }\n                }\n            }\n        });\n    },\n\n    markuphelper: {\n        // Language mappings for phoneme to grapheme groups\n        languageMappings: {\n            en: {\n                graphemeGroups: [\"sh\", \"th\", \"ch\", \"ph\", \"wh\", \"ck\", \"ng\"],\n                phonemeGroups: {\n                    \"ʃ\": [\"sh\"],\n                    \"tʃ\": [\"ch\"],\n                    \"θ\": [\"th\"],\n                    \"ŋ\": [\"ng\"],\n                }\n            },\n            es: {\n                graphemeGroups: [\"ll\", \"ch\", \"rr\"],\n                phonemeGroups: {\n                    \"ʎ\": [\"ll\"],\n                    \"tʃ\": [\"ch\"],\n                    \"r\": [\"rr\"],\n                }\n            },\n            fr: {\n                graphemeGroups: [\"ch\", \"gn\", \"ou\", \"eau\", \"oi\"],\n                phonemeGroups: {\n                    \"ʃ\": [\"ch\"],\n                    \"ɲ\": [\"gn\"],\n                    \"u\": [\"ou\"],\n                    \"o\": [\"eau\"],\n                    \"wa\": [\"oi\"]\n                }\n            },\n            ar: {\n                graphemeGroups: [], // Arabic uses isolated characters\n                phonemeGroups: {}   // Optional: use Arabic IPA mappings if needed\n            }\n        },\n\n\n        alignPhonemesToLetters: function(word, phonemesWithScores, language = \"en\") {\n            const { graphemeGroups = [], phonemeGroups = {} } = this.languageMappings[language] || {};\n\n            // Normalize letters (strip accents, diacritics)\n            function normalizeWord(word, language) {\n                switch (language) {\n                    case \"ar\": return word.normalize(\"NFKD\").replace(/[\\u064B-\\u065F\\u0670]/g, \"\");\n                    default: return word.normalize(\"NFKD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n                }\n            }\n\n            // Chunk graphemes into known groups\n            function tokenizeGraphemes(word, groups) {\n                const tokens = [];\n                let i = 0;\n                while (i < word.length) {\n                    let matched = false;\n                    for (const g of groups.sort((a, b) => b.length - a.length)) {\n                        if (word.slice(i, i + g.length) === g) {\n                            tokens.push(g);\n                            i += g.length;\n                            matched = true;\n                            break;\n                        }\n                    }\n                    if (!matched) {\n                        tokens.push(word[i]);\n                        i += 1;\n                    }\n                }\n                return tokens;\n            }\n\n            // Tokenize phonemes based on mappings\n            function normalizePhoneme(p) {\n                for (const group in phonemeGroups) {\n                    if (phonemeGroups[group].includes(p)) return group;\n                }\n                return p;\n            }\n\n            const normWord = normalizeWord(word, language);\n            const graphemes = tokenizeGraphemes(normWord, graphemeGroups);\n            const phonemes = phonemesWithScores.map(p => normalizePhoneme(p.Phoneme));\n\n            // Dynamic programming\n            const m = graphemes.length, n = phonemes.length;\n            const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));\n            const traceback = Array(m + 1).fill().map(() => Array(n + 1).fill(null));\n\n            const matchCost = 0, mismatchCost = 1, gap = 1;\n\n            for (let i = 0; i <= m; i++) { dp[i][0] = i * gap; traceback[i][0] = \"up\"; }\n            for (let j = 0; j <= n; j++) { dp[0][j] = j * gap; traceback[0][j] = \"left\"; }\n\n            for (let i = 1; i <= m; i++) {\n                for (let j = 1; j <= n; j++) {\n                    const letter = graphemes[i - 1];\n                    const phoneme = phonemes[j - 1];\n                    const cost = letter === phoneme ? matchCost : mismatchCost;\n\n                    const diag = dp[i - 1][j - 1] + cost;\n                    const up = dp[i - 1][j] + gap;\n                    const left = dp[i][j - 1] + gap;\n\n                    dp[i][j] = Math.min(diag, up, left);\n                    traceback[i][j] = (dp[i][j] === diag) ? \"diag\" : (dp[i][j] === up ? \"up\" : \"left\");\n                }\n            }\n\n            let i = m, j = n;\n            const result = [];\n\n            while (i > 0 || j > 0) {\n                const move = traceback[i][j];\n                if (move === \"diag\") {\n                    result.unshift({\n                        letter: graphemes[i - 1],\n                        phoneme: phonemesWithScores[j - 1].Phoneme,\n                        score: phonemesWithScores[j - 1].PronunciationAssessment.AccuracyScore,\n                    });\n                    i--; j--;\n                } else if (move === \"up\") {\n                    result.unshift({ letter: graphemes[i - 1], phoneme: null, score: null });\n                    i--;\n                } else {\n                    j--;\n                }\n            }\n\n            return result;\n        },\n\n        scoreToColorClass: function(score)\n        {\n            if (score === null) return \"letter_missing\"; //grey\n            if (score >= thefluencyitem.phonemeWarningThreshold) return \"letter_good\"; //green\n            if (score >= thefluencyitem.phonemeErrorThreshold) return \"letter_fair\"; //orange\n            return \"letter_wrong\"; //red\n        },\n\n        renderPronunciationFeedback: function(containerId, alignmentData, rtl) {\n            var mhelper = this;\n            const $container = $(\"#\" + containerId);\n\n            const $wrapper = $(\"<div class='fluencywordresult'>\");\n\n            alignmentData.forEach(({letter, phoneme, score}) => {\n                var resultcolorclass = mhelper.scoreToColorClass(score);\n                const $span = $(\"<span class='fluencyletterresult \" + resultcolorclass + \"'>\")\n                    .text(letter);\n\n                // Tooltip\n                const tooltipText = score === null\n                    ? \"No phoneme matched\"\n                    : `Phoneme: ${phoneme}, Score: ${score}`;\n                $span.attr(\"title\", tooltipText);\n                $wrapper.append($span);\n            });\n\n            $container.append($wrapper);\n        } //end of renderPronunciationFeedback\n    }//end of markup helper\n\n\n    };//end of thefluencyitem\n    return thefluencyitem;\n});"],"names":["define","$","log","def","polly","ttrecorder","anim","progresstimer","templates","chartjs","debug","thefluencyitem","phonemeWarningThreshold","phonemeErrorThreshold","dummyResult","speechConfig","referencetext","game","pointer","usevoice","items","clone","extend","this","init","index","itemdata","quizhelper","init_components","animopts","useanimatecss","register_events","setvoice","getItems","self","thebutton","wordcount","uniqueid","actionbox","pendingbox","resultsbox","timerdisplay","audioplayerbtn","audioplayerbtn_audiomodel","audioplayerbtn_audioself","skipbtn","startbtn","smallnextbtn","bignextbtn","ctrlbtns","speakbtncont","questioncont","listencont","mainmenu","mainstage","controls","progresscont","itemresultscont","opts","callback","message","type","speechresults","results","do_evaluation","stt_guided","ttrec","voiceoption","text_items","sentences","map","target","sentence","prompt","parsedstring","displayprompt","definition","phonetic","words","typed","timer","answered","correct","audio","filter","e","each","item","fetch_polly_url","then","audiourl","Audio","src","length","appReady","hide","show","hidestartpage","start","prop","next_question","stepdata","hasgrade","totalitems","correctitems","grade","Math","round","review_data","resultsdata","do_next","on","readsentence","$button","hasClass","theaudio","audioself","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","stopTimer","setTimeout","nextPrompt","end","updateProgressDots","showitemreview","show_item_review","forEach","spoken","render","html","js","runTemplateJS","color","progress","idx","join","newprompt","do_animate","nextReply","code","data","character","append","newreply","timelimit","find","progressTimer","height","timeLimit","onFinish","trigger","push","attr","mobile_user","use_ttrecorder","update_currentprompt","timers","clearInterval","pronunciation_result","twoletterlang","language","substr","rtl","privPronJson","Words","reverse","wordobject","Syllables","adata","syllable","letter","Grapheme","phoneme","Syllable","score","PronunciationAssessment","AccuracyScore","markuphelper","alignPhonemesToLetters","Word","Phonemes","renderPronunciationFeedback","URL","createObjectURL","blob","createRadialChart","containerId","labels","ctx","document","getElementById","getContext","datasets","label","backgroundColor","borderColor","borderWidth","options","scale","ticks","beginAtZero","max","languageMappings","en","graphemeGroups","phonemeGroups","es","fr","ar","word","phonemesWithScores","normalizeWord","normalize","replace","toLowerCase","tokenizeGraphemes","groups","tokens","i","matched","g","sort","a","b","slice","normalizePhoneme","p","group","includes","normWord","graphemes","phonemes","Phoneme","m","n","dp","Array","fill","traceback","matchCost","mismatchCost","gap","j","cost","diag","up","left","min","result","move","unshift","scoreToColorClass","alignmentData","mhelper","$container","$wrapper","_ref","resultcolorclass","$span","text","tooltipText"],"mappings":"AAAAA,gCAAO,CAAC,SAAU,WAAY,6BAA6B,6BACvD,4BAA6B,4BAC7B,+BAAgC,iBAAkB,iBAClD,SAASC,EAAGC,IAAKC,IAAIC,MAAOC,WAAWC,KAAMC,cAAeC,UAAWC,SAOzEP,IAAIQ,MAAM,wCAENC,eAAiB,CACnBC,wBAAyB,GACzBC,sBAAuB,GACvBC,YAAa,cACG,YACE,kBACH,uBACJ,6BACM,2BACF,4CACgB,eACN,gBACD,iBACA,uBACK,aACR,YAER,CACL,MACY,cACE,cACE,6BACe,eACN,aACJ,gBACD,SACG,OACE,YACS,CACV,oBAEW,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,iBACA,+BACe,eACN,WAEX,cACE,gBAGR,CACR,SACe,6BACgB,eACN,WAEX,cACE,KAEhB,SACe,6BACgB,eACN,YAEX,eACE,KAEhB,SACe,4BACgB,eACN,WAEX,eACE,QAIxB,MACY,YACE,cACE,6BACe,eACN,aACJ,gBACD,SACG,OACE,YACS,CACV,wBAEe,YACD,2BAEF,YACE,eAEH,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,eACA,6BACe,eACN,WAEX,cACE,gBAGR,CACR,SACe,6BACgB,eACN,WAEX,cACE,KAEhB,SACe,4BACgB,eACN,WAEX,eACE,OAIxB,MACY,WACE,eACE,4BACe,eACN,cACJ,gBACD,SACG,OACE,YACS,CACV,wBAEe,YACD,2BAEF,YACE,eAEH,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,cACA,4BACe,eACN,YAEX,eACE,eAGR,CACR,SACe,6BACgB,eACN,YAEX,eACE,OAIxB,MACY,gBACE,eACE,6BACe,eACN,aACJ,gBACD,SACG,OACE,YACS,CACV,wBAEe,YACD,2BAEF,YACE,eAEH,cAEL,YACI,YACF,8BACwB,wBAMvC,CACT,UACgB,gBACA,8BACe,eACN,WAEX,eACE,MAEhB,UACgB,gBACA,8BACe,eACN,WAEX,eACE,gBAGR,CACR,SACe,4BACgB,eACN,WAEX,eACE,MAEhB,SACe,6BACgB,eACN,YAEX,eAC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"}