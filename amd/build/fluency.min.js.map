{"version":3,"file":"fluency.min.js","sources":["../src/fluency.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions','mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder', 'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer', 'core/templates', 'core/chartjs'],\n    function($, log, def,polly, ttrecorder,anim, progresstimer, templates, chartjs) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the fluency item type\n   */\n\n  log.debug('MiniLesson Fluency: initialising');\n\n  var thefluencyitem = {\n    phonemeWarningThreshold: 75, // Threshold for phoneme error rate\n    phonemeErrorThreshold: 50, // Threshold for phoneme error rate\n\n    speechConfig: null,\n    //this is just a placeholder for the actualtext which is from the sentences in items\n    referencetext: 'I met my love by the gas works wall',\n    game: {pointer: 0},\n    usevoice: '',\n    items: null,\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.itemdata = itemdata;\n      this.quizhelper = quizhelper;\n      this.index = index;\n      this.init_components(quizhelper, itemdata);\n\n      // Anim\n      var animopts = {};\n      animopts.useanimatecss = quizhelper.useanimatecss;\n      anim.init(animopts);\n\n      //Events and voice and items parse\n      this.register_events(index, itemdata, quizhelper);\n      this.setvoice();\n      this.getItems();\n    },\n\n    init_components: function(quizhelper,itemdata){\n      var self=this;\n\n      self.thebutton = \"thettrbutton\"; // To Do impl. this\n      self.wordcount = $(\"#\" + self.itemdata.uniqueid + \"_container span.ml_wordcount\");\n      self.actionbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_actionbox\");\n      self.pendingbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_pendingbox\");\n      self.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.fluency_resultscontainer\");\n      self.timerdisplay = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_fluency_timerdisplay\");\n      self.audioplayerbtn =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn\");\n      self.audioplayerbtn_audiomodel =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn.audiomodel\");\n      self.audioplayerbtn_audioself =$(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_btn.audioself\");\n      self.skipbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_skip_btn\");\n      self.startbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_start_btn\");\n      self.smallnextbtn = $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n      self.ctrlbtns =  $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_ctrl_btn\");\n      self.speakbtncont = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_speakbtncontainer\");\n      self.questioncont = $(\"#\" + self.itemdata.uniqueid + \"_container .question\");\n      self.listencont = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_listen_cont\");\n      self.mainmenu = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_mainmenu\");\n      self.mainstage = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_mainstage\");\n      self.controls = $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_controls\");\n      self.progresscont = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\");\n\n      // Callback: Recorder updates.\n      var recorderCallback = function(message) {\n\n        switch (message.type) {\n          case 'recording':\n            break;\n\n          case 'pronunciation_results':\n            var speechresults= message.results;\n            log.debug(speechresults);\n            self.do_evaluation(speechresults);    \n        } //end of switch message type\n      };\n \n        //init tt recorder\n        var opts = {};\n        opts.uniqueid = itemdata.uniqueid;\n        opts.callback = recorderCallback;\n        opts.stt_guided=false;\n        opts.referencetext=this.referencetext;\n        self.ttrec = ttrecorder.clone();\n        self.ttrec.init(opts);\n\n    }, //end of init components\n\n    setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption=self.itemdata.voiceoption;\n            return;\n    },\n\n    getItems: function() {\n      var self = this;\n      var text_items = self.itemdata.sentences;\n\n      self.items = text_items.map(function(target) {\n          return {\n              target: target.sentence,\n              prompt: target.prompt,\n              parsedstring: target.parsedstring,\n              displayprompt: target.displayprompt,\n              definition: target.definition,\n              phonetic: target.phonetic,\n              words: target.words,\n              typed: \"\",\n              timer: [],\n              answered: false,\n              correct: false,\n              audio: null,\n              audiourl: target.audiourl ? target.audiourl : \"\",\n              imageurl: target.imageurl,\n          };\n      }).filter(function(e) {\n          return e.target !== \"\";\n      });\n\n      $.each(self.items, function(index, item) {\n          item.audio = new Audio();\n          item.audio.src = item.audiourl;\n          if (self.items.filter(function(e) {\n              return e.audio === null;\n            }).length === 0) {\n            self.appReady();\n          }\n      });\n    },\n\n    appReady: function() {\n      var self = this;\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_not_loaded\").hide();\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_loaded\").show();\n      if(self.itemdata.hidestartpage){\n          self.start();\n      }else{\n          $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_start_btn\").prop(\"disabled\", false);\n      }\n  },\n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = self.items.length;\n      stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n      stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n\n      //prepare results data for detailed review on finished page or by teacher\n      var results_data = {};\n      results_data.correctitems = self.items.filter(function(e) {return e.correct;}).length;\n      results_data.totalitems = self.items.length;\n      var includeaudioself = false;\n      results_data.items = self.items_for_results_display(includeaudioself);\n      stepdata.resultsdata = results_data;\n      self.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      \n      var self = this;\n      // On next button click\n      self.smallnextbtn.on('click', function(e) {\n          self.next_question();\n      });\n\n      // On start button click\n      self.startbtn.on(\"click\", function() {\n          self.start();\n      });\n\n      //AUDIO PLAYER Button events\n      // On listen button click\n      self.audioplayerbtn.on(\"click\", function () {\n        const $button = $(this);  // capture the button\n        if($button.hasClass('audioself')) {\n          var theaudio = self.items[self.game.pointer].audioself;\n        }else{\n          var theaudio = self.items[self.game.pointer].audio;\n        }\n\n        //if we are already playing stop playing\n        if(!theaudio.paused){\n            theaudio.pause();\n            theaudio.currentTime=0;\n            $button.children('.fa').removeClass('fa-stop');\n            $button.children('.fa').addClass('fa-play');\n            return;\n        }\n\n        //change icon to indicate playing state\n        theaudio.addEventListener('ended', function () {\n            $button.children('.fa').removeClass('fa-stop');\n            $button.children('.fa').addClass('fa-play');\n        });\n\n        theaudio.addEventListener('play', function () {\n            $button.children('.fa').removeClass('fa-play');\n            $button.children('.fa').addClass('fa-stop');\n        });\n        theaudio.load();\n        theaudio.play();\n      });\n\n\n      // On skip button click\n      self.skipbtn.on(\"click\", function() {\n\n          self.stopTimer(self.items[self.game.pointer].timer);\n\n          if (self.game.pointer < self.items.length - 1) {\n              // Move on after short time to next prompt\n              setTimeout(function() {\n                  $(\".fluency_reply_\" + self.game.pointer).hide();\n                  self.game.pointer++;\n                  self.nextPrompt();\n              }, 2000);\n              // End question\n          } else {\n              self.end();\n          }\n      });\n    },\n\n    end: function() {\n      var self = this;\n      self.smallnextbtn.prop(\"disabled\", true);\n\n      //progress dots are updated on next_item. The last item has no next item, so we update from here\n      self.updateProgressDots();\n\n      setTimeout(function() {\n          self.smallnextbtn.prop(\"disabled\",false);\n          if(self.quizhelper.showitemreview){\n              self.show_item_review();\n          }else{\n              self.next_question();\n          }\n      }, 2000);\n\n  },\n\n  start: function() {\n      var self = this;\n\n      self.ctrlbtns.prop(\"disabled\", true);\n      self.speakbtncont.show();\n\n      self.items.forEach(function(item) {\n          item.spoken = \"\";\n          item.answered = false;\n          item.correct = false;\n      });\n\n      self.game.pointer = 0;\n\n      self.questioncont.show();\n      self.listencont.show();\n      self.startbtn.hide();\n      self.mainmenu.hide();\n      self.controls.show();\n\n      self.nextPrompt();\n  },\n\n  show_item_review:function(){\n      var self=this;\n      //build review data\n      var review_data = {};\n      review_data.correctitems = self.items.filter(function(e) {return e.correct;}).length;\n      review_data.totalitems = self.items.length;\n      var includeaudioself = true;\n      review_data.items = self.items_for_results_display(includeaudioself);\n\n      //display results\n      templates.render('mod_minilesson/listitemresults',review_data).then(\n        function(html,js){\n            self.resultsbox.html(html);\n            //show and hide\n            self.resultsbox.show();\n            self.mainstage.hide();\n            // Run js for audio player events\n            templates.runTemplateJS(js);\n        }\n      );// End of templates\n    },\n\n  updateProgressDots: function(){\n      var self = this;\n      var color;\n      var progress = self.items.map(function(item, idx) {\n          color = \"gray\";\n          if (self.items[idx].answered && self.items[idx].correct) {\n              color = \"green\";\n          } else if (self.items[idx].answered && !self.items[idx].correct) {\n              color = \"red\";\n          }\n          return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n      }).join(\" \");\n      $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_title\").html(progress);\n  },\n\n  nextPrompt: function() {\n      var self = this;\n      self.ctrlbtns.prop(\"disabled\", false);\n      self.updateProgressDots();\n      var newprompt = $(\".fluency_prompt_\" + self.game.pointer);\n      anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n          function() {\n          }\n      );\n      self.nextReply();\n  },\n  \n\n  nextReply: function() {\n      var self = this;\n\n      var code = \"<div class='fluency_reply fluency_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n      code += \"<div class='form-container'>\";\n      self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n          if (data.type === 'input') {\n              code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n          } else if (data.type === 'mtext') {\n              code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n          } else {\n              code += data.character;\n          }\n      });\n      //correct or not\n      code += \" <i data-idx='\" + self.game.pointer + \"' class='fluency_feedback'></i></div>\";\n\n      //definition\n      code += \"<div class='item-results-container'>\";\n      code += \"</div>\";\n\n\n      $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n      var newreply = $(\".fluency_reply_\" + self.game.pointer);\n      anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n          function() {\n          }\n      );\n      self.ctrlbtns.prop(\"disabled\", false);\n\n      if (self.itemdata.timelimit > 0) {\n          self.progresscont.show();\n          self.progresscont.find('i').show();\n          var progresbar = self.progresscont.find('#progresstimer').progressTimer({\n              height: '5px',\n              timeLimit: self.itemdata.timelimit,\n              onFinish: function() {\n                  self.skipbtn.trigger('click');\n              }\n          });\n\n          progresbar.each(function() {\n              self.items[self.game.pointer].timer.push($(this).attr('timer'));\n          });\n      }\n\n      //Hide the response audio because its not ready yet\n       self.audioplayerbtn_audioself.hide();\n\n      //Autoplay the audio\n      if (!self.quizhelper.mobile_user()) {\n          setTimeout(function() {\n              self.audioplayerbtn_audiomodel.trigger('click');\n          }, 1000);\n      }\n\n      //target is the speech we expect\n      var target = self.items[self.game.pointer].target;\n      //in some cases ttrecorder wants to know the target\n      if(self.quizhelper.use_ttrecorder()) {\n        self.ttrec.update_currentprompt(target);\n      }\n    },\n\n    stopTimer: function(timers) {\n      if (timers.length) {\n          timers.forEach(function(timer) {\n              clearInterval(timer);\n          });\n      }\n    },\n\n    do_evaluation: function (pronunciation_result) {\n        var self = this;\n        //this is part of the generated html for each sentence in the item, so we need to create a handle each time\n        var itemresultscontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n\n        // Clear previous results\n        itemresultscontainer.html(\"\");\n\n        var twoletterlang = self.itemdata.language.substr(0, 2);\n        if(self.itemdata.rtl){\n            var words = pronunciation_result.privPronJson.Words.reverse();\n        }else{\n            var words = pronunciation_result.privPronJson.Words;\n        }\n      \n      \n        // Render pronunciation feedback for each word\n        var lineresulthtml=\"\";\n        words.forEach(function (wordobject) {\n            //MS Returns syllables, at least for English, and these have a grapheme so its the best data\n            //for some words e.g \"didn't\" sometimes the grapheme is missing. duh\n            //so we send it down the no grapheme path\n            var have_graphemes = wordobject.Syllables && wordobject.Syllables.length > 0 && wordobject.Syllables[0].Grapheme;\n            if(have_graphemes){\n                var adata =[];\n                wordobject.Syllables.forEach(function(syllable){\n                    adata.push({\n                        letter: syllable.Grapheme,\n                        phoneme: syllable.Syllable,\n                        score: syllable.PronunciationAssessment.AccuracyScore,\n                    });\n                });\n            //If no syllable data we do our best to simulate it    \n            }else{\n                var adata = self.markuphelper.alignPhonemesToLetters(wordobject.Word, \n                    wordobject.Phonemes, \n                    twoletterlang);\n            }\n            lineresulthtml += self.markuphelper.renderPronunciationFeedback(adata);\n        });\n\n        //Display result\n        itemresultscontainer.html(lineresulthtml);\n\n        //store results for later use\n        self.items[self.game.pointer].pronunciation_result = pronunciation_result;\n        self.items[self.game.pointer].answered = true;\n        self.items[self.game.pointer].correct = pronunciation_result.privPronJson.PronunciationAssessment.AccuracyScore >= self.phonemeWarningThreshold;\n        self.items[self.game.pointer].audioself = new Audio();\n        self.items[self.game.pointer].audioself.src = URL.createObjectURL(self.ttrec.audio.blob);\n        self.items[self.game.pointer].lineresulthtml = lineresulthtml;\n\n        //since we now have audio, show the self audio player button\n        self.audioplayerbtn_audioself.show();\n\n        //update progress dots\n        self.updateProgressDots();\n        \n        //We no longer do this!!! left in for future ref.\n        // If we are correct move to next item\n        if(false && self.items[self.game.pointer].correct ){\n            if ((self.game.pointer < self.items.length - 1)) {\n                log.debug('moving to next prompt B');\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .fluency_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextReply();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        }\n    },\n\n      //The old evaluation display with some radial charts etc. We might want to use it later\n      oldDoEvaluation: function(pronunciation_result) {\n        var self = this;\n        //this is part of the generated html for each sentence in the item, so we need to create a handle each time\n        var itemresultscontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .item-results-container\");\n\n        // Clear previous results\n        itemresultscontainer.html(\"\");\n        var itemresults = [];\n\n        itemresults.push(\"Accuracy score: \" + pronunciation_result.accuracyScore);\n        itemresults.push(\"Pronunciation score: \" + pronunciation_result.pronunciationScore);\n        itemresults.push(\"Completeness score: \" + pronunciation_result.completenessScore);\n        itemresults.push(\"Fluency score: \" + pronunciation_result.fluencyScore);\n        itemresults.push(\"Prosody score: \" +  pronunciation_result.prosodyScore);\n        itemresultscont.append(itemresults.join(\"<br>\"));\n\n        //make a chart for each score\n        var labels = [\"Accuracy\", \"Pronunciation\", \"Completeness\", \"Fluency\", \"Prosody\"];\n        var data = [\n            pronunciation_result.accuracyScore,\n            pronunciation_result.pronunciationScore,\n            pronunciation_result.completenessScore,\n            pronunciation_result.fluencyScore,\n            pronunciation_result.prosodyScore\n        ];\n        labels.forEach(function(label, index) {\n            var chartContainerId = self.itemdata.uniqueid + \"_chart_\" + index;\n            itemresultscont.append('<canvas id=\"' + chartContainerId + '\"></canvas>');\n            self.createRadialChart(chartContainerId, [label], [data[index]]);\n        });\n\n        log.debug(\"Accuracy score: \", pronunciation_result.accuracyScore);\n        log.debug(\"Pronunciation score: \", pronunciation_result.pronunciationScore);\n        log.debug(\"Completeness score : \", pronunciation_result.completenessScore);\n        log.debug(\"Fluency score: \", pronunciation_result.fluencyScore);\n        log.debug(\"Prosody score: \", pronunciation_result.prosodyScore);\n\n        log.debug(\"  Word-level details:\");\n        pronunciation_result.detailResult.Words.forEach(function (word, idx) {\n            console.log(\"    \", idx + 1, \": word: \", word.Word, \"\\taccuracy score: \", word.PronunciationAssessment.AccuracyScore, \"\\terror type: \", word.PronunciationAssessment.ErrorType, \";\");\n        });\n    },\n\n    createRadialChart: function(containerId, labels, data) {\n        var ctx = document.getElementById(containerId).getContext('2d');\n        new chartjs(ctx, {\n            type: 'doughnut',\n            data: {\n                labels: labels,\n                datasets: [{\n                    label: 'Scores',\n                    data: data,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scale: {\n                    ticks: {\n                        beginAtZero: true,\n                        max: 100\n                    }\n                }\n            }\n        });\n    },\n\n    //Prepare items for display in the listitemresults template (here and letter in finished review)\n    items_for_results_display: function(includeaudioself) {\n          var self = this;\n          return self.items.map(function(target) {\n              return {\n                  target: target.lineresulthtml, //target.sentence,\n                  pronunciation_result: target.pronunciation_result,\n                  answered: target.answered,\n                  correct: target.correct,\n                  audio: target.audio ? {src: target.audio.src} : null,\n                  audioself: (includeaudioself && target.audioself) ? {src: target.audioself.src} : null,\n              };\n          });\n    },\n\n    //Marking up graphemes letters and phonemes is a dark art, we do that in this object\n    markuphelper: {\n        // Language mappings for phoneme to grapheme groups\n        languageMappings: {\n            en: {\n                graphemeGroups: [\"sh\", \"th\", \"ch\", \"ph\", \"wh\", \"ck\", \"ng\"],\n                phonemeGroups: {\n                    \"ʃ\": [\"sh\"],\n                    \"tʃ\": [\"ch\"],\n                    \"θ\": [\"th\"],\n                    \"ŋ\": [\"ng\"],\n                }\n            },\n            es: {\n                graphemeGroups: [\"ll\", \"ch\", \"rr\"],\n                phonemeGroups: {\n                    \"ʎ\": [\"ll\"],\n                    \"tʃ\": [\"ch\"],\n                    \"r\": [\"rr\"],\n                }\n            },\n            fr: {\n                graphemeGroups: [\"ch\", \"gn\", \"ou\", \"eau\", \"oi\"],\n                phonemeGroups: {\n                    \"ʃ\": [\"ch\"],\n                    \"ɲ\": [\"gn\"],\n                    \"u\": [\"ou\"],\n                    \"o\": [\"eau\"],\n                    \"wa\": [\"oi\"]\n                }\n            },\n            ar: {\n                graphemeGroups: [], // Arabic uses isolated characters\n                phonemeGroups: {}   // Optional: use Arabic IPA mappings if needed\n            }\n        },\n\n\n        alignPhonemesToLetters: function(word, phonemesWithScores, language = \"en\") {\n            const { graphemeGroups = [], phonemeGroups = {} } = this.languageMappings[language] || {};\n\n            // Normalize letters (strip accents, diacritics)\n            function normalizeWord(word, language) {\n                switch (language) {\n                    case \"ar\": return word.normalize(\"NFKD\").replace(/[\\u064B-\\u065F\\u0670]/g, \"\");\n                    default: return word.normalize(\"NFKD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n                }\n            }\n\n            // Chunk graphemes into known groups\n            function tokenizeGraphemes(word, groups) {\n                const tokens = [];\n                let i = 0;\n                while (i < word.length) {\n                    let matched = false;\n                    for (const g of groups.sort((a, b) => b.length - a.length)) {\n                        if (word.slice(i, i + g.length) === g) {\n                            tokens.push(g);\n                            i += g.length;\n                            matched = true;\n                            break;\n                        }\n                    }\n                    if (!matched) {\n                        tokens.push(word[i]);\n                        i += 1;\n                    }\n                }\n                return tokens;\n            }\n\n            // Tokenize phonemes based on mappings\n            function normalizePhoneme(p) {\n                for (const group in phonemeGroups) {\n                    if (phonemeGroups[group].includes(p)) return group;\n                }\n                return p;\n            }\n\n            const normWord = normalizeWord(word, language);\n            const graphemes = tokenizeGraphemes(normWord, graphemeGroups);\n            const phonemes = phonemesWithScores.map(p => normalizePhoneme(p.Phoneme));\n\n            // Dynamic programming\n            const m = graphemes.length, n = phonemes.length;\n            const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));\n            const traceback = Array(m + 1).fill().map(() => Array(n + 1).fill(null));\n\n            const matchCost = 0, mismatchCost = 1, gap = 1;\n\n            for (let i = 0; i <= m; i++) { dp[i][0] = i * gap; traceback[i][0] = \"up\"; }\n            for (let j = 0; j <= n; j++) { dp[0][j] = j * gap; traceback[0][j] = \"left\"; }\n\n            for (let i = 1; i <= m; i++) {\n                for (let j = 1; j <= n; j++) {\n                    const letter = graphemes[i - 1];\n                    const phoneme = phonemes[j - 1];\n                    const cost = letter === phoneme ? matchCost : mismatchCost;\n\n                    const diag = dp[i - 1][j - 1] + cost;\n                    const up = dp[i - 1][j] + gap;\n                    const left = dp[i][j - 1] + gap;\n\n                    dp[i][j] = Math.min(diag, up, left);\n                    traceback[i][j] = (dp[i][j] === diag) ? \"diag\" : (dp[i][j] === up ? \"up\" : \"left\");\n                }\n            }\n\n            let i = m, j = n;\n            const result = [];\n\n            while (i > 0 || j > 0) {\n                const move = traceback[i][j];\n                if (move === \"diag\") {\n                    result.unshift({\n                        letter: graphemes[i - 1],\n                        phoneme: phonemesWithScores[j - 1].Phoneme,\n                        score: phonemesWithScores[j - 1].PronunciationAssessment.AccuracyScore,\n                    });\n                    i--; j--;\n                } else if (move === \"up\") {\n                    result.unshift({ letter: graphemes[i - 1], phoneme: null, score: null });\n                    i--;\n                } else {\n                    j--;\n                }\n            }\n\n            return result;\n        },\n\n        scoreToColorClass: function(score)\n        {\n            if (score === null) return \"letter_missing\"; //grey\n            if (score >= thefluencyitem.phonemeWarningThreshold) return \"letter_good\"; //green\n            if (score >= thefluencyitem.phonemeErrorThreshold) return \"letter_fair\"; //orange\n            return \"letter_wrong\"; //red\n        },\n\n        renderPronunciationFeedback: function( alignmentData) {\n            var mhelper = this;\n\n            const $wrapper = $(\"<div class='fluencywordresult'>\");\n\n            alignmentData.forEach(({letter, phoneme, score}) => {\n                var resultcolorclass = mhelper.scoreToColorClass(score);\n                const $span = $(\"<span class='fluencyletterresult \" + resultcolorclass + \"'>\")\n                    .text(letter);\n\n                // Tooltip\n                const tooltipText = score === null\n                    ? \"No phoneme matched\"\n                    : `Phoneme: ${phoneme}, Score: ${score}`;\n                $span.attr(\"title\", tooltipText);\n                $wrapper.append($span);\n            });\n\n            return $wrapper.prop('outerHTML');\n        } //end of renderPronunciationFeedback\n    }//end of markup helper\n\n\n    };//end of thefluencyitem\n    return thefluencyitem;\n});"],"names":["define","$","log","def","polly","ttrecorder","anim","progresstimer","templates","chartjs","debug","thefluencyitem","phonemeWarningThreshold","phonemeErrorThreshold","speechConfig","referencetext","game","pointer","usevoice","items","clone","extend","this","init","index","itemdata","quizhelper","init_components","animopts","useanimatecss","register_events","setvoice","getItems","self","thebutton","wordcount","uniqueid","actionbox","pendingbox","resultsbox","timerdisplay","audioplayerbtn","audioplayerbtn_audiomodel","audioplayerbtn_audioself","skipbtn","startbtn","smallnextbtn","ctrlbtns","speakbtncont","questioncont","listencont","mainmenu","mainstage","controls","progresscont","opts","callback","message","type","speechresults","results","do_evaluation","stt_guided","ttrec","voiceoption","text_items","sentences","map","target","sentence","prompt","parsedstring","displayprompt","definition","phonetic","words","typed","timer","answered","correct","audio","audiourl","imageurl","filter","e","each","item","Audio","src","length","appReady","hide","show","hidestartpage","start","prop","next_question","stepdata","hasgrade","totalitems","correctitems","grade","Math","round","results_data","items_for_results_display","resultsdata","do_next","on","$button","hasClass","theaudio","audioself","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","stopTimer","setTimeout","nextPrompt","end","updateProgressDots","showitemreview","show_item_review","forEach","spoken","review_data","render","then","html","js","runTemplateJS","color","progress","idx","join","newprompt","do_animate","nextReply","code","data","character","append","newreply","timelimit","find","progressTimer","height","timeLimit","onFinish","trigger","push","attr","mobile_user","use_ttrecorder","update_currentprompt","timers","clearInterval","pronunciation_result","itemresultscontainer","twoletterlang","language","substr","rtl","privPronJson","Words","reverse","lineresulthtml","wordobject","Syllables","Grapheme","adata","syllable","letter","phoneme","Syllable","score","PronunciationAssessment","AccuracyScore","markuphelper","alignPhonemesToLetters","Word","Phonemes","renderPronunciationFeedback","URL","createObjectURL","blob","oldDoEvaluation","itemresults","accuracyScore","pronunciationScore","completenessScore","fluencyScore","prosodyScore","itemresultscont","label","chartContainerId","createRadialChart","detailResult","word","console","ErrorType","containerId","labels","ctx","document","getElementById","getContext","datasets","backgroundColor","borderColor","borderWidth","options","scale","ticks","beginAtZero","max","includeaudioself","languageMappings","en","graphemeGroups","phonemeGroups","es","fr","ar","phonemesWithScores","normalizeWord","normalize","replace","toLowerCase","tokenizeGraphemes","groups","tokens","i","matched","g","sort","a","b","slice","normalizePhoneme","p","group","includes","normWord","graphemes","phonemes","Phoneme","m","n","dp","Array","fill","traceback","matchCost","mismatchCost","gap","j","cost","diag","up","left","min","result","move","unshift","scoreToColorClass","alignmentData","mhelper","$wrapper","_ref","resultcolorclass","$span","text","tooltipText"],"mappings":"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"}