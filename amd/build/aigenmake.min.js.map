{"version":3,"file":"aigenmake.min.js","sources":["../src/aigenmake.js"],"sourcesContent":["define(\n    ['jquery','core/log','core/templates','core/fragment','core/modal_factory',\n        'core/str','core/config','core/modal_events', 'core_table/dynamic', 'core/ajax'],\n    function($,log,templates,Fragment,Modalfactory,Str,Config,ModalEvents, DyanamicTable, Ajax) {\n    \"use strict\"; // jshint ;_;\n\n/*\nThis file contains class and ID definitions.\n */\n\n    log.debug('MiniLesson AiGen Config Maker: initialising');\n\n    return{\n        controls: {},\n        //pass in config, amd set up table\n        init: function(uniqid){\n            //pick up opts from html\n            var self = this;\n            self.init_controls(uniqid);\n            self.register_events(uniqid);\n            self.set_data();\n        },\n\n        init_controls: function(uniqid){\n            //set up the controls\n            var self = this;\n            self.controls.selectgenerate = $('#' + uniqid + ' select[name=\"generatemethod\"]');\n            self.controls.aigenmakebtn = $('#' + uniqid + '_aigen_make_btn');\n            self.controls.fieldmappings = $('#' + uniqid + ' #id_fieldmappings');\n            self.controls.aigenmake_textarea = $('#' + uniqid + '_aigen_make_textarea');\n        },\n\n        register_events: function(uniqid){\n            //register events\n            var self = this;\n\n            //On clicking the make aigen button\n             self.controls.aigenmakebtn.on('click', function(e) {\n                var items = [];\n                var itemcontrols =$('.ml_aigen_item');\n                // Get the lesson title and description\n                var lessonTitle = $('#' + uniqid + '_ml_aigen_lesson_title input').val();\n                var lessonDescription = $('#' + uniqid + '_ml_aigen_lesson_description textarea').val();\n\n                //loop through each item\n                itemcontrols.each(function(index, itemcontrol) {\n                    var itemdata = {};\n\n                   //set the itemnumber\n                    itemdata.itemnumber = Number($(itemcontrol).data('itemnumber'));\n\n                    //get the prompt\n                    var promptTextArea = $(itemcontrol).find('textarea[name=\"aigenprompt\"]');\n                    itemdata.prompt = promptTextArea.val();\n\n                    //get the generate method\n                    var generateMethodSelect = $(itemcontrol).find('select[name=\"generatemethod\"]');\n                    itemdata.generatemethod = generateMethodSelect.val();\n\n                    //get the generate fields\n                    var generateFieldsCheckboxes = $(itemcontrol).find('.aigen_fields-to-generate input[type=\"checkbox\"]');\n                    var generateFields = [];\n                    generateFieldsCheckboxes.each(function() {\n                        var generateField = {};\n                        generateField.name = $(this).attr('name');\n                        generateField.generate  = $(this).is(':checked') ? 1 : 0;\n                        if(itemdata.generatemethod==\"reuse\" && generateField.generate) {\n                            generateField.mapping = $(itemcontrol).find('select[name=\"' + generateField.name + '_mapping\"]').val();\n                        }else {\n                            generateField.mapping = '';\n                        }\n                        generateFields.push(generateField);\n                    });\n                    itemdata.generatefields = generateFields;\n\n                     //get the file areas\n                    var generateFileareasCheckboxes = $(itemcontrol).find('.aigen_fileareas-to-generate input[type=\"checkbox\"]');\n                    var generateFileareas = [];\n                    generateFileareasCheckboxes.each(function() {\n                        var generateFilearea = {};\n                        generateFilearea.name = $(this).attr('name');\n                        generateFilearea.generate  = $(this).is(':checked') ? 1 : 0;\n                        if(generateFilearea.generate) {\n                            generateFilearea.mapping = $(itemcontrol).find('select[name=\"' + generateFilearea.name + '_mapping\"]').val();\n                        }\n                        generateFileareas.push(generateFilearea);\n                    });\n                    itemdata.generatefileareas = generateFileareas;\n\n                    //Get the overall image context for the item (if any) e.g \"user_topic\" - \"A man and a boy are walking in a park\"\n                    var overallimagecontext = $(itemcontrol).find('select[name=\"overall_image_context\"]').val();\n                    itemdata.overallimagecontext = overallimagecontext;\n\n                    //get the prompt field mappings div\n                    var promptFields=[];\n                    var mappingsSelects= $(itemcontrol).find('.aigen_promptfield-mappings select');\n                    mappingsSelects.each(function() {\n                        var promptField = {};\n                        promptField.name = $(this).data('name');\n                        promptField.mapping = $(this).val();\n                        promptFields.push(promptField);\n                    });\n                    itemdata.promptfields = promptFields;\n\n                    // Add the current itemdata to the items array\n                    items.push(itemdata);\n\n                });// End of itemcontrols.each\n\n                var alldata = {};\n                alldata.lessonTitle = lessonTitle;\n                alldata.lessonDescription = lessonDescription;\n                alldata.items = items;\n\n                if (self.controls.fieldmappings.length) {\n                    alldata[self.controls.fieldmappings.attr('name')] = JSON.parse(self.controls.fieldmappings.val());\n                }\n\n                self.controls.aigenmake_textarea.val(JSON.stringify(alldata, null, 2));\n                log.debug('AiGen make button clicked, items: ' + JSON.stringify(alldata, null,2));\n             });\n\n            //On reload of the prompt field to contextdata mapping\n            $(document).on('click','.aigen-reload-button', function(e, data) {\n                e.preventDefault();\n\n                //get the prompt text area\n                var promptTextArea = $(this).closest('.ml_aigen_item').find('textarea[name=\"aigenprompt\"]');\n                var newprompt = promptTextArea.val();\n\n                //update the mappings div\n                var mappingsDiv = $(this).closest('.ml_aigen_item').find('.ml_aigen_mappings');\n                mappingsDiv.data('promptfields',self.extractFieldsFromString(newprompt).join(','));\n\n                //update the prompt fields mappings div\n                var mappingsdata = {\n                    availablecontext: mappingsDiv.data('availablecontext').split(',').filter(element => element.trim() !== \"\"),\n                    aigenpromptfields: mappingsDiv.data('promptfields').split(',').filter(element => element.trim() !== \"\"),\n                };\n                var promptfieldmappingsDiv = $(this).closest('.ml_aigen_item').find('.aigen_promptfield-mappings');\n                templates.render('mod_minilesson/aigenpromptfieldmappings',mappingsdata).then(\n                    function(html,js){\n                        promptfieldmappingsDiv.html(html);\n                    }\n                );// End of templates\n            });\n\n            //On change of the select, update the config\n            self.controls.selectgenerate.on('change', function() {\n                //get the value of the select\n                var selectedValue = $(this).val();\n                //log the value\n                log.debug('Selected generate method: ' + selectedValue);\n                //the prompt text area\n                var promptTextArea = $(this).closest('.ml_aigen_item').find('textarea[name=\"aigenprompt\"]');\n                var newprompt = promptTextArea.data(selectedValue + 'prompt');\n                promptTextArea.val(newprompt);\n                //If this is a reuse generate method the text area should be readonly\n                if (selectedValue === 'reuse') {\n                    promptTextArea.attr('readonly', true);\n                } else {\n                    promptTextArea.removeAttr('readonly');\n                }\n\n                //update the mappings div\n                var mappingsDiv = $(this).closest('.ml_aigen_item').find('.ml_aigen_mappings');\n                mappingsDiv.data('promptfields',self.extractFieldsFromString(newprompt).join(','));\n                var mappingsdata = {\n                    methodreuse: selectedValue=='reuse',\n                    aigenplaceholders: mappingsDiv.data('aigenplaceholders').split(',').filter(element => element.trim() !== \"\"),\n                    availablecontext: mappingsDiv.data('availablecontext').split(',').filter(element => element.trim() !== \"\"),\n                    aigenpromptfields: mappingsDiv.data('promptfields').split(',').filter(element => element.trim() !== \"\"),\n                };\n                templates.render('mod_minilesson/aigenmappings',mappingsdata).then(\n                    function(html,js){\n                        log.debug('redoing mappingsdiv: ');\n                        mappingsDiv.html(html);\n                    }\n                );// End of templates\n\n                //Update the files areas div\n                var fileareasDiv = $(this).closest('.ml_aigen_item').find('.ml_aigen_filearea_mappings');\n                var fileareasData = {\n                    methodreuse: selectedValue=='reuse',\n                    aigenplaceholders: self.splitDataField(fileareasDiv.data('aigenplaceholders')),\n                    contextfileareas: self.splitDataField(fileareasDiv.data('contextfileareas')),\n                    aigenfileareas: self.splitDataField(fileareasDiv.data('aigenfileareas')),\n                    availablecontext: self.splitDataField(fileareasDiv.data('availablecontext')),\n                };\n                templates.render('mod_minilesson/aigenfilemappings',fileareasData).then(\n                    function(html,js){\n                        log.debug('redoing fileareadata: ');\n                        fileareasDiv.html(html);\n                    }\n                );// End of templates\n\n\n            });\n\n        },  // end of register_events\n\n        set_data: function(){\n            //set up the controls\n            var self = this;\n            try {\n                var textareavalue = self.controls.aigenmake_textarea.val();\n                var jsonvalue = JSON.parse(textareavalue);\n                jsonvalue.items.forEach(function(itemdata, index) {\n                    var itemcontrol = $('.ml_aigen_item[data-itemnumber=\"'+index+'\"]');\n\n                    //set the prompt\n                    var promptTextArea = $(itemcontrol).find('textarea[name=\"aigenprompt\"]');\n                    promptTextArea.val(itemdata.prompt);\n\n\n                    var updateTheFields = function() {\n\n                        //get the generate fields\n                        itemdata.generatefields.forEach(function(generateField) {\n                            var $generateCheckbox = $(itemcontrol).find('.aigen_fields-to-generate input[type=\"checkbox\"][name=\"'+generateField.name+'\"]');\n                            $generateCheckbox.prop('checked', generateField.generate);\n                            if (generateField.generate) {\n                                if (itemdata.generatemethod==\"reuse\") {\n                                    var $mappingSelect = $(itemcontrol).find('select[name=\"' + generateField.name + '_mapping\"]');\n                                    $mappingSelect.val(generateField.mapping);\n                                }\n                            }\n                        });\n\n                        //set the file areas\n                        itemdata.generatefileareas.forEach(function(generateFilearea) {\n                            var $generateFileareasCheckbox = $(itemcontrol).find('.aigen_fileareas-to-generate input[type=\"checkbox\"][name=\"'+generateFilearea.name+'\"]');\n                            $generateFileareasCheckbox.prop('checked', generateFilearea.generate);\n                            if(generateFilearea.generate) {\n                                var $mappingSelect = $(itemcontrol).find('select[name=\"' + generateFilearea.name + '_mapping\"]');\n                                $mappingSelect.val(generateFilearea.mapping);\n                            }\n                        });\n\n                        //set the overall image context\n                        var overallimagecontext = $(itemcontrol).find('select[name=\"overall_image_context\"]');\n                        overallimagecontext.val(itemdata.overallimagecontext);\n\n                        //set the prompt field mappings div\n                        itemdata.promptfields.forEach(function(promptField) {\n                            var $mappingsSelect= $(itemcontrol).find('.aigen_promptfield-mappings select[data-name=\"'+promptField.name+'\"]');\n                            $mappingsSelect.val(promptField.mapping);\n                        });\n                    }\n\n                    //set the generate method\n                    var generateMethodSelect = $(itemcontrol).find('select[name=\"generatemethod\"]');\n                    generateMethodSelect.val(itemdata.generatemethod);\n                    promptTextArea.data(itemdata.generatemethod + 'prompt', itemdata.prompt);\n                    log.debug('Setting generate method to: ' + itemdata.generatemethod);\n                    // We need to do this to make sure the correct fields are on the page, before we set data to them.\n                    log.debug('triggering');\n                    generateMethodSelect.trigger('change');\n                    //wait a second for the change to take effect\n                    setTimeout(function() {\n                        log.debug('updating after triggering');\n                        updateTheFields();\n                    }, 1000);\n\n\n                });\n            } catch (error) {\n                log.debug('Invalid JSON');\n                log.debug(error);\n            }\n        },\n\n        splitDataField: function(datafield) {\n            if(!datafield || datafield.trim() === '') {\n                return [];\n            }else{\n                return datafield.split(',').filter(element => element.trim() !== \"\")\n            }\n        },\n\n        extractFieldsFromString: function(input) {\n            const regex = new RegExp('\\\\{(\\\\w+)\\\\}', 'g'); // fresh regex every time\n            return Array.from(input.matchAll(regex)).reduce(function(a,i) {\n                if (a.indexOf(i[1]) === -1) {\n                    a.push(i[1]);\n                }\n                return a;\n            }, []);\n        },\n\n        registerAiGenerateAction: function(wrapperselector) {\n            var self = this;\n            var wrapper = document.querySelector(wrapperselector);\n            if (wrapper) {\n                wrapper.addEventListener('submit', function(e) {\n                    if (e.target.elements.hasOwnProperty('templateid')) {\n                        e.preventDefault();\n                        Modalfactory.create({\n                            type: Modalfactory.types.SAVE_CANCEL,\n                            title: Str.get_string('aigenmodaltitle', 'mod_minilesson'),\n                            body: self.callAiGenerateContextFormApi(e.target),\n                            large: true,\n                            removeOnClose: true\n                        }).then(function(modal) {\n                            modal.getRoot().on('submit ' + ModalEvents.save, function(e) {\n                                e.preventDefault();\n                                var form = this.querySelector('form');\n                                modal.setBody(self.callAiGenerateContextFormApi(form).then(function(html, js) {\n                                    if (html === 'submitted') {\n                                        modal.destroy();\n                                        self.refreshTable(wrapper.dataset.tableuniqueid);\n                                        document.querySelector('#page')?.scrollTo({ top: 0, behavior: 'smooth' });\n                                        return ['', ''];\n                                    }\n                                    return [html, js];\n                                }));\n                            });\n                            modal.show();\n                        });\n                    }\n                });\n                self.checkProgressBar(wrapper.dataset.tableuniqueid);\n            }\n        },\n\n        callAiGenerateContextFormApi: function(form) {\n            return Fragment.loadFragment(\n                'mod_minilesson', 'aigen_contextform',\n                Config.contextid, {\n                    url: form.getAttribute('action'),\n                    params: new URLSearchParams(new FormData(form)).toString()\n                }\n            );\n        },\n\n        refreshTable: function(tableuniqueid) {\n            var self = this;\n            try {\n                var tableRoot = DyanamicTable.getTableFromId(tableuniqueid);\n                DyanamicTable.refreshTableContent(tableRoot).then(function() {\n                    self.checkProgressBar(tableuniqueid);\n                });\n            } catch(e) {\n                log.debug(e);\n            }\n        },\n\n        checkProgressBar: function(tableuniqueid, pinginterval = 1) {\n            var self = this;\n            try {\n                var tableRoot = DyanamicTable.getTableFromId(tableuniqueid);\n            } catch(e) {\n                log.debug(e);\n            }\n            var table = tableRoot.querySelector('table');\n            if (!table) {\n                return;\n            }\n            var updateinterval = parseInt(table.getAttribute('data-updateinterval'));\n            if (updateinterval > 0) {\n                pinginterval = updateinterval;\n            }\n            if (tableRoot) {\n                var idmap = {};\n                tableRoot.querySelectorAll('[data-region=\"progressbar\"]')\n                    .forEach(function(progressbar) {\n                        var id = parseInt(progressbar.getAttribute('data-id'));\n                        if (id > 0) {\n                            idmap[id] = progressbar;\n                        }\n                    });\n                var ids = Object.keys(idmap).map(parseInt);\n                if (Object.keys(ids).length > 0) {\n                    Ajax.call([{\n                        methodname: 'mod_minilesson_update_progressbars',\n                        args: {\n                            contextid: Config.contextid,\n                            ids: ids\n                        }\n                    }])[0].then(function(response) {\n                        response.forEach(function(line) {\n                            if (ids.indexOf(line.id) > -1) {\n                                var progressbarrow = idmap[line.id].closest('tr');\n                                line.columns.forEach(function(coldata, index) {\n                                    if (coldata.update) {\n                                        var columntd = progressbarrow.querySelector('td.c' + index);\n                                        if (columntd) {\n                                            columntd.innerHTML = coldata.data;\n                                            columntd.dataset.column = coldata.column;\n                                        }\n                                    }\n                                });\n                            }\n                        });\n                        setTimeout(function() {\n                            self.checkProgressBar(tableuniqueid);\n                        }, pinginterval * 1000);\n                    });\n                }\n            }\n        }\n    };//end of return value\n});"],"names":["define","$","log","templates","Fragment","Modalfactory","Str","Config","ModalEvents","DyanamicTable","Ajax","debug","controls","init","uniqid","this","init_controls","register_events","set_data","selectgenerate","aigenmakebtn","fieldmappings","aigenmake_textarea","self","on","e","items","itemcontrols","lessonTitle","val","lessonDescription","each","index","itemcontrol","itemdata","itemnumber","Number","data","promptTextArea","find","prompt","generateMethodSelect","generatemethod","generateFieldsCheckboxes","generateFields","generateField","name","attr","generate","is","mapping","push","generatefields","generateFileareasCheckboxes","generateFileareas","generateFilearea","generatefileareas","overallimagecontext","promptFields","promptField","promptfields","alldata","length","JSON","parse","stringify","document","preventDefault","newprompt","closest","mappingsDiv","extractFieldsFromString","join","mappingsdata","availablecontext","split","filter","element","trim","aigenpromptfields","promptfieldmappingsDiv","render","then","html","js","selectedValue","removeAttr","methodreuse","aigenplaceholders","fileareasDiv","fileareasData","splitDataField","contextfileareas","aigenfileareas","textareavalue","forEach","trigger","setTimeout","prop","error","datafield","input","regex","RegExp","Array","from","matchAll","reduce","a","i","indexOf","registerAiGenerateAction","wrapperselector","wrapper","querySelector","addEventListener","target","elements","hasOwnProperty","create","type","types","SAVE_CANCEL","title","get_string","body","callAiGenerateContextFormApi","large","removeOnClose","modal","getRoot","save","form","setBody","destroy","refreshTable","dataset","tableuniqueid","scrollTo","top","behavior","show","checkProgressBar","loadFragment","contextid","url","getAttribute","params","URLSearchParams","FormData","toString","tableRoot","getTableFromId","refreshTableContent","pinginterval","table","updateinterval","parseInt","idmap","querySelectorAll","progressbar","id","ids","Object","keys","map","call","methodname","args","response","line","progressbarrow","columns","coldata","update","columntd","innerHTML","column"],"mappings":"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"}