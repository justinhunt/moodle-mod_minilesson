{"version":3,"file":"audiochat.min.js","sources":["../src/audiochat.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions',\n    'mod_minilesson/ttrecorder',  'core/templates'],\n    function($, log, def, ttrecorder, templates) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the free speaking item type\n   */\n\n  log.debug('MiniLesson AudioChat: initialising');\n\n  return {\n\n    controls: {}, //controls for the item\n    itemdata: {}, //item data for the item\n    index: 0, //index of the item in the quiz\n    quizhelper: {}, //quiz helper for the item\n    pc: null,\n    dc: null,\n    micStream: null,\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.itemdata = itemdata;\n      log.debug('itemdata',itemdata);\n      this.quizhelper = quizhelper;\n      this.index = index;\n      this.init_controls(quizhelper,itemdata);\n      this.register_events(index, itemdata, quizhelper);\n\n    },\n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = self.itemdata.totalmarks;\n      stepdata.correctitems = self.itemdata.totalmarks;\n      stepdata.grade = 1;\n      stepdata.resultsdata = {};\n      self.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      \n      var self = this;\n\n      self.controls.startbutton.on(\"click\", function(e) {\n        self.startSession();\n      });\n\n      self.controls.stopbutton.on(\"click\", function(e) {\n        self.stopSession();\n      });\n\n      // Push to talk button - currently hidden because we dont need it yet\n      self.controls.talkbutton.on(\"click\", function(e) {\n        self.pushToTalk();\n      });\n\n      self.controls.nextbutton.on('click', function(e) {\n        self.next_question();\n      });\n\n      $(\"#\" + itemdata.uniqueid + \"_container\").on('showElement', () => {\n        if (itemdata.timelimit > 0) {\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container\").show();\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container i\").show();\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                height: '5px',\n                timeLimit: itemdata.timelimit,\n                onFinish: function() {\n                    nextbutton.trigger('click');\n                }\n            });\n        }\n      });\n\n    },\n\n    init_controls: function() {\n        var self = this;\n        self.controls = {\n          //ml_audiochat_sessionpending_box\n          'sessionpending': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_audiochat_sessionpending_box\"),\n          'sessionactive': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_audiochat_sessionactive_box\"),\n          'startbutton': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_ac_start\"),\n          'stopbutton': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_ac_stop\"),\n          'talkbutton': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_ac_talk\"),\n          'studenttranscript': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_ac_studenttranscript\"),\n          'aitranscript': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_ac_aitranscript\"),\n          'hiddenaudio': $(\"#\" + self.itemdata.uniqueid + \"_container .ml_ac_hiddenaudio\"),\n          'nextbutton': $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\"),\n      };\n   },\n\n   waitForIceGathering: function(pc) {\n    return new Promise((resolve) => {\n      if (pc.iceGatheringState === \"complete\") resolve();\n      else {\n        function checkState() {\n          if (pc.iceGatheringState === \"complete\") {\n            pc.removeEventListener(\"icegatheringstatechange\", checkState);\n            resolve();\n          }\n        }\n        pc.addEventListener(\"icegatheringstatechange\", checkState);\n      }\n    });\n  },\n\n  sendEvent: function(obj) {\n    var self = this;\n    if (self.dc && self.dc.readyState === \"open\") {\n      self.dc.send(JSON.stringify(obj));\n    }\n  },\n\n  handleRTCEvent: function(msg) {\n    var self = this;\n    var aitranscript = self.controls.aitranscript[0];\n    var studenttranscript = self.controls.studenttranscript[0];\n    log.debug(\"Received event:\", msg);\n\n    switch (msg.type) {\n      case \"response.done\":\n        if(msg.response) {\n          if (msg.response.output && msg.response.output[0].content) {\n            const content = msg.response.output[0].content[0];\n            if (content.transcript) {\n              aitranscript.textContent += content.transcript + \"\\n\";\n            }\n          }\n        }\n        break;\n      case \"response.output_text.delta\":\n        aitranscript.textContent += msg.delta;\n        break;\n      case \"response.output_text.completed\":\n        aitranscript.textContent += \"\\n\";\n        break;\n      case \"conversation.item.input_audio_transcription.completed\":\n      case \"input_audio_buffer.speech_recognized\":\n        if (msg.transcript) studenttranscript.textContent += msg.transcript + \"\\n\";\n        break;\n    }\n  },\n\n  stopSession: function() {\n    var self = this;\n    log.debug(\"Session stopping...\");\n    var startBtn = self.controls.startbutton[0];\n    var stopBtn = self.controls.stopbutton[0];\n      // Close data channel if open\n      if (typeof self.dc !== 'undefined' && self.dc) {\n          self.dc.close();\n          self.dc = null;\n      }\n      // Close peer connection if open\n      if (typeof self.pc !== 'undefined' && self.pc) {\n          self.pc.close();\n          self.pc = null;\n      }\n      // Stop microphone stream if open\n      if (typeof self.micStream !== 'undefined' && self.micStream) {\n          self.micStream.getTracks().forEach(track => track.stop());\n          self.micStream = null;\n      }\n      startBtn.disabled = false;\n      stopBtn.disabled = true;\n      self.controls.sessionpending.hide();\n      self.controls.sessionactive.hide();\n      log.debug(\"Session stopped\");\n  },\n\n  startSession: async function() {\n    var self = this;\n    log.debug(\"Session starting\");\n    var startBtn = self.controls.startbutton[0];\n    var stopBtn = self.controls.stopbutton[0];\n    var talkBtn = self.controls.talkbutton[0];\n    var twoletterlang = self.itemdata.language.substr(0, 2);\n    var twoletternativelang = self.itemdata.audiochatnativelanguage.substr(0, 2);\n    var hiddenaudio = self.controls.hiddenaudio[0];\n    startBtn.disabled = true;\n\n    // Show the session pending box and hide the session active box\n    self.controls.sessionpending.show();\n    self.controls.sessionactive.hide();\n\n    //Open the RTC PeerConnection via Stun and ICE servers\n    log.debug(\"Opening peer connection...\");\n    self.pc = new RTCPeerConnection({ iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }] });\n\n    //Create a DataChannel for sending events (text and audio)\n    log.debug(\"creating data channel...\");\n    self.dc = self.pc.createDataChannel(\"oai-events\");\n    self.dc.onopen = () => {\n        log.debug(\"DataChannel open\");\n        // Set session-wide instructions\n        self.sendEvent({\n          type: \"session.update\",\n          session: {\n            instructions: self.itemdata.audiochatinstructions,\n            input_audio_format: \"pcm16\",  // Ensure correct audio encoding\n            input_audio_transcription: {\n              language: twoletterlang,\n              model: \"whisper-1\"//\"gpt-4o-mini-transcribe\"  // Use a transcription model\n            },\n            speed: 0.9,\n          }\n        });\n\n        //Send the first message to tell AI to say something\n        self.sendEvent({\n          type: \"response.create\",\n          response: {\n            modalities: [\"audio\", \"text\"],\n            instructions: \"Please introduce yourself to the student and explain todays topic.\",\n            audio: { voice: \"alloy\" }\n          }\n        });\n\n      };\n\n      // Handle incoming messages on the DataChannel\n      self.dc.onmessage = (e) => {\n        log.debug(\"DataChannel message:\", e.data);\n        try {\n          const lines = e.data.split(\"\\n\").filter(Boolean);\n          for (const line of lines) self.handleRTCEvent(JSON.parse(line));\n        } catch (err) { log.debug(\"Failed to parse\", err); }\n      };\n\n      // Set up the audio element to play incoming audio.\n      self.pc.ontrack = (event) => hiddenaudio.srcObject = event.streams[0];\n\n      // Set up the Mic stream.\n      self.micStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      self.micStream.getTracks().forEach((track) => self.pc.addTrack(track, self.micStream));\n\n      // Set up the RTC Connection by bouncing our request off the Moodle server\n      const offer = await self.pc.createOffer({ offerToReceiveAudio: true });\n      await self.pc.setLocalDescription(offer);\n      await self.waitForIceGathering(self.pc);\n\n      const sdpResponse = await fetch(M.cfg.wwwroot + \"/mod/minilesson/openairtc.php\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/sdp\" },\n        body: self.pc.localDescription.sdp\n      });\n      if (!sdpResponse.ok) {\n        log.debug(\"Failed /rtc:\", await sdpResponse.text());\n        return;\n      }\n      log.debug(\"Received SDP answer from server\");\n      log.debug(sdpResponse);\n      const answer = await sdpResponse.text();\n      log.debug(answer);\n      await self.pc.setRemoteDescription({ type: \"answer\", sdp: answer });\n\n      // Hide the session pending box and show the session active box\n      self.controls.sessionpending.hide();\n      self.controls.sessionactive.show();\n\n      // Enable the talk button now that the session is ready\n      talkBtn.disabled = false;\n      stopBtn.disabled = false;\n\n      log.debug(\"Session started\");\n     \n    },\n\n // We dont really need this, the mic stream is active and sending audio\n  pushToTalk: function() {\n    var self = this;\n    if (self.dc && self.dc.readyState === \"open\") {\n      self.sendEvent({\n        type: \"response.create\",\n        response: {\n          modalities: [\"audio\", \"text\"],\n          audio: { voice: \"alloy\" }\n        }\n      });\n    }\n  }\n\n  }; // End of return object.\n});"],"names":["define","$","log","def","ttrecorder","templates","debug","controls","itemdata","index","quizhelper","pc","dc","micStream","clone","extend","this","init","init_controls","register_events","next_question","stepdata","hasgrade","totalitems","totalmarks","correctitems","grade","resultsdata","do_next","self","startbutton","on","e","startSession","stopbutton","stopSession","talkbutton","pushToTalk","nextbutton","uniqueid","timelimit","show","progressTimer","height","timeLimit","onFinish","trigger","waitForIceGathering","Promise","resolve","iceGatheringState","checkState","removeEventListener","addEventListener","sendEvent","obj","readyState","send","JSON","stringify","handleRTCEvent","msg","aitranscript","studenttranscript","type","response","output","content","transcript","textContent","delta","startBtn","stopBtn","close","getTracks","forEach","track","stop","disabled","sessionpending","hide","sessionactive","async","talkBtn","twoletterlang","language","substr","hiddenaudio","audiochatnativelanguage","RTCPeerConnection","iceServers","urls","createDataChannel","onopen","session","instructions","audiochatinstructions","input_audio_format","input_audio_transcription","model","speed","modalities","audio","voice","onmessage","data","lines","split","filter","Boolean","line","parse","err","ontrack","event","srcObject","streams","navigator","mediaDevices","getUserMedia","addTrack","offer","createOffer","offerToReceiveAudio","setLocalDescription","sdpResponse","fetch","M","cfg","wwwroot","method","headers","body","localDescription","sdp","ok","text","answer","setRemoteDescription"],"mappings":"AAAAA,kCAAO,CAAC,SAAU,WAAY,6BAC1B,4BAA8B,mBAC9B,SAASC,EAAGC,IAAKC,IAAKC,WAAYC,kBAOpCH,IAAII,MAAM,sCAEH,CAELC,SAAU,GACVC,SAAU,GACVC,MAAO,EACPC,WAAY,GACZC,GAAI,KACJC,GAAI,KACJC,UAAW,KAGTC,MAAO,kBACIb,EAAEc,QAAO,EAAM,GAAIC,OAGhCC,KAAM,SAASR,MAAOD,SAAUE,iBACzBF,SAAWA,SAChBN,IAAII,MAAM,WAAWE,eAChBE,WAAaA,gBACbD,MAAQA,WACRS,cAAcR,WAAWF,eACzBW,gBAAgBV,MAAOD,SAAUE,aAIxCU,cAAe,eAETC,SAAW,GACfA,SAASZ,MAFEO,KAEWP,MACtBY,SAASC,UAAW,EACpBD,SAASE,WAJEP,KAIgBR,SAASgB,WACpCH,SAASI,aALET,KAKkBR,SAASgB,WACtCH,SAASK,MAAQ,EACjBL,SAASM,YAAc,GAPZX,KAQNN,WAAWkB,QAAQP,WAG1BF,gBAAiB,SAASV,MAAOD,SAAUE,gBAErCmB,KAAOb,KAEXa,KAAKtB,SAASuB,YAAYC,GAAG,SAAS,SAASC,GAC7CH,KAAKI,kBAGPJ,KAAKtB,SAAS2B,WAAWH,GAAG,SAAS,SAASC,GAC5CH,KAAKM,iBAIPN,KAAKtB,SAAS6B,WAAWL,GAAG,SAAS,SAASC,GAC5CH,KAAKQ,gBAGPR,KAAKtB,SAAS+B,WAAWP,GAAG,SAAS,SAASC,GAC5CH,KAAKT,mBAGPnB,EAAE,IAAMO,SAAS+B,SAAW,cAAcR,GAAG,eAAe,KACtDvB,SAASgC,UAAY,IACrBvC,EAAE,IAAMO,SAAS+B,SAAW,kCAAkCE,OAC9DxC,EAAE,IAAMO,SAAS+B,SAAW,oCAAoCE,OAChExC,EAAE,IAAMO,SAAS+B,SAAW,iDAAiDG,cAAc,CACvFC,OAAQ,MACRC,UAAWpC,SAASgC,UACpBK,SAAU,WACNP,WAAWQ,QAAQ,iBAQnC5B,cAAe,WACAF,KACNT,SAAW,gBAEIN,EAAE,IAHXe,KAGsBR,SAAS+B,SAAW,6DAClCtC,EAAE,IAJVe,KAIqBR,SAAS+B,SAAW,0DACnCtC,EAAE,IALRe,KAKmBR,SAAS+B,SAAW,sCAClCtC,EAAE,IANPe,KAMkBR,SAAS+B,SAAW,qCACjCtC,EAAE,IAPPe,KAOkBR,SAAS+B,SAAW,4CAC1BtC,EAAE,IARde,KAQyBR,SAAS+B,SAAW,oDACtCtC,EAAE,IATTe,KASoBR,SAAS+B,SAAW,8CAClCtC,EAAE,IAVRe,KAUmBR,SAAS+B,SAAW,4CAClCtC,EAAE,IAXPe,KAWkBR,SAAS+B,SAAW,uCAItDQ,oBAAqB,SAASpC,WACtB,IAAIqC,SAASC,aACW,aAAzBtC,GAAGuC,kBAAkCD,cACpC,UACME,aACsB,aAAzBxC,GAAGuC,oBACLvC,GAAGyC,oBAAoB,0BAA2BD,YAClDF,WAGJtC,GAAG0C,iBAAiB,0BAA2BF,iBAKrDG,UAAW,SAASC,KACPvC,KACFJ,IAA6B,SAD3BI,KACSJ,GAAG4C,YADZxC,KAEJJ,GAAG6C,KAAKC,KAAKC,UAAUJ,OAIhCK,eAAgB,SAASC,SAEnBC,aADO9C,KACaT,SAASuD,aAAa,GAC1CC,kBAFO/C,KAEkBT,SAASwD,kBAAkB,UACxD7D,IAAII,MAAM,kBAAmBuD,KAErBA,IAAIG,UACL,mBACAH,IAAII,UACDJ,IAAII,SAASC,QAAUL,IAAII,SAASC,OAAO,GAAGC,QAAS,OACnDA,QAAUN,IAAII,SAASC,OAAO,GAAGC,QAAQ,GAC3CA,QAAQC,aACVN,aAAaO,aAAeF,QAAQC,WAAa,gBAKpD,6BACHN,aAAaO,aAAeR,IAAIS,gBAE7B,iCACHR,aAAaO,aAAe,eAEzB,4DACA,uCACCR,IAAIO,aAAYL,kBAAkBM,aAAeR,IAAIO,WAAa,QAK5EjC,YAAa,WAEXjC,IAAII,MAAM,2BACNiE,SAFOvD,KAEST,SAASuB,YAAY,GACrC0C,QAHOxD,KAGQT,SAAS2B,WAAW,QAEd,IALdlB,KAKOJ,IALPI,KAKkCJ,KALlCI,KAMAJ,GAAG6D,QANHzD,KAOAJ,GAAK,WAGS,IAVdI,KAUOL,IAVPK,KAUkCL,KAVlCK,KAWAL,GAAG8D,QAXHzD,KAYAL,GAAK,WAGgB,IAfrBK,KAeOH,WAfPG,KAeyCH,YAfzCG,KAgBAH,UAAU6D,YAAYC,SAAQC,OAASA,MAAMC,SAhB7C7D,KAiBAH,UAAY,MAErB0D,SAASO,UAAW,EACpBN,QAAQM,UAAW,EApBV9D,KAqBJT,SAASwE,eAAeC,OArBpBhE,KAsBJT,SAAS0E,cAAcD,OAC5B9E,IAAII,MAAM,oBAGd2B,aAAciD,qBACRrD,KAAOb,KACXd,IAAII,MAAM,wBACNiE,SAAW1C,KAAKtB,SAASuB,YAAY,GACrC0C,QAAU3C,KAAKtB,SAAS2B,WAAW,GACnCiD,QAAUtD,KAAKtB,SAAS6B,WAAW,GACnCgD,cAAgBvD,KAAKrB,SAAS6E,SAASC,OAAO,EAAG,GAEjDC,aADsB1D,KAAKrB,SAASgF,wBAAwBF,OAAO,EAAG,GACxDzD,KAAKtB,SAASgF,YAAY,IAC5ChB,SAASO,UAAW,EAGpBjD,KAAKtB,SAASwE,eAAetC,OAC7BZ,KAAKtB,SAAS0E,cAAcD,OAG5B9E,IAAII,MAAM,8BACVuB,KAAKlB,GAAK,IAAI8E,kBAAkB,CAAEC,WAAY,CAAC,CAAEC,KAAM,mCAGvDzF,IAAII,MAAM,4BACVuB,KAAKjB,GAAKiB,KAAKlB,GAAGiF,kBAAkB,cACpC/D,KAAKjB,GAAGiF,OAAS,KACb3F,IAAII,MAAM,oBAEVuB,KAAKyB,UAAU,CACbU,KAAM,iBACN8B,QAAS,CACPC,aAAclE,KAAKrB,SAASwF,sBAC5BC,mBAAoB,QACpBC,0BAA2B,CACzBb,SAAUD,cACVe,MAAO,aAETC,MAAO,MAKXvE,KAAKyB,UAAU,CACbU,KAAM,kBACNC,SAAU,CACRoC,WAAY,CAAC,QAAS,QACtBN,aAAc,qEACdO,MAAO,CAAEC,MAAO,aAOtB1E,KAAKjB,GAAG4F,UAAaxE,IACnB9B,IAAII,MAAM,uBAAwB0B,EAAEyE,gBAE5BC,MAAQ1E,EAAEyE,KAAKE,MAAM,MAAMC,OAAOC,aACnC,MAAMC,QAAQJ,MAAO7E,KAAK+B,eAAeF,KAAKqD,MAAMD,OACzD,MAAOE,KAAO9G,IAAII,MAAM,kBAAmB0G,OAI/CnF,KAAKlB,GAAGsG,QAAWC,OAAU3B,YAAY4B,UAAYD,MAAME,QAAQ,GAGnEvF,KAAKhB,gBAAkBwG,UAAUC,aAAaC,aAAa,CAAEjB,OAAO,IACpEzE,KAAKhB,UAAU6D,YAAYC,SAASC,OAAU/C,KAAKlB,GAAG6G,SAAS5C,MAAO/C,KAAKhB,mBAGrE4G,YAAc5F,KAAKlB,GAAG+G,YAAY,CAAEC,qBAAqB,UACzD9F,KAAKlB,GAAGiH,oBAAoBH,aAC5B5F,KAAKkB,oBAAoBlB,KAAKlB,UAE9BkH,kBAAoBC,MAAMC,EAAEC,IAAIC,QAAU,gCAAiC,CAC/EC,OAAQ,OACRC,QAAS,gBAAkB,mBAC3BC,KAAMvG,KAAKlB,GAAG0H,iBAAiBC,UAE5BT,YAAYU,eACfrI,IAAII,MAAM,qBAAsBuH,YAAYW,QAG9CtI,IAAII,MAAM,mCACVJ,IAAII,MAAMuH,mBACJY,aAAeZ,YAAYW,OACjCtI,IAAII,MAAMmI,cACJ5G,KAAKlB,GAAG+H,qBAAqB,CAAE1E,KAAM,SAAUsE,IAAKG,SAG1D5G,KAAKtB,SAASwE,eAAeC,OAC7BnD,KAAKtB,SAAS0E,cAAcxC,OAG5B0C,QAAQL,UAAW,EACnBN,QAAQM,UAAW,EAEnB5E,IAAII,MAAM,oBAKd+B,WAAY,WACCrB,KACFJ,IAA6B,SAD3BI,KACSJ,GAAG4C,YADZxC,KAEJsC,UAAU,CACbU,KAAM,kBACNC,SAAU,CACRoC,WAAY,CAAC,QAAS,QACtBC,MAAO,CAAEC,MAAO"}