{"version":3,"file":"audiochat.min.js","sources":["../src/audiochat.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions',\n        'mod_minilesson/ttrecorder', 'core/templates'],\nfunction($, log, def, ttrecorder, templates) {\n    \"use strict\"; // jshint ;_;\n\n    /*\n    This file is to manage the free speaking item type\n        */\n\n      log.debug('MiniLesson AudioChat: initialising');\n\n    return {\n\n        controls: {}, // Controls for the item\n        itemdata: {}, // Item data for the item\n        index: 0, // Index of the item in the quiz\n        quizhelper: {}, // Quiz helper for the item\n        pc: null,\n        dc: null,\n        audiochat_voice: \"alloy\", // Default voice for the AI\n        isSessionStarted: false,\n        isSessionStopped: false,\n        isSessionActive: false,\n        isLoading: false,\n        isMicActive: false,\n        isMicInitialized: false, // True when getUserMedia has successfully run once\n        loadingMessages: new Set(), // To track messages that are currently loading,\n        audioContext: null,\n        analyser: null,\n        dataArray: null,\n        sourceNode: null,\n        mediaStream: null,\n        animationFrameId: null,\n        canvasCtx: null,\n        eventlogs: [],\n        items: {},\n        responses: {},\n        abortcontroller: new AbortController(),\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            this.itemdata = itemdata;\n            log.debug('itemdata', itemdata);\n            this.quizhelper = quizhelper;\n            this.index = index;\n            this.init_controls(quizhelper, itemdata);\n            this.init_voice(itemdata.audiochat_voice);\n            this.register_events(index, itemdata, quizhelper);\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.itemdata.totalmarks;\n            stepdata.correctitems = self.itemdata.totalmarks;\n            stepdata.grade = 1;\n            stepdata.resultsdata = {};\n            self.quizhelper.do_next(stepdata);\n        },\n\n        register_events: function(index, itemdata, quizhelper) {\n\n            var self = this;\n\n            $(self.controls.nextbutton).on('click', function() {\n                self.next_question();\n            });\n\n            $(\"#\" + itemdata.uniqueid + \"_container\").on('showElement', () => {\n                if (itemdata.timelimit > 0) {\n                    $(\"#\" + itemdata.uniqueid + \"_container .progress-container\").show();\n                    $(\"#\" + itemdata.uniqueid + \"_container .progress-container i\").show();\n                    $(\"#\" + itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                        height: '5px',\n                        timeLimit: itemdata.timelimit,\n                        onFinish: function() {\n                            nextbutton.trigger('click');\n                        }\n                    });\n                }\n            });\n\n\n            if (self.controls.toggleMicBtn) {\n                self.controls.toggleMicBtn.addEventListener(\"click\", self.toggleMute.bind(self))\n            }\n        },\n\n        init_voice: function(voice) {\n            var self = this;\n            var voices = ['alloy', 'ash', 'ballad', 'coral', 'echo', 'sage', 'shimmer', 'verse'];\n            if (voice && voices.includes(voice)) {\n                self.audiochat_voice = voice;\n            } else {\n                self.audiochat_voice = 'alloy'; // Default voice\n            }\n            log.debug(\"AudioChat voice set to:\", this.audiochat_voice);\n        },\n\n        init_controls: async function() {\n            var self = this;\n            var container = document.getElementById(self.itemdata.uniqueid + \"_container\");\n            self.controls = {\n                hiddenaudio: container.querySelector('.ml_ac_hiddenaudio'),\n                nextbutton: container.querySelector('.minilesson_nextbutton'),\n                startSessionBtn: container.querySelector(\"#start-session-btn\"),\n                stopSessionBtn: container.querySelector(\"#stop-session-btn\"),\n                loadingIndicator: container.querySelector(\"#loading-indicator\"),\n                aiAvatarSection: container.querySelector(\"#ai-avatar-section\"),\n                conversationSection: container.querySelector(\"#conversation-section\"),\n                messagesContainer: container.querySelector(\"#messages-container\"),\n                micButtonContainer: container.querySelector(\"#mic-button-container\"),\n                toggleMicBtn: container.querySelector(\"#toggle-mic-btn\"),\n                micIcon: container.querySelector(\"#mic-icon\"),\n                micWaveformCanvas: container.querySelector(\"#mic-waveform-canvas\"),\n                micSelect: container.querySelector('#micselect'),\n                finishMessage: container.querySelector('#finished-message'),\n                retrySessionBtn: container.querySelector('#retry-session-btn'),\n                cancelStartSessionBtn: container.querySelector('#cancel-start-session-btn'),\n            };\n            self.canvasCtx = !self.controls.micWaveformCanvas ? null :\n                self.controls.micWaveformCanvas.getContext(\"2d\");\n\n            // Event Listeners\n            self.controls.startSessionBtn.addEventListener(\"click\", self.startSession.bind(this));\n            self.controls.stopSessionBtn.addEventListener(\"click\", self.stopSession.bind(this));\n            self.controls.retrySessionBtn.addEventListener(\"click\", self.startSession.bind(this));\n            self.controls.cancelStartSessionBtn.addEventListener(\"click\", () => {\n                self.abortcontroller.abort();\n                self.abortcontroller = new AbortController();\n            });\n\n            // Initial render\n            await self.populateMicList();\n            self.renderUI();\n        },\n\n        scrollToBottom: function() {\n            var self = this;\n            self.controls.conversationSection.firstElementChild.scrollIntoViewIfNeeded();\n            self.controls.conversationSection.firstElementChild.scrollTop = self.controls.conversationSection.firstElementChild.scrollHeight;\n        },\n\n        renderUI: function() {\n            var self = this;\n            // Session Controls\n            self.controls.startSessionBtn.classList.toggle(\"hidden\", self.isSessionActive || self.isLoading || self.isSessionStarted);\n            self.controls.loadingIndicator.classList.toggle(\"hidden\", !self.isLoading);\n            self.controls.stopSessionBtn.classList.toggle(\"hidden\", !self.isSessionActive);\n            self.controls.micButtonContainer.classList.toggle(\"hidden\", !self.isSessionActive);\n            var endScreen = self.isSessionStarted && self.isSessionStopped;\n            self.controls.finishMessage.classList.toggle(\"hidden\", !endScreen);\n            self.controls.retrySessionBtn.classList.toggle(\"hidden\", !endScreen);\n            self.controls.cancelStartSessionBtn.classList.toggle('hidden', !(self.isLoading && !self.isSessionActive));\n            if (self.controls.micSelect) {\n                self.controls.micSelect.parentElement.classList.toggle(\n                    'hidden',\n                    self.isSessionStarted || self.isLoading || self.controls.micSelect.disabled\n                );\n            }\n\n            var orderedItems = [];\n            var idMap = new Map();\n            var previousMap = new Map();\n            var currentItem;\n            Object.values(self.items).forEach(item => {\n                idMap.set(item.id, item);\n                previousMap.set(item.previous_item_id, item);\n                if (item.previous_item_id === null) {\n                    currentItem = item;\n                }\n            });\n            while (currentItem) {\n                orderedItems.push(currentItem);\n                currentItem = previousMap.get(currentItem.id);\n            }\n\n            // Main content sections\n            self.controls.aiAvatarSection.classList.toggle(\"hidden\", !self.isSessionStarted);\n            self.controls.conversationSection.classList.toggle(\"hidden\", !(self.isSessionActive || self.isSessionStopped));\n\n            // Render messages\n            self.controls.messagesContainer.innerHTML = \"\"; // Clear existing messages\n            orderedItems.forEach((message) => {\n                if (!message.content) {\n                    return;\n                }\n                var messageDiv = document.createElement(\"div\");\n                messageDiv.className = `flex ${message.usertype === \"user\" ? \"justify-end\" : \"justify-start\"} ml_unique_ordered_message_${message.usertype === \"user\" ? \"user\" : \"assistant\"}`;\n\n                var contentDiv = document.createElement(\"div\");\n                contentDiv.className = `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n            message.usertype === \"user\" ? \"bg-blue-500 text-white\" : \"bg-gray-200 text-gray-800\"\n        } ml_unique_content_${\n            message.usertype === \"user\" ? \"user\" : \"assistant\"\n        }`;\n\n                var headerDiv = document.createElement(\"div\");\n                headerDiv.className = \"flex items-center text-xs font-medium mb-1 ml_unique_headerdiv\";\n                if (message.usertype === \"assistant\") {\n                    var pictureDiv = document.createElement('div');\n                    pictureDiv.innerHTML = `\n<img src=\"${M.cfg.wwwroot}/mod/minilesson/pix/cutepoodll_small.png\" alt=\"AI Assistant\" class=\"mr-2 rounded-circle shadow-lg ml_unique_assistant_img\">\n`;\n                    headerDiv.appendChild(pictureDiv);\n                }\n                headerDiv.innerHTML += message.usertype === \"user\" ? \"Student\" : \"AI Assistant\";\n                contentDiv.appendChild(headerDiv);\n\n                var textDiv = document.createElement(\"div\");\n                textDiv.className = \"text-sm ml_unique_textsmall\";\n                textDiv.textContent = message.content;\n                contentDiv.appendChild(textDiv);\n\n                if (self.loadingMessages.has(message.id)) {\n                    var loaderDiv = document.createElement(\"div\");\n                    loaderDiv.className = \"flex items-center space-x-1 py-1 message-loader ml_unique_loadingmessage\";\n                    loaderDiv.innerHTML = `\n                        <div class=\"flex space-x-1 ml_unique_loader\">\n                            <div class=\"w-2 h-2 bg-current rounded-full ml_unique_loader_dot\"></div>\n                            <div class=\"w-2 h-2 bg-current rounded-full ml_unique_loader_dot\"></div>\n                            <div class=\"w-2 h-2 bg-current rounded-full ml_unique_loader_dot\"></div>\n                        </div>\n                        <span class=\"text-xs opacity-70 ml_unique_loader_text\">AI is thinking...</span>\n                    `;\n                    contentDiv.appendChild(loaderDiv);\n                }\n\n                messageDiv.appendChild(contentDiv);\n                self.controls.messagesContainer.appendChild(messageDiv);\n            });\n\n            self.scrollToBottom();\n\n            // Update mic button container and canvas visibility\n            if (self.controls.micButtonContainer) {\n                self.controls.micButtonContainer.classList.toggle(\"active\", self.isMicActive);\n                self.controls.micButtonContainer.classList.toggle(\"bg-blue-500\", self.isMicActive); // Active background color\n                self.controls.micButtonContainer.classList.toggle(\"text-white\", self.isMicActive); // Active icon color\n                self.controls.micButtonContainer.classList.toggle(\"bg-gray-200\", !self.isMicActive); // Inactive background color\n                self.controls.micButtonContainer.classList.toggle(\"text-gray-800\", !self.isMicActive); // Inactive icon color\n            }\n\n\n            if (self.controls.micWaveformCanvas) {\n                self.controls.micWaveformCanvas.classList.toggle(\"active\", self.isMicActive);\n            }\n\n            if (self.controls.micIcon) {\n                // Set icon based on mic state\n                self.controls.micIcon.innerHTML = self.isMicActive\n                    ? `<rect id=\"primary\" x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2\" style=\"fill: rgb(0, 0, 0);\"></rect>` // Mic On icon\n                    : `<path id=\"secondary\" d=\"M12,15h0a4,4,0,0,1-4-4V7a4,4,0,0,1,4-4h0a4,4,0,0,1,4,4v4A4,4,0,0,1,12,15Z\" style=\"fill: rgb(44, 169, 188); stroke-width: 2;\"></path><path id=\"primary\" d=\"M18.24,16A8,8,0,0,1,5.76,16\" style=\"fill: none; stroke: rgb(0, 0, 0); stroke-linecap: round; stroke-linejoin: round; stroke-width: 2;\"></path><path id=\"primary-2\" data-name=\"primary\" d=\"M12,19v2m4-10V7a4,4,0,0,0-4-4h0A4,4,0,0,0,8,7v4a4,4,0,0,0,4,4h0A4,4,0,0,0,16,11Z\" style=\"fill: none; stroke: rgb(0, 0, 0); stroke-linecap: round; stroke-linejoin: round; stroke-width: 2;\"></path>`; // Mic Off icon\n            }\n        },\n\n        startSession: async function() {\n            var self = this;\n            var twoletterlang = self.itemdata.language.substr(0, 2);\n            var hiddenaudio = self.controls.hiddenaudio;\n            log.debug(\"Session starting\");\n            self.isLoading = true;\n            self.items = [];\n            self.renderUI();\n            // Open the RTC PeerConnection via Stun and ICE servers\n            log.debug(\"Opening peer connection...\");\n            self.pc = new RTCPeerConnection({\n                iceServers: [{\n                    urls: \"stun:stun.l.google.com:19302\"\n                }]\n            });\n\n            // Create a DataChannel for sending events (text and audio)\n            log.debug(\"creating data channel...\");\n            self.dc = self.pc.createDataChannel(\"oai-events\");\n\n            // Handle incoming messages on the DataChannel\n            self.dc.onmessage = (e) => {\n                self.eventlogs.push(e.data);\n                log.debug(\"DataChannel message:\", e.data);\n                try {\n                    var lines = e.data.split(\"\\n\").filter(Boolean);\n                    for (var line of lines) {\n                        self.handleRTCEvent.call(self, JSON.parse(line));\n                    }\n                } catch (err) {\n                    log.debug(\"Failed to parse\", err);\n                }\n            };\n            self.dc.onopen = () => {\n                log.debug(\"DataChannel open\");\n                // Set session-wide instructions\n                self.sendEvent({\n                    type: \"session.update\",\n                    session: {\n                        instructions: self.itemdata.audiochatinstructions,\n                        input_audio_format: \"pcm16\", // Ensure correct audio encoding\n                        input_audio_transcription: {\n                            language: twoletterlang,\n                            model: \"whisper-1\" // \"gpt-4o-mini-transcribe\"  // Use a transcription model\n                        },\n                        turn_detection: {\n                            type: \"semantic_vad\",\n                        },\n                        speed: 0.9,\n                        voice: self.audiochat_voice,\n                    }\n                });\n\n                // Send the first message to tell AI to say something\n                self.sendEvent({\n                    type: \"response.create\",\n                    response: {\n                        modalities: [\"audio\", \"text\"],\n                        instructions: \"Please introduce yourself to the student and explain todays topic.\",\n                        voice: self.audiochat_voice\n                    }\n                });\n\n            };\n\n            // Set up the audio element to play incoming audio.\n            self.pc.ontrack = (event) => {\n                hiddenaudio.srcObject = event.streams[0];\n            };\n\n            // Set up the Mic stream.\n            self.mediaStream = await navigator.mediaDevices.getUserMedia({audio: true});\n            self.mediaStream.getTracks().forEach((track) => {\n                track.enabled = false;\n                self.pc.addTrack(track, self.mediaStream);\n            });\n\n            // Set up the RTC Connection by bouncing our request off the Moodle server\n            var offer = await self.pc.createOffer({\n                offerToReceiveAudio: true\n            });\n            await self.pc.setLocalDescription(offer);\n            await self.waitForIceGathering(self.pc);\n\n            try {\n                var sdpResponse = await fetch(M.cfg.wwwroot + \"/mod/minilesson/openairtc.php\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/sdp\"\n                    },\n                    body: self.pc.localDescription.sdp,\n                    signal: self.abortcontroller.signal\n                });\n                if (!sdpResponse.ok) {\n                    log.debug(\"Failed /rtc:\", await sdpResponse.text());\n                    return;\n                }\n                log.debug(\"Received SDP answer from server\");\n                var answer = await sdpResponse.text();\n                log.debug(answer);\n                await self.pc.setRemoteDescription({\n                    type: \"answer\",\n                    sdp: answer\n                });\n                log.debug(\"Session started\");\n            } catch(e) {\n                // Close data channel if open\n                if (self.dc) {\n                    self.dc.close();\n                }\n                // Close peer connection if open\n                if (self.pc) {\n                    self.pc.close();\n                }\n                if (self.mediaStream) {\n                    self.mediaStream.getTracks().forEach((track) => track.stop());\n                }\n                self.isLoading = false;\n                self.renderUI();\n                return;\n            }\n\n            self.isLoading = false;\n            self.isSessionActive = true;\n            self.isSessionStarted = true;\n            self.isSessionStopped = false;\n            self.renderUI();\n        },\n\n        stopSession: function() {\n            var self = this;\n            log.debug(\"Session stopping...\");\n            self.isSessionActive = false;\n            self.isSessionStopped = true;\n            self.loadingMessages.clear();\n            // Close data channel if open\n            if (typeof self.dc !== 'undefined' && self.dc) {\n                self.dc.close();\n                self.dc = null;\n            }\n            // Close peer connection if open\n            if (typeof self.pc !== 'undefined' && self.pc) {\n                self.pc.close();\n                self.pc = null;\n            }\n            // Release mic resources when session ends\n            self.releaseMicResources();\n            self.renderUI();\n            log.debug(\"Session stopped\");\n        },\n\n        waitForIceGathering: function(pc) {\n            return new Promise((resolve) => {\n                if (pc.iceGatheringState === \"complete\") {\n                    resolve();\n                } else {\n                    /**\n                     *\n                     */\n                    function checkState() {\n                        if (pc.iceGatheringState === \"complete\") {\n                            pc.removeEventListener(\"icegatheringstatechange\", checkState);\n                            resolve();\n                        }\n                    }\n                    pc.addEventListener(\"icegatheringstatechange\", checkState);\n                }\n            });\n        },\n\n        sendEvent: function(obj) {\n            var self = this;\n            if (self.dc && self.dc.readyState === \"open\") {\n                self.dc.send(JSON.stringify(obj));\n            }\n        },\n\n        handleRTCEvent: function(msg) {\n            var self = this;\n            log.debug(\"Received event:\");\n            // log.debug(msg);\n            var msgresponse_id = msg.response ? msg.response.id : msg.response_id;\n            var msgitem_id = msg.item ? msg.item.id : msg.item_id;\n            if (msgresponse_id) {\n                self.responses[msgresponse_id] = self.responses[msgresponse_id] || {\n                    id: msgresponse_id,\n                    itemid: msgitem_id,\n                    stack: []\n                };\n            }\n            if (msgitem_id) {\n                if (typeof self.items[msgitem_id] === 'undefined') {\n                    self.scrollToBottom();\n                }\n                self.items[msgitem_id] = self.items[msgitem_id] || {\n                    id: msgitem_id,\n                    events: [],\n                    responses: null,\n                    content: ''\n                };\n                if (msgresponse_id) {\n                    self.items[msgitem_id].responses = self.responses[msgresponse_id];\n                }\n            }\n\n            msg.time = Date.now().toString();\n\n            switch (msg.type) {\n                case \"response.created\": {\n/*```\n{\n    \"type\": \"response.created\",\n    \"event_id\": \"event_Bzbmm1vOdUpYK5LcKMPAU\",\n    \"response\": {\n        \"object\": \"realtime.response\",\n        \"id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n        \"status\": \"in_progress\",\n        \"status_details\": null,\n        \"output\": [],\n        \"conversation_id\": \"conv_BzbmjU4iAZBReV6QpTbKH\",\n        \"modalities\": [\n            \"audio\",\n            \"text\"\n        ],\n        \"voice\": \"alloy\",\n        \"output_audio_format\": \"pcm16\",\n        \"temperature\": 0.8,\n        \"max_output_tokens\": \"inf\",\n        \"usage\": null,\n        \"metadata\": null\n    }\n}\n```*/\n                    self.responses[msg.response.id].stack.push(msg);\n                    break;\n                }\n                case \"response.output_item.added\": {\n/*```\n{\n    \"type\": \"response.output_item.added\",\n    \"event_id\": \"event_BzbmnNUVJeqok4KqSLSVl\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"output_index\": 0,\n    \"item\": {\n        \"id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n        \"object\": \"realtime.item\",\n        \"type\": \"message\",\n        \"status\": \"in_progress\",\n        \"role\": \"assistant\",\n        \"content\": []\n    }\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    break;\n                }\n                case \"conversation.item.created\": {\n/*```\n{\n    \"type\": \"conversation.item.created\",\n    \"event_id\": \"event_BzbmnttqDhvU3h2he1tK7\",\n    \"previous_item_id\": \"item_BzbmmcBxU60HVn8xvCWA2\",\n    \"item\": {\n        \"id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n        \"object\": \"realtime.item\",\n        \"type\": \"message\",\n        \"status\": \"in_progress\",\n        \"role\": \"assistant\",\n        \"content\": []\n    }\n}\n```*/\n                    self.items[msg.item.id].previous_item_id = msg.previous_item_id;\n                    self.items[msg.item.id].usertype = msg.item.role;\n                    self.items[msg.item.id].events.push(msg);\n                    if (msg.item.role === 'assistant') {\n                        self.loadingMessages.add(msgitem_id);\n                    }\n                    break;\n                }\n                case \"response.content_part.added\": {\n/*```\n{\n    \"type\": \"response.content_part.added\",\n    \"event_id\": \"event_Bzbmn7lA1i7fOfFq8ju3F\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"item_id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n    \"output_index\": 0,\n    \"content_index\": 0,\n    \"part\": {\n        \"type\": \"audio\",\n        \"transcript\": \"\"\n    }\n}\n```*/\n                    self.enableMic();// Let's enable mic\n                    self.responses[msg.response_id].stack.push(msg);\n                    break;\n                }\n                case \"response.audio_transcript.delta\": {\n/*```\n{\n    \"type\": \"response.audio_transcript.delta\",\n    \"event_id\": \"event_BzbmnpxUmLA0zAnR5mRy3\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"item_id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n    \"output_index\": 0,\n    \"content_index\": 0,\n    \"delta\": \"Hi\"\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    self.items[msg.item_id].content += msg.delta;\n                    break;\n                }\n                case \"input_audio_buffer.speech_started\": {\n/*```\n{\n    \"type\": \"input_audio_buffer.speech_started\",\n    \"event_id\": \"event_BzbmnzTzta41TdJrqoFvD\",\n    \"audio_start_ms\": 2036,\n    \"item_id\": \"item_Bzbmnc228P1Hck5capBK8\"\n}\n```*/\n                    self.items[msg.item_id].events.push(msg);\n                    break;\n                }\n                case \"output_audio_buffer.cleared\": {\n/*```\n{\n    \"type\": \"output_audio_buffer.cleared\",\n    \"event_id\": \"event_f7273193069b4938\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\"\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    break;\n                }\n                case \"response.audio.done\": {\n/*```\n{\n    \"type\": \"response.audio.done\",\n    \"event_id\": \"event_Bzbmn7aEtTnprkzqE9i6X\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"item_id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n    \"output_index\": 0,\n    \"content_index\": 0\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    break;\n                }\n                case \"response.audio_transcript.done\": {\n/*```\n{\n    \"type\": \"response.audio_transcript.done\",\n    \"event_id\": \"event_BzbmnNGRs7797nz1Qh7em\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"item_id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n    \"output_index\": 0,\n    \"content_index\": 0,\n    \"transcript\": \"Hi! How are you today? What did you do today?\"\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    self.items[msg.item_id].content = msg.transcript;\n                    break;\n                }\n                case \"response.content_part.done\": {\n/*```\n{\n    \"type\": \"response.content_part.done\",\n    \"event_id\": \"event_BzbmnYdAvAKMU7ti311Vj\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"item_id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n    \"output_index\": 0,\n    \"content_index\": 0,\n    \"part\": {\n        \"type\": \"audio\",\n        \"transcript\": \"Hi! How are you today? What did you do today?\"\n    }\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    break;\n                }\n                case \"response.output_item.done\": {\n/*```\n{\n    \"type\": \"response.output_item.done\",\n    \"event_id\": \"event_BzbmnhD5RdLxAOnko94Z1\",\n    \"response_id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n    \"output_index\": 0,\n    \"item\": {\n        \"id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n        \"object\": \"realtime.item\",\n        \"type\": \"message\",\n        \"status\": \"incomplete\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"audio\",\n                \"transcript\": \"Hi! How are you today? What did you do today?\"\n            }\n        ]\n    }\n}\n```*/\n                    self.responses[msg.response_id].stack.push(msg);\n                    self.loadingMessages.delete(msg.item.id);\n                    break;\n                }\n                case \"response.done\": {\n/*```\n{\n    \"type\": \"response.done\",\n    \"event_id\": \"event_Bzbmn8bIaGB59d6qG7LQS\",\n    \"response\": {\n        \"object\": \"realtime.response\",\n        \"id\": \"resp_BzbmmfvbvyUuYz2hvigPm\",\n        \"status\": \"cancelled\",\n        \"status_details\": {\n            \"type\": \"cancelled\",\n            \"reason\": \"turn_detected\"\n        },\n        \"output\": [\n            {\n                \"id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n                \"object\": \"realtime.item\",\n                \"type\": \"message\",\n                \"status\": \"incomplete\",\n                \"role\": \"assistant\",\n                \"content\": [\n                    {\n                        \"type\": \"audio\",\n                        \"transcript\": \"Hi! How are you today? What did you do today?\"\n                    }\n                ]\n            }\n        ],\n        \"conversation_id\": \"conv_BzbmjU4iAZBReV6QpTbKH\",\n        \"modalities\": [\n            \"audio\",\n            \"text\"\n        ],\n        \"voice\": \"alloy\",\n        \"output_audio_format\": \"pcm16\",\n        \"temperature\": 0.8,\n        \"max_output_tokens\": \"inf\",\n        \"usage\": {\n            \"total_tokens\": 170,\n            \"input_tokens\": 94,\n            \"output_tokens\": 76,\n            \"input_token_details\": {\n                \"text_tokens\": 87,\n                \"audio_tokens\": 7,\n                \"cached_tokens\": 0,\n                \"cached_tokens_details\": {\n                    \"text_tokens\": 0,\n                    \"audio_tokens\": 0\n                }\n            },\n            \"output_token_details\": {\n                \"text_tokens\": 23,\n                \"audio_tokens\": 53\n            }\n        },\n        \"metadata\": null\n    }\n}\n```*/\n                    self.responses[msg.response.id].stack.push(msg);\n                    break;\n                }\n                case \"output_audio_buffer.stopped\": {\n/*```\n{\n    \"type\":\"output_audio_buffer.stopped\",\n    \"event_id\":\"event_0ebd8495b5a945e5\",\n    \"response_id\":\"resp_C17PJbWxcyg7tgQBVTAaL\"\n}\n```*/\n                    if (!self.isMicActive) {\n                        self.toggleMute();\n                    }\n                    self.responses[msg.response.id].stack.push(msg);\n                    break;\n                }\n                case \"conversation.item.truncated\": {\n/*```\n{\n    \"type\": \"conversation.item.truncated\",\n    \"event_id\": \"event_BzbmnGqfHdq1hy2Wr2fnA\",\n    \"item_id\": \"item_BzbmmIsy7p3YZXC9HroUp\",\n    \"content_index\": 0,\n    \"audio_end_ms\": 261\n}\n```*/\n                    self.items[msg.item_id].events.push(msg);\n                    break;\n                }\n                // User events.\n                case \"input_audio_buffer.speech_started\": {\n/*```\n{\n    \"type\": \"input_audio_buffer.speech_started\",\n    \"event_id\": \"event_Bzbmm9FJ5oCTmCpng9tem\",\n    \"audio_start_ms\": 820,\n    \"item_id\": \"item_BzbmmcBxU60HVn8xvCWA2\"\n}\n```*/\n                    self.items[msg.item_id].events.push(msg);\n                    break;\n                }\n                case \"input_audio_buffer.speech_stopped\": {\n/*```\n{\n    \"type\": \"input_audio_buffer.speech_stopped\",\n    \"event_id\": \"event_BzbmmUgLX2JKgJr1eMx0l\",\n    \"audio_end_ms\": 1568,\n    \"item_id\": \"item_BzbmmcBxU60HVn8xvCWA2\"\n}\n```*/\n                    if (self.isMicActive) {\n                        self.toggleMute();// Let's disable mic\n                        self.disableMic();\n                    }\n                    self.items[msg.item_id].events.push(msg);\n                    break;\n                }\n                case \"input_audio_buffer.committed\": {\n/*```\n{\n    \"type\": \"input_audio_buffer.committed\",\n    \"event_id\": \"event_BzbmmOICFLRU8vnGEJ6vM\",\n    \"previous_item_id\": null,\n    \"item_id\": \"item_BzbmmcBxU60HVn8xvCWA2\"\n}\n```*/\n                    self.items[msg.item_id].events.push(msg);\n                    break;\n                }\n                case \"conversation.item.created\": {\n/*```\n{\n    \"type\": \"conversation.item.created\",\n    \"event_id\": \"event_BzbmmiskBBbCkRSHvUVrL\",\n    \"previous_item_id\": null,\n    \"item\": {\n        \"id\": \"item_BzbmmcBxU60HVn8xvCWA2\",\n        \"object\": \"realtime.item\",\n        \"type\": \"message\",\n        \"status\": \"completed\",\n        \"role\": \"user\",\n        \"content\": [\n            {\n                \"type\": \"input_audio\",\n                \"transcript\": null\n            }\n        ]\n    }\n}\n```*/\n                    self.items[msg.item.id].events.push(msg);\n                    break;\n                }\n                case \"conversation.item.input_audio_transcription.delta\": {\n/*```\n{\n    \"type\": \"conversation.item.input_audio_transcription.delta\",\n    \"event_id\": \"event_BzbmonQuYXZ7QxUCOLlZd\",\n    \"item_id\": \"item_BzbmmcBxU60HVn8xvCWA2\",\n    \"content_index\": 0,\n    \"delta\": \"Hey.\"\n}\n```*/\n                    self.items[msg.item_id].events.push(msg);\n                    self.items[msg.item_id].content += msg.delta;\n                    break;\n                }\n                case \"conversation.item.input_audio_transcription.completed\": {\n/*```\n{\n    \"type\": \"conversation.item.input_audio_transcription.completed\",\n    \"event_id\": \"event_BzbmotVIjHphgHjViNkZk\",\n    \"item_id\": \"item_BzbmmcBxU60HVn8xvCWA2\",\n    \"content_index\": 0,\n    \"transcript\": \"Hey.\",\n    \"usage\": {\n        \"type\": \"duration\",\n        \"seconds\": 1\n    }\n}\n```*/\n                    self.items[msg.item_id].events.push(msg);\n                    self.items[msg.item_id].content = msg.transcript;\n                    self.loadingMessages.delete(msg.item_id);\n                    break;\n                }\n            }\n            self.renderUI();\n        },\n\n        enableMic: function() {\n            var self = this;\n            if (self.controls.toggleMicBtn) {\n                log.debug('Enabling mic');\n                self.controls.toggleMicBtn.parentElement.classList.remove('disabled');\n            }\n        },\n\n        disableMic: function() {\n            var self = this;\n            if (self.controls.toggleMicBtn) {\n                log.debug('Disabling mic');\n                self.controls.toggleMicBtn.parentElement.classList.add('disabled');\n            }\n        },\n\n        initializeMicStream: async function() {\n            var self = this;\n            try {\n                self.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n                self.analyser = self.audioContext.createAnalyser();\n                self.analyser.fftSize = 2048;\n                const bufferLength = self.analyser.frequencyBinCount;\n                self.dataArray = new Uint8Array(bufferLength);\n\n                self.sourceNode = self.audioContext.createMediaStreamSource(self.mediaStream);\n                // Source is connected/disconnected in toggleMute\n                self.isMicInitialized = true;\n                return true;\n            } catch (err) {\n                log.debug(\"Error accessing microphone:\", err);\n                self.isMicInitialized = false;\n                log.debug(\"Could not access microphone. Please ensure it's connected and permissions are granted.\");\n                return false;\n            }\n        },\n\n        // Toggles mute/unmute state of the mic\n        toggleMute: async function() {\n            var self = this;\n            if (!self.isMicInitialized) {\n                const success = await self.initializeMicStream();\n                if (!success) {\n                    return;\n                } // If initialization failed, stop here\n            }\n\n            if (self.isMicActive) {\n                // Mute mic: Disconnect source from analyser\n                if (self.sourceNode && self.analyser) {\n                    self.sourceNode.disconnect(self.analyser);\n                }\n                if (self.animationFrameId) {\n                    cancelAnimationFrame(self.animationFrameId);\n                    self.animationFrameId = null;\n                }\n                if (self.pc) {\n                    self.mediaStream.getTracks().forEach((track) => {\n                        track.enabled = false;\n                    });\n                }\n                if (self.canvasCtx) {\n                    self.canvasCtx.clearRect(0, 0, self.controls.micWaveformCanvas.width, self.controls.micWaveformCanvas.height); // Clear canvas\n                }\n                self.isMicActive = false;\n            } else {\n                // Unmute mic: Connect source to analyser\n                if (self.sourceNode && self.analyser) {\n                    self.sourceNode.connect(self.analyser);\n                }\n\n                if (self.pc) {\n                    self.mediaStream.getTracks().forEach((track) => {\n                        track.enabled = true;\n                    });\n                }\n                self.isMicActive = true;\n                self.drawWave(); // Start drawing waveform\n            }\n            self.renderUI(); // Update UI\n        },\n\n        releaseMicResources: function() {\n            var self = this;\n            if (self.animationFrameId) {\n                cancelAnimationFrame(self.animationFrameId);\n                self.animationFrameId = null;\n            }\n            if (self.mediaStream) {\n                self.mediaStream.getTracks().forEach((track) => {\n                    if (self.pc) {\n                        self.pc.removeTrack(track, self.mediaStream);\n                    }\n                    track.stop();\n                });\n                self.mediaStream = null;\n            }\n            if (self.sourceNode) {\n                self.sourceNode.disconnect();\n                self.sourceNode = null;\n            }\n            if (self.audioContext) {\n                self.audioContext.close();\n                self.audioContext = null;\n            }\n            self.isMicActive = false;\n            self.isMicInitialized = false;\n            if (self.canvasCtx) {\n                self.canvasCtx.clearRect(0, 0, self.controls.micWaveformCanvas.width, self.controls.micWaveformCanvas.height); // Clear canvas\n            }\n            self.renderUI(); // Update UI to show mic inactive\n        },\n\n        drawWave: function() {\n            var self = this;\n            if (!self.canvasCtx || !self.analyser || !self.dataArray || !self.isMicActive) {\n                self.animationFrameId = null; // Stop animation if conditions are not met\n                return;\n            }\n\n            const WIDTH = self.controls.micWaveformCanvas.width;\n            const HEIGHT = self.controls.micWaveformCanvas.height;\n\n            self.animationFrameId = requestAnimationFrame(self.drawWave.bind(self));\n\n            self.analyser.getByteTimeDomainData(self.dataArray); // Get waveform data\n\n            self.canvasCtx.clearRect(0, 0, WIDTH, HEIGHT); // Clear previous drawing\n            self.canvasCtx.lineWidth = 2;\n            self.canvasCtx.strokeStyle = \"rgb(255, 255, 255)\"; // White color for wave on blue background\n\n            self.canvasCtx.beginPath();\n\n            const sliceWidth = (WIDTH * 1.0) / self.dataArray.length;\n            let x = 0;\n\n            for (let i = 0; i < self.dataArray.length; i++) {\n                const v = self.dataArray[i] / 128.0; // Normalize to 0-2\n                const y = (v * HEIGHT) / 2;\n\n                if (i === 0) {\n                    self.canvasCtx.moveTo(x, y);\n                } else {\n                    self.canvasCtx.lineTo(x, y);\n                }\n\n                x += sliceWidth;\n            }\n\n            self.canvasCtx.lineTo(WIDTH, HEIGHT / 2);\n            self.canvasCtx.stroke();\n        },\n\n        populateMicList: async function() {\n            var self = this;\n            try {\n                const devices = await navigator.mediaDevices.enumerateDevices();\n                const mics = devices.filter(device => device.kind === \"audioinput\");\n                const select = self.controls.micSelect;\n\n                select.innerHTML = \"\"; // Clear existing options\n\n                // Group by groupId to remove duplicates\n                const uniqueMics = [];\n                const seenGroups = new Set();\n\n                for (const mic of mics) {\n                    if (!seenGroups.has(mic.groupId)) {\n                        uniqueMics.push(mic);\n                        seenGroups.add(mic.groupId);\n                    }\n                }\n\n                if (uniqueMics.length <= 1) {\n                    select.disabled = true;\n                    return;\n                }\n                uniqueMics.forEach((mic, index) => {\n                    const option = document.createElement(\"option\");\n                    option.value = mic.deviceId;\n                    option.text = mic.label || `Microphone ${index + 1}`;\n                    select.appendChild(option);\n                });\n                select.parentElement.classList.remove('hidden');\n\n                // Set change listener\n                select.addEventListener(\"change\", async(e) => {\n                    const deviceId = e.target.value;\n                    await self.switchMic(deviceId);\n                });\n            } catch (err) {\n                log.debug(\"Failed to get microphone list:\", err);\n            }\n        },\n\n        switchMic: async function(deviceId) {\n            var self = this;\n\n            // Stop and release current mic\n            if (self.mediaStream) {\n                self.mediaStream.getTracks().forEach(track => track.stop());\n            }\n\n            try {\n                // Get new media stream from selected device\n                self.mediaStream = await navigator.mediaDevices.getUserMedia({\n                    audio: {deviceId: {exact: deviceId}}\n                });\n\n                // Replace tracks in PeerConnection\n                if (self.pc) {\n                    const senders = self.pc.getSenders();\n                    const audioTrack = self.mediaStream.getAudioTracks()[0];\n                    const audioSender = senders.find(sender => sender.track.kind === 'audio');\n                    if (audioSender) {\n                        audioSender.replaceTrack(audioTrack);\n                    }\n                }\n\n                // Reinitialize mic stream and waveform\n                await self.initializeMicStream();\n                if (self.isMicInitialized) {\n                    self.sourceNode.connect(self.analyser);\n                    self.mediaStream.getTracks().forEach((track) => {\n                        track.enabled = self.isMicActive;\n                    });\n                    if (self.isMicActive) {\n                        self.drawWave();\n                    }\n                }\n\n                log.debug(\"Switched microphone to:\" + deviceId);\n            } catch (err) {\n                log.debug(\"Failed to switch microphone:\");\n                log.debug(err);\n            }\n        },\n\n    }; // End of return object.\n});"],"names":["define","$","log","def","ttrecorder","templates","debug","controls","itemdata","index","quizhelper","pc","dc","audiochat_voice","isSessionStarted","isSessionStopped","isSessionActive","isLoading","isMicActive","isMicInitialized","loadingMessages","Set","audioContext","analyser","dataArray","sourceNode","mediaStream","animationFrameId","canvasCtx","eventlogs","items","responses","abortcontroller","AbortController","clone","extend","this","init","init_controls","init_voice","register_events","next_question","stepdata","hasgrade","totalitems","totalmarks","correctitems","grade","resultsdata","do_next","self","nextbutton","on","uniqueid","timelimit","show","progressTimer","height","timeLimit","onFinish","trigger","toggleMicBtn","addEventListener","toggleMute","bind","voice","includes","async","container","document","getElementById","hiddenaudio","querySelector","startSessionBtn","stopSessionBtn","loadingIndicator","aiAvatarSection","conversationSection","messagesContainer","micButtonContainer","micIcon","micWaveformCanvas","micSelect","finishMessage","retrySessionBtn","cancelStartSessionBtn","getContext","startSession","stopSession","abort","populateMicList","renderUI","scrollToBottom","firstElementChild","scrollIntoViewIfNeeded","scrollTop","scrollHeight","classList","toggle","endScreen","parentElement","disabled","currentItem","orderedItems","idMap","Map","previousMap","Object","values","forEach","item","set","id","previous_item_id","push","get","innerHTML","message","content","messageDiv","createElement","className","usertype","contentDiv","headerDiv","pictureDiv","M","cfg","wwwroot","appendChild","textDiv","textContent","has","loaderDiv","twoletterlang","language","substr","RTCPeerConnection","iceServers","urls","createDataChannel","onmessage","e","data","lines","split","filter","Boolean","line","handleRTCEvent","call","JSON","parse","err","onopen","sendEvent","type","session","instructions","audiochatinstructions","input_audio_format","input_audio_transcription","model","turn_detection","speed","response","modalities","ontrack","event","srcObject","streams","navigator","mediaDevices","getUserMedia","audio","getTracks","track","enabled","addTrack","offer","createOffer","offerToReceiveAudio","setLocalDescription","waitForIceGathering","sdpResponse","fetch","method","headers","body","localDescription","sdp","signal","ok","text","answer","setRemoteDescription","close","stop","clear","releaseMicResources","Promise","resolve","iceGatheringState","checkState","removeEventListener","obj","readyState","send","stringify","msg","msgresponse_id","response_id","msgitem_id","item_id","itemid","stack","events","time","Date","now","toString","role","add","enableMic","delta","transcript","delete","disableMic","remove","initializeMicStream","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","bufferLength","frequencyBinCount","Uint8Array","createMediaStreamSource","disconnect","cancelAnimationFrame","clearRect","width","connect","drawWave","removeTrack","WIDTH","HEIGHT","requestAnimationFrame","getByteTimeDomainData","lineWidth","strokeStyle","beginPath","sliceWidth","length","x","i","y","moveTo","lineTo","stroke","mics","enumerateDevices","device","kind","select","uniqueMics","seenGroups","mic","groupId","option","value","deviceId","label","target","switchMic","exact","senders","getSenders","audioTrack","getAudioTracks","audioSender","find","sender","replaceTrack"],"mappings":"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"}