define(["jquery","core/log"],(function($,log){return log.debug("TT Streamer initialising"),{streamingtoken:null,socket:null,clone:function(){return $.extend(!0,{},this)},init:function(streamingtoken){this.streamingtoken=streamingtoken,this.preparesocket()},preparesocket:async function(){var that=this;this.socket=await new WebSocket("wss://api.assemblyai.com/v2/realtime/ws?sample_rate=16000&encoding=pcm_s16le&token=".concat(this.streamingtoken));const texts={};this.socket.onmessage=message=>{let msg="";const res=JSON.parse(message.data);texts[res.audio_start]=res.text;const keys=Object.keys(texts);keys.sort(((a,b)=>a-b));for(const key of keys)texts[key]&&(msg+=" ".concat(texts[key]));log.debug(msg)},this.socket.onopen=event=>{log.debug("TT Streamer socket opened"),that.ready=!0},this.socket.onerror=event=>{log.debug(event),that.socket.close()},this.socket.onclose=event=>{log.debug(event),that.socket=null}},audioprocess:function(audiodata){if(void 0!==this.ready&&this.ready){var monoaudiodata=audiodata[0],tempbuffer=[];for(let i=0;i<monoaudiodata.length;i++){const sample=Math.max(-1,Math.min(1,monoaudiodata[i])),intSample=sample<0?32768*sample:32767*sample;tempbuffer.push(255&intSample),tempbuffer.push(intSample>>8&255)}for(var sendbuffer=new Uint8Array(tempbuffer),binary="",i=0;i<sendbuffer.length;i++)binary+=String.fromCharCode(sendbuffer[i]);var base64=btoa(binary);this.socket&&this.socket.send(JSON.stringify({audio_data:base64}))}},finish:function(mimeType){void 0!==this.ready&&this.ready&&this.cleanup()},cancel:function(){delete this.ready},cleanup:function(){this.cancel()}}}));

//# sourceMappingURL=ttstreamer.min.js.map