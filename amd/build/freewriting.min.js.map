{"version":3,"file":"freewriting.min.js","sources":["../src/freewriting.js"],"sourcesContent":["define(['jquery', 'core/log','core/str', 'core/notification','mod_minilesson/definitions', 'mod_minilesson/correctionsmarkup', 'core/templates'],\n    function($, log,  str, notification, def,  correctionsmarkup, templates) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the free writing item type\n   */\n\n  log.debug('MiniLesson FreeWriting: initialising');\n\n      return {\n\n        transcript_evaluation: null,\n        rawscore: 0,\n        percentscore: 0,\n        strings: {},\n\n        //for making multiple instances\n        clone: function () {\n          return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n          this.itemdata = itemdata;\n          log.debug('itemdata',itemdata);\n          this.quizhelper = quizhelper;\n          this.init_strings();\n          this.init_components(quizhelper,itemdata);\n          this.register_events(index, itemdata, quizhelper);\n        },\n\n        init_strings: function(){\n          var self = this;\n          str.get_strings([\n            { \"key\": \"notsubmitted\", \"component\": 'mod_minilesson'},\n            { \"key\": \"notsubmit\", \"component\": 'mod_minilesson'},\n            { \"key\": \"submitnow\", \"component\": 'mod_minilesson'},\n            { \"key\": \"cancel\", \"component\": 'core'},\n          ]).done(function (s) {\n            var i = 0;\n            self.strings.notsubmitted = s[i++];\n            self.strings.notsubmit = s[i++];\n            self.strings.submitnow = s[i++];\n            self.strings.cancel = s[i++];\n          });\n        },\n\n        next_question: function() {\n          var self = this;\n          var stepdata = {};\n          stepdata.index = self.index;\n          stepdata.hasgrade = true;\n          stepdata.totalitems = self.itemdata.totalmarks;\n          stepdata.correctitems = self.rawscore > 0 ? self.rawscore : 0;\n          stepdata.grade = self.percentscore;\n          stepdata.resultsdata = self.transcript_evaluation;\n          self.quizhelper.do_next(stepdata);\n        },\n\n        calculate_score: function(transcript_evaluation) {\n          var self = this;\n\n          if(transcript_evaluation === null){\n            return 0;\n          }\n\n          //words ratio\n          var wordsratio = 1;\n          if(self.itemdata.countwords) {\n            wordsratio = transcript_evaluation.stats.words / self.itemdata.targetwordcount;\n            if(wordsratio > 1){wordsratio = 1;}\n          }\n\n          //relevance\n          var relevanceratio = 1;\n          if(self.itemdata.relevance > 0){\n            relevanceratio = (transcript_evaluation.stats.relevance + 10) / 100;\n            if(relevanceratio > 1){relevanceratio = 1;}\n          }\n          //calculate score based on AI grade * relevance * wordcount\n          var score = Math.round(transcript_evaluation.marks * relevanceratio * wordsratio);\n          return score;\n        },\n\n        register_events: function(index, itemdata, quizhelper) {\n\n          var self = this;\n          self.index = index;\n          self.quizhelper = quizhelper;\n\n          self.nextbutton.on('click', function(e) {\n            e.preventDefault();\n            var wordcount = self.quizhelper.count_words(self.thetextarea.val());\n            var submitted = self.transcript_evaluation !== null;\n            if(submitted || wordcount === 0 ) {\n              self.next_question();\n            }else{\n              notification.confirm(self.strings.notsubmit,\n                  self.strings.notsubmitted,\n                  self.strings.submitnow,'',\n                  function(){\n                    self.submitbutton.click();\n                  });\n            }\n          });\n\n          self.thetextarea.on('input', function(e) {\n            e.preventDefault();\n            var wordcount = self.quizhelper.count_words(self.thetextarea.val());\n            self.wordcount.text(wordcount);\n          });\n\n          if(self.itemdata.nopasting > 0){\n             self.thetextarea.bind(\"cut copy paste\", function(e) {\n              e.preventDefault();\n              });\n              self.thetextarea.bind(\"contextmenu\", function(e) {\n                e.preventDefault();\n              });\n          }\n\n          self.submitbutton.on('click', function(e) {\n            e.preventDefault();\n            var transcript = self.thetextarea.val();\n            //update the wordcount\n            var wordcount = self.quizhelper.count_words(transcript);\n            self.wordcount.text(wordcount);\n\n            self.do_evaluation(transcript);\n          });\n\n          $(\"#\" + itemdata.uniqueid + \"_container\").on(\"showElement\", () => {\n              if (itemdata.timelimit > 0) {\n                $(\"#\" + itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + itemdata.uniqueid + \"_container .progress-container i\").show();\n                $(\"#\" + itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: itemdata.timelimit,\n                    onFinish: function() {\n                        self.nextbutton.trigger('click');\n                    }\n                });\n              }\n          });\n\n        },\n\n        init_components: function(quizhelper,itemdata){\n          var self=this;\n          self.allwords = $(\"#\" + self.itemdata.uniqueid + \"_container.mod_minilesson_mu_passage_word\");\n          self.submitbutton = $(\"#\" + itemdata.uniqueid + \"_container .ml_freewriting_submitbutton\");\n          self.nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n          self.thetextarea = $(\"#\" + self.itemdata.uniqueid + \"_container .ml_freewriting_textarea\");\n          self.wordcount = $(\"#\" + self.itemdata.uniqueid + \"_container span.ml_wordcount\");\n          self.actionbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freewriting_actionbox\");\n          self.pendingbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freewriting_pendingbox\");\n          self.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freewriting_resultsbox\");\n          self.timerdisplay = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freewriting_timerdisplay\");\n        }, //end of init components\n\n        do_corrections_markup: function(grammarerrors,grammarmatches,insertioncount) {\n          var self = this;\n          //corrected text container is created at runtime, so it wont exist at init_components time\n          //that's why we find it here\n          var correctionscontainer = self.resultsbox.find('.mlfsr_correctedtext');\n\n          correctionsmarkup.init({ \"correctionscontainer\": correctionscontainer,\n            \"grammarerrors\": grammarerrors,\n            \"grammarmatches\": grammarmatches,\n            \"insertioncount\": insertioncount});\n        },\n\n        do_evaluation: function(speechtext) {\n          var self = this;\n\n          //show a spinner while we do the AI stuff\n          self.resultsbox.hide();\n          self.actionbox.hide();\n          self.pendingbox.show();\n\n          //do evaluation\n          this.quizhelper.evaluateTranscript(speechtext,this.itemdata.itemid).then(function(ajaxresult) {\n            var transcript_evaluation = JSON.parse(ajaxresult);\n            if (transcript_evaluation) {\n              //calculate raw score and percent score\n              transcript_evaluation.rawscore = self.calculate_score(transcript_evaluation);\n              self.rawscore = self.calculate_score(transcript_evaluation);\n              if(self.itemdata.totalmarks > 0){\n                self.percentscore = Math.round((self.rawscore / self.itemdata.totalmarks) * 100);\n              }\n              //add raw and percent score to trancript_evaluation for mustache\n              transcript_evaluation.rawscore = self.rawscore;\n              transcript_evaluation.percentscore = self.percentscore;\n              transcript_evaluation.rawspeech = speechtext;\n              transcript_evaluation.maxscore = self.itemdata.totalmarks;\n              self.transcript_evaluation = transcript_evaluation;\n\n              log.debug(transcript_evaluation);\n\n              //display results or move next if not show item review\n              if(!self.quizhelper.showitemreview){\n                self.next_question();\n              }else{\n                templates.render('mod_minilesson/freewritingresults',transcript_evaluation).then(\n                    function(html,js){\n                      self.resultsbox.html(html);\n                      //do corrections markup\n                      if(transcript_evaluation.hasOwnProperty('grammarerrors')){\n                        self.do_corrections_markup(transcript_evaluation.grammarerrors,\n                            transcript_evaluation.grammarmatches,\n                            transcript_evaluation.insertioncount\n                        );\n                      }\n                      //show and hide\n                      self.resultsbox.show();\n                      self.pendingbox.hide();\n                      self.actionbox.hide();\n                      templates.runTemplateJS(js);\n                      //reset timer and wordcount on this page, in case reattempt\n                      self.wordcount.text('0');\n                      self.ttrec.timer.reset();\n                      var displaytime = self.ttrec.timer.fetch_display_time();\n                      self.timerdisplay.html(displaytime);\n                    }\n                );// End of templates\n              }//end of show item review or not\n            } else {\n              log.debug('transcript_evaluation: oh no it failed');\n              self.resultsbox.hide();\n              self.pendingbox.hide();\n              self.actionbox.show();\n            }\n          });\n        },\n      };\n});"],"names":["define","$","log","str","notification","def","correctionsmarkup","templates","debug","transcript_evaluation","rawscore","percentscore","strings","clone","extend","this","init","index","itemdata","quizhelper","init_strings","init_components","register_events","self","get_strings","done","s","i","notsubmitted","notsubmit","submitnow","cancel","next_question","stepdata","hasgrade","totalitems","totalmarks","correctitems","grade","resultsdata","do_next","calculate_score","wordsratio","countwords","stats","words","targetwordcount","relevanceratio","relevance","Math","round","marks","nextbutton","on","e","preventDefault","wordcount","count_words","thetextarea","val","confirm","submitbutton","click","text","nopasting","bind","transcript","do_evaluation","uniqueid","timelimit","show","progressTimer","height","timeLimit","onFinish","trigger","allwords","actionbox","pendingbox","resultsbox","timerdisplay","do_corrections_markup","grammarerrors","grammarmatches","insertioncount","correctionscontainer","find","speechtext","hide","evaluateTranscript","itemid","then","ajaxresult","JSON","parse","rawspeech","maxscore","showitemreview","render","html","js","hasOwnProperty","runTemplateJS","ttrec","timer","reset","displaytime","fetch_display_time"],"mappings":"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"}