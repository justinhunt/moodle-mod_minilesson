{"version":3,"file":"audiostory.min.js","sources":["../src/audiostory.js"],"sourcesContent":["define(['jquery','core/log'], function($,log) {\n    \"use strict\"; // jshint ;_;\n\n\n    log.debug('MiniLesson Audio Story: initialising');\n\n    var audiostoryapp ={\n        animateFrameId: null,\n        currentIndex: -1,\n        secondsPerImage:  25, //this is the animation length, before it reverses\n        pp: 10,//panfactor +, // eg 5\n        pm: -10,//panfactor -, eg -5\n        maxzoom: 1.3, // zoom will go from maxzoom to 1.0 and back again\n        entryTimes: [],\n        controls: {},\n        panOptions: null,\n\n        init: function(uniqid){\n            var self =this;\n            self.panOptions = [\n                { xStart: this.pm, yStart: 0,   xEnd: this.pp, yEnd: 0   },\n                { xStart: this.pp,  yStart: 0,   xEnd: this.pm, yEnd: 0  },\n                { xStart: 0,   yStart: this.pm, xEnd: 0, yEnd: this.pp   },\n                { xStart: 0,   yStart: this.pp,  xEnd: 0, yEnd: this.pm  },\n                { xStart: this.pm, yStart: this.pm, xEnd: this.pp, yEnd: this.pp  },\n                { xStart: this.pp,  yStart: this.pp,  xEnd: this.pm, yEnd: this.pm }\n            ];\n            self.init_controls(uniqid);\n            self.register_events();\n        },\n\n        init_controls: function(uniqid){\n            var self = this;\n            self.controls.aplayer = $('#' + uniqid + '_audiostory_audio');\n            self.controls.slideshowcontainer = $('#' + uniqid + '_audiostory_slideshow_container');\n            self.controls.captioncontainer = $('#' + uniqid + '_audiostory_caption');\n            self.controls.images = $('#' + uniqid + '_audiostory_slideshow_container' + ' .audiostory_image_container');\n            self.controls.overlay = self.controls.slideshowcontainer.find('.audiostory_overlay');\n            self.controls.playbutton = self.controls.overlay.find('.audiostory_play_button');\n            self.controls.layers = [];\n            self.controls.entryTimes = [];\n            self.controls.images.each(function(index, element) {\n                var entrytime = element.dataset.entrytime;\n                if(entrytime==''){ return;} // \n                const pan = self.panOptions[Math.floor(Math.random() * self.panOptions.length)];\n                self.controls.layers.push({ element: element, pan });\n                self.controls.entryTimes.push(entrytime);\n            });\n            //add some more information to layers\n            self.controls.layers.forEach(layer => {\n                layer.animation = {\n                    direction: 1, // 1 = zoom out, -1 = zoom in\n                    progress: 0, // 0 to 1\n                    lastTimestamp: null\n                };\n            });\n            // Show the first image at rest (no pan/zoom)\n            const firstImage = self.controls.layers[0];\n            if (firstImage) {\n                firstImage.element.style.opacity = '1';\n                firstImage.element.style.transform = 'scale(1) translate(0, 0)';\n            }\n\n        },\n\n\n        register_events: function(){\n            var self = this;\n            const audio = self.controls.aplayer[0];\n            const captionDiv = self.controls.captioncontainer[0];\n            const layers = self.controls.layers;\n\n            \n\n            self.controls.playbutton.on('click', () => {\n                self.controls.overlay.hide();\n                audio.play(); // this triggers animation\n            });\n\n            audio.addEventListener('play', () => {\n                self.controls.overlay.hide();\n                if (!self.animationFrameId) {\n                    self.animationFrameId = requestAnimationFrame(self.update);\n                }\n            });\n\n            audio.addEventListener('pause', () => {\n                if (self.animationFrameId) {\n                    cancelAnimationFrame(self.animationFrameId);\n                    self.animationFrameId = null;\n                }\n            });\n\n            audio.addEventListener('seeked', () => {\n                self.currentIndex = -1;\n                if (!audio.paused) self.update();\n            });\n\n            // Caption handling using textTracks\n            const handleLoadedMetadata = () => {\n                log.debug('Audio metadata loaded, setting up captions');\n                const track = audio.textTracks[0];\n                if (!track) {\n                    log.debug('no text tracks not setting up captions');\n                    return;\n                }\n\n                track.mode = 'hidden'; // load cues, but don't show default UI\n\n                track.addEventListener('cuechange', () => {\n                const cue = track.activeCues[0];\n                if (cue) {\n                    captionDiv.textContent = cue.text;\n                } else {\n                    captionDiv.textContent = '';\n                }\n                });\n            };\n            //depending on state of audio load, do metadata or register an event for it\n            if (audio.readyState >= 1) {\n                handleLoadedMetadata();\n            } else {\n                audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n            }\n           \n        },\n\n        animateCurrentImage: function(timestamp) {\n            var self = this;\n            var layers = self.controls.layers;\n            var entryTimes = self.controls.entryTimes;\n            var audio = self.controls.aplayer[0];\n\n            if (self.currentIndex < 0 || self.currentIndex >= layers.length) return;\n\n            const imageObj = layers[self.currentIndex];\n            const { element, pan, animation } = imageObj;\n            \n\n            if (animation.lastTimestamp != null) {\n                const delta = timestamp - animation.lastTimestamp;\n                // Set zoom timing\n                const duration = self.secondsPerImage * 1000; // adjust as needed\n                animation.progress += (delta / duration)  * animation.direction;\n\n                if (animation.progress > 1) {\n                    animation.progress = 1;\n                    animation.direction = -1;\n                } else if (animation.progress < 0) {\n                    animation.progress = 0;\n                    animation.direction = 1;\n                }\n            }\n            animation.lastTimestamp = timestamp;\n\n            const easedProgress = 0.5 - 0.5 * Math.cos(Math.PI * animation.progress);\n            //this the zoom scale : \n            // if maxzoom is 1.3 then at progress 0 zoom is 1.3, at progress 1 zoom is 1.0\n            const scale = self.maxzoom - (self.maxzoom - 1) * easedProgress;\n   \n            // from 0 (zoomed out) to 1 (zoomed in)  -  this means we dont pan when zoomed out\n            const panFactor = easedProgress; \n            const x = (pan.xStart + (pan.xEnd - pan.xStart) * panFactor);\n            const y = (pan.yStart + (pan.yEnd - pan.yStart) * panFactor);\n\n            element.style.transform = `scale(${scale}) translate(${x}px, ${y}px)`;\n        },\n\n        update: function(timestamp) {\n            var self = audiostoryapp;\n            const audio = self.controls.aplayer[0];\n            const layers = self.controls.layers;\n            const currentTime = audio.currentTime;\n            const entryTimes = self.controls.entryTimes;\n\n            let newIndex = -1;\n            for (let i = 0; i < entryTimes.length; i++) {\n                if (currentTime >= entryTimes[i]) {\n                    newIndex = i;\n                } else {\n                    break;\n                }\n            }\n\n            if (newIndex !== self.currentIndex) {\n            self.currentIndex = newIndex;\n            layers.forEach((l, i) => {\n                l.element.style.opacity = i === self.currentIndex ? '1' : '0';\n                l.animation.progress = 0;\n                l.animation.direction = 1;\n                l.animation.lastTimestamp = null;\n            });\n            }\n\n            self.animateCurrentImage(timestamp);\n\n            self.animationFrameId = requestAnimationFrame(self.update);\n        },\n\n    };//end of audiostoryapp def\n    return audiostoryapp;\n});"],"names":["define","$","log","debug","audiostoryapp","animateFrameId","currentIndex","secondsPerImage","pp","pm","maxzoom","entryTimes","controls","panOptions","init","uniqid","this","xStart","yStart","xEnd","yEnd","init_controls","register_events","self","aplayer","slideshowcontainer","captioncontainer","images","overlay","find","playbutton","layers","each","index","element","entrytime","dataset","pan","Math","floor","random","length","push","forEach","layer","animation","direction","progress","lastTimestamp","firstImage","style","opacity","transform","audio","captionDiv","on","hide","play","addEventListener","animationFrameId","requestAnimationFrame","update","cancelAnimationFrame","paused","handleLoadedMetadata","track","textTracks","mode","cue","activeCues","textContent","text","readyState","animateCurrentImage","timestamp","imageObj","delta","duration","easedProgress","cos","PI","scale","panFactor","x","y","currentTime","newIndex","i","l"],"mappings":"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"}