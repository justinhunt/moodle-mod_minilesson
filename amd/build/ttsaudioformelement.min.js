define(["exports","core/log","core/config","core/fragment","core/templates"],(function(_exports,_log,_config,_fragment,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.registerElement=void 0,_log=_interopRequireDefault(_log),_config=_interopRequireDefault(_config),_fragment=_interopRequireDefault(_fragment),_templates=_interopRequireDefault(_templates);_exports.registerElement=_ref=>{let{component:component,fragmentcallback:fragmentcallback,elementid:elementid}=_ref;const element=document.getElementById(elementid);element&&(_log.default.debug(element),element.addEventListener("change",(()=>{const rootelement=element.closest('[data-root="elementwrapper"]'),loaderElement=rootelement.querySelector('[data-region="'.concat("overlay-icon-container",'"]'));const params={...element.dataset},formdata=new FormData;params.options=JSON.stringify({...rootelement.dataset}),rootelement.querySelectorAll("select").forEach((selectel=>{selectel instanceof HTMLSelectElement&&[...selectel.selectedOptions].forEach((option=>{formdata.append(selectel.getAttribute("name"),option.value)}))})),params.formdata=new URLSearchParams([...formdata.entries()]).toString(),loaderElement&&loaderElement.classList.remove("hidden"),_fragment.default.loadFragment(component,fragmentcallback,_config.default.contextid,params).then(((html,js)=>{_templates.default.replaceNode(rootelement,html,js)}))})))}}));

//# sourceMappingURL=ttsaudioformelement.min.js.map