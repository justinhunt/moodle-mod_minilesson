{"version":3,"file":"wordshuffle.min.js","sources":["../src/wordshuffle.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates',\n    'core/notification',\n    'core/str',\n], function($, log, ajax, def, polly, anim, progresstimer, templates, notification, str) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson wordshuffle: initialising');\n\n    return {\n\n        strings: {},\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        usevoice: 'Amy',\n\n        pointerdiv: null,\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            // Default to true, we might implement a start page later.\n            self.itemdata.hidestartpage = true;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n            self.init_strings();\n            self.init_controls();\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n            self.start();\n        },\n\n        init_controls: function() {\n            var self = this;\n            var container = $(\"#\" + self.itemdata.uniqueid + \"_container\");\n            self.controls = {\n                container: container,\n                listen_cont: container.find(\".wordshuffle_listen_cont\"),\n                nextbutton: container.find(\".minilesson_nextbutton\"),\n                start_btn: container.find(\".wordshuffle_start_btn\"),\n                skip_btn: container.find(\".wordshuffle_skip_btn\"),\n                ctrl_btn: container.find(\".wordshuffle_ctrl-btn\"),\n                check_btn: container.find(\".wordshuffle_check_btn\"),\n                game: container.find(\".wordshuffle_game\"),\n                controlsbox: container.find(\".wordshuffle_controls\"),\n                resultscontainer: container.find(\".wordshuffle_resultscontainer\"),\n                mainmenu: container.find(\".wordshuffle_mainmenu\"),\n                title: container.find(\".wordshuffle_title\"),\n                progress_container: container.find(\".progress-container\"),\n                progress_bar: container.find(\".progress-container .progress-bar\"),\n                question: container.find(\".question\"),\n                listen_btn: container.find(\".wordshuffle_listen_btn\"),\n                retry_btn: container.find(\".wordshuffle_retry_btn\")\n            };\n        },\n\n        init_strings: function() {\n            var self = this;\n            str.get_strings([\n                { \"key\": \"nextlessonitem\", \"component\": 'mod_minilesson'},\n                { \"key\": \"confirm_desc\", \"component\": 'mod_minilesson'},\n                { \"key\": \"yes\", \"component\": 'moodle'},\n                { \"key\": \"no\", \"component\": 'moodle'},\n            ]).done(function (s) {\n                var i = 0;\n                self.strings.nextlessonitem = s[i++];\n                self.strings.confirm_desc = s[i++];\n                self.strings.yes = s[i++];\n                self.strings.no = s[i++];\n            });\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n\n            //stop audio\n            self.stop_audio();\n\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = self.controls.listen_cont;\n            var qbox = self.controls.question;\n            var gamebox = self.controls.game;\n            var controlsbox = self.controls.controlsbox;\n            var resultsbox = self.controls.resultscontainer;\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  //recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            self.controls.nextbutton.on('click', function(e) {\n                if (self.items.some(item => !item.answered)) {\n                    notification.confirm(self.strings.nextlessonitem,\n                        self.strings.confirm_desc,\n                        self.strings.yes,\n                        self.strings.no,\n                        function() {\n                            self.next_question();\n                        }\n                    );\n                } else {\n                    self.next_question();\n                }\n            });\n\n            self.controls.start_btn.on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER events\n            var audioplayerbtn = self.controls.listen_btn;\n            //audio button click event\n            audioplayerbtn.on(\"click\", function() {\n                var theaudio =self.items[self.game.pointer].audio;\n\n                //if we are already playing stop playing\n                if(!theaudio.paused){\n                    theaudio.pause();\n                    theaudio.currentTime=0;\n                    $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                    $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    return;\n                }\n\n                //change icon to indicate playing state\n                theaudio.addEventListener('ended', function(){\n                    $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                    $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                });\n\n                theaudio.addEventListener('play', function(){\n                    $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                    $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                });\n\n                theaudio.load();\n                theaudio.play();\n            });\n\n            // On skip button click\n            self.controls.skip_btn.on(\"click\", function() {\n                // Disable buttons\n                self.controls.ctrl_btn.prop(\"disabled\", true);\n                // Reveal prompt\n                self.controls.container.find('.wordshuffle_speech.wordshuffle_teacher_left').text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal answers\n                self.controls.container.find('.wordshuffle_targetWord').each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var wordshuffle_targetWord = self.items[self.game.pointer].wordshuffle_targetWords[realidx];\n                    $(this).val(wordshuffle_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                // Move on after short time, to next prompt, or next question\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        self.controls.container.find('.wordshuffle_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n\n            self.controls.check_btn.on(\"click\", function() {\n                self.pointerdiv.find(\".drop-slot .word\").each(function () {\n                    self.placeInBank($(this));\n                });\n                self.clearPerSlotFeedback();\n                self.controls.retry_btn.hide();\n                self.items[self.game.pointer].answered = false;\n                self.items[self.game.pointer].correct = false;\n            });\n\n            self.controls.retry_btn.on(\"click\", function() {\n                self.pointerdiv.find(\".drop-slot .word\").each(function () {\n                    self.placeInBank($(this));\n                });\n                self.clearPerSlotFeedback();\n                self.controls.retry_btn.hide();\n                self.controls.check_btn.show();\n                self.items[self.game.pointer].answered = false;\n                self.items[self.game.pointer].correct = false;\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n\n            // self.evaluateIfComplete();\n            if (self.itemdata.allowretry && !self.items[self.game.pointer].correct) {\n                self.controls.retry_btn.show();\n                self.controls.check_btn.hide();\n            } else {\n                setTimeout(() => self.gotComparison(true), 2000);\n            }\n        },\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentenceclean,\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    audiourl: target.audiourl ? target.audiourl : \"\",\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            if(self.itemdata.audiocontent) {\n                $.each(self.items, function (index, item) {\n                    item.audio = new Audio();\n                    item.audio.src = item.audiourl;\n                });\n                self.appReady();\n            }else{\n                self.appReady();\n            }\n\n        },\n\n        appReady: function() {\n            var self = this;\n            self.controls.container.find('.wordshuffle_not_loaded').hide();\n            self.controls.container.find('.wordshuffle_loaded').show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                self.controls.start_btn.prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            log.debug(\"gotComparison\", comparison);\n            var timelimit_progressbar = self.controls.progress_bar;\n            if (comparison) {\n                log.debug(\"correct!!\");\n\n\n                //if they cant retry OR the time limit is up, move on\n            } else if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')) {\n                log.debug(\"incorrect\");\n\n            } else {\n                //it was wrong but they can retry\n                log.debug(\"incorrect!! retry\");\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    self.controls.container.find('.wordshuffle_reply_' + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        end: function() {\n            var self = this;\n            self.controls.nextbutton.prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            //disable the buttons and go to next question or review\n            setTimeout(function() {\n                self.controls.nextbutton.prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n            self.controls.listen_cont.show();\n            self.controls.question.show();\n            self.controls.game.show();\n            self.controls.start_btn.hide();\n            self.controls.mainmenu.hide();\n            self.controls.controlsbox.show();\n\n            self.nextPrompt();\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n            self.pointerdiv = self.controls.question.find(`.wordshuffle_wordset_container[data-index=\"${self.game.pointer}\"]`);\n            self.controls.retry_btn.hide();\n            self.controls.check_btn.show();\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            self.updateProgressDots();\n\n            self.showNextWordSet();\n\n            // We autoplay the audio on item entry, if its not a mobile user.\n            // If we do not have a start page and its the first item, we play on the item show event\n            if (self.items[self.game.pointer].audio !==null && !self.quizhelper.mobile_user()){\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        setTimeout(function() {\n                            self.controls.listen_btn.trigger('click');\n                        }, 1000);\n                    });\n                }else{\n                    setTimeout(function() {\n                        self.controls.listen_btn.trigger('click');\n                    }, 1000);\n                }\n            }\n        },\n\n        updateProgressDots: function() {\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n              color = \"gray\";\n              if (self.items[idx].answered && self.items[idx].correct) {\n                color = \"green\";\n              } else if (self.items[idx].answered && !self.items[idx].correct) {\n                color = \"red\";\n              }\n              return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            self.controls.title.html(progress);\n        },\n\n        showNextWordSet: function() {\n            var self = this;\n\n\n            // Hide previous wordset\n            self.controls.container.find('.wordshuffle_wordset_container').hide();\n            // Show new one\n            var newwordset = self.controls.container.find('.wordshuffle_wordset_' + self.game.pointer);\n            anim.do_animate(newwordset, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            self.startTimer();\n            self.makeDragZones();\n        },\n\n        getSlotWords: function() {\n            var self = this;\n            return self.pointerdiv.find(\".drop-slot\").map(function () {\n                const w = $(this).find(\".word\").first().text().trim();\n                return w || \"\";\n            }).get();\n        },\n\n        allFilled: function() {\n            var self = this;\n            return self.getSlotWords().every(Boolean);\n        },\n\n        clearPerSlotFeedback: function() {\n            var self = this;\n            self.pointerdiv.find(\".drop-slot\").removeClass(\"border-success border-danger\")\n                .addClass(\"border-secondary-subtle\");\n            self.pointerdiv.find(\"[id^='fb-']\").each(function () {\n                $(this).removeClass(\"text-success text-danger\").addClass(\"text-muted\").html(\"&nbsp;\");\n            });\n        },\n\n        setPerSlotFeedback: function() {\n            var self = this;\n            const words = self.getSlotWords();\n            const expectedAnswers = self.expectedAnswers();\n            const fullExpected = [...self.fixedWords(), ...expectedAnswers];\n            words.forEach((w, i) => {\n                const ok = w === expectedAnswers[i];\n                const $slot = self.pointerdiv.find(\".drop-slot[data-index='\" + i + \"']\");\n                const $fb = self.pointerdiv.find(\"#fb-\" + i);\n\n                $slot.removeClass(\"border-secondary-subtle border-success border-danger\")\n                    .addClass(ok ? \"border-success\" : \"border-danger\");\n\n                $fb.removeClass(\"text-muted text-success text-danger\")\n                .addClass(ok ? \"text-success\" : \"text-danger\")\n                .text(ok ? \"Correct\" : \"Wrong\");\n            });\n            const attempt = [...self.fixedWords(), ...self.getSlotWords()];\n            self.items[self.game.pointer].answered = words.some(Boolean);\n            self.items[self.game.pointer].correct = attempt.join(\" \") === fullExpected.join(\" \");\n        },\n\n        evaluateIfComplete: function() {\n            var self = this;\n            if (self.allFilled()) {\n                self.controls.check_btn.hide();\n                self.controls.skip_btn.prop(\"disabled\", true);\n                self.controls.retry_btn.prop(\"disabled\", true);\n                self.setPerSlotFeedback();\n                self.check_answer();\n                self.items[self.game.pointer].answered = true;\n            } else {\n                self.controls.check_btn.show();\n                self.clearPerSlotFeedback();\n            }\n        },\n\n        moveToSlot: function($word, $slot) {\n            var self = this;\n            $word.detach()\n                .css({ top: 0, left: 0, position: \"relative\" })\n                .appendTo($slot);\n            self.evaluateIfComplete();\n        },\n\n        placeInBank: function($word) {\n            var self = this;\n            $word.detach()\n                .css({ top: 0, left: 0, position: \"relative\" })\n                .appendTo(self.pointerdiv.find(\".word-bank\"));\n            self.evaluateIfComplete();\n        },\n\n        gapWords: function() {\n            var self = this;\n            return self.itemdata.sentences[self.game.pointer].gapwords;\n        },\n\n        fixedWords: function() {\n            var self = this;\n            return self.gapWords().filter(w => w.isgap === false).map(w => w.word);\n        },\n\n        expectedAnswers: function() {\n            var self = this;\n            return self.gapWords().filter(w => w.isgap === true).map(w => w.word);\n        },\n\n        selectedWord: null,\n\n        makeDragZones: function() {\n            var self = this;\n\n            if (!self.pointerdiv.attr('data-initialized')) {\n                // Click event\n                self.pointerdiv.on('click', e => {\n                    const $target = $(e.target);\n                    if ($target.is('.word')) {\n                        if (!self.selectedWord || !self.selectedWord.is($target)) {\n                            self.selectedWord = $target;\n                        } else {\n                            self.selectedWord = null;\n                        }\n                    } else if ($target.is('.word-bank')) {\n                        if (self.selectedWord) {\n                            if (self.selectedWord.parent('.drop-slot')) {\n                                self.placeInBank(self.selectedWord);\n                            }\n                            self.selectedWord = null;\n                        }\n                    } else if ($target.is('.drop-slot')) {\n                        if (self.selectedWord) {\n                            self.moveToSlot(self.selectedWord, $target);\n                            self.selectedWord = null;\n                        }\n                    }\n                    self.highlightDropZones();\n                });\n\n                // Spacebar keydown event\n                self.pointerdiv.on('keydown', function(e) {\n                    if (e.key === ' ' || e.key === 'Spacebar') {\n                        const $focused = $(document.activeElement);\n                        if ($focused.is('.word')) {\n                            if (!self.selectedWord || !self.selectedWord.is($focused)) {\n                                self.selectedWord = $focused;\n                            } else {\n                                self.selectedWord = null;\n                            }\n                        } else if ($focused.is('.word-bank')) {\n                            if (self.selectedWord) {\n                                if (self.selectedWord.parent('.drop-slot')) {\n                                    self.placeInBank(self.selectedWord);\n                                }\n                                self.selectedWord = null;\n                            }\n                        } else if ($focused.is('.drop-slot')) {\n                            if (self.selectedWord) {\n                                self.moveToSlot(self.selectedWord, $focused);\n                                self.selectedWord = null;\n                            }\n                        }\n                        self.highlightDropZones();\n                        e.preventDefault();\n                    }\n                });\n\n                self.pointerdiv.attr('data-initialized', 1);\n            }\n        },\n\n        highlightDropZones: function() {\n            var self = this;\n\n            // Remove highlights and tabindex from drop slots, word bank, and words\n            var dropZones = self.pointerdiv.find('.drop-slot')\n                .removeClass('ml_ws_highlight')\n                .removeAttr('tabindex');\n            self.pointerdiv.find('.word').removeClass('ml_ws_highlight');\n            self.pointerdiv.find('.word-bank')\n                .removeClass('ml_ws_highlight')\n                .removeAttr('tabindex');\n\n            if (self.selectedWord) {\n                // If the selected word is not in the word bank,\n                // It has been selected from a drop slot.\n                // Highlight the word bank and set tabindex to 0.\n                if (!self.selectedWord.parent('.word-bank').length) {\n                    self.pointerdiv.find('.word-bank')\n                        .addClass('ml_ws_highlight')\n                        .attr('tabindex', 0);\n                }\n\n                // Highlight the drop zones that do not contain a word\n                dropZones.filter(function(_, slot) {\n                    // If the slot does not contain a .word element\n                    if (!slot.querySelector('.word')) {\n                        // Add highlight and set tabindex to 0\n                        $(slot).addClass('ml_ws_highlight');\n                        $(slot).attr('tabindex', 0);\n                        return true;\n                    }\n                    return false;\n                });\n\n                // Highlight the selected word\n                self.selectedWord.addClass('ml_ws_highlight');\n            }\n        },\n\n         startTimer: function(){\n            var self = this;\n            // If we have a time limit, set up the timer, otherwise return\n            if (self.itemdata.timelimit > 0) {\n               // This is a function to start the timer (we call it conditionally below)\n                var doStartTimer = function() {\n                     // This shows progress bar\n                    self.controls.progress_container.show();\n                    self.controls.progress_container.find('i').show();\n                    var progresbar = self.controls.progress_container.find('#progresstimer').progressTimer({\n                        height: '5px',\n                        timeLimit: self.itemdata.timelimit,\n                        onFinish: function() {\n                            self.controls.skip_btn.trigger('click');\n                        }\n                    });\n                    progresbar.each(function() {\n                        self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                    });\n                }\n\n                // This adds the timer and starts it. But if we dont have a start page and its the first item\n                // we need to defer the timer start until the item is shown\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        doStartTimer();\n                    });\n                }else{\n                    doStartTimer();\n                }\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        // Stop audio .. usually when leaving the item or sentence\n        stop_audio: function(){\n            var self =this;\n            //pause audio if its playing\n            var theaudio = self.items[self.game.pointer].audio;\n            if(theaudio && !theaudio.paused) {\n                theaudio.pause();\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","anim","progresstimer","templates","notification","str","debug","strings","clone","extend","this","usevoice","pointerdiv","init","index","itemdata","quizhelper","hidestartpage","animopts","useanimatecss","init_strings","init_controls","register_events","setvoice","getItems","start","container","uniqueid","controls","listen_cont","find","nextbutton","start_btn","skip_btn","ctrl_btn","check_btn","game","controlsbox","resultscontainer","mainmenu","title","progress_container","progress_bar","question","listen_btn","retry_btn","self","get_strings","done","s","i","nextlessonitem","confirm_desc","yes","no","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","stop_audio","do_next","show_item_review","review_data","listencont","qbox","gamebox","resultsbox","render","then","html","js","show","hide","runTemplateJS","on","some","item","answered","confirm","audioplayerbtn","theaudio","pointer","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","wordshuffle_targetWord","wordshuffle_targetWords","val","stopTimer","timer","setTimeout","nextPrompt","end","placeInBank","clearPerSlotFeedback","check_answer","allowretry","gotComparison","voiceoption","text_items","sentences","map","target","sentenceclean","audiourl","imageurl","audiocontent","Audio","src","appReady","comparison","timelimit_progressbar","hasClass","updateProgressDots","showitemreview","forEach","spoken","showNextWordSet","mobile_user","trigger","color","progress","idx","join","newwordset","do_animate","startTimer","makeDragZones","getSlotWords","first","trim","get","allFilled","every","Boolean","setPerSlotFeedback","words","expectedAnswers","fullExpected","fixedWords","w","ok","$slot","$fb","attempt","evaluateIfComplete","moveToSlot","$word","detach","css","top","left","position","appendTo","gapWords","gapwords","isgap","word","selectedWord","attr","$target","is","parent","highlightDropZones","key","$focused","document","activeElement","preventDefault","dropZones","removeAttr","_","slot","querySelector","timelimit","doStartTimer","progressTimer","height","timeLimit","onFinish","push","timers","clearInterval"],"mappings":"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"}