{"version":3,"file":"speechcards.min.js","sources":["../src/speechcards.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n], function($,  log, Ajax, def, polly, ttrecorder, anim) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the quiz stage\n   */\n\n  log.debug('MiniLesson Speechcards: initialising');\n\n  return {\n\n    //for making multiple instances\n    clone: function () {\n        return $.extend(true, {}, this);\n    },\n\n    init: function(index, itemdata, quizhelper) {\n\n      this.init_app(index, itemdata, quizhelper);\n    },\n\n    init_app: function(index, itemdata, quizhelper) {\n\n      console.log(itemdata);\n\n      var app = {\n        passmark: 90,\n        pointer: 1,\n        jsondata: null,\n        props: null,\n        dryRun: false,\n        language: 'en-US',\n        terms: [],\n        phonetics: [],\n        displayterms: [],\n        results: [],\n        controls: {},\n        ttrec: null, //a handle on the tt recorder\n\n        init: function() {\n\n          //init terms\n          for (var i = 0; i < itemdata.sentences.length; i++) {\n            app.terms[i] = itemdata.sentences[i].sentence;\n            app.phonetics[i] = itemdata.sentences[i].phonetic;\n            app.displayterms[i] = itemdata.sentences[i].prompt;\n          }\n          app.language = itemdata.language;\n\n         //anim\n          var animopts = {};\n          animopts.useanimatecss=quizhelper.useanimatecss;\n          anim.init(animopts);\n\n          this.init_controls();\n          this.initComponents();\n          this.register_events();\n        },\n\n        init_controls: function() {\n          app.controls = {};\n          app.controls.star_rating = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_star_rating\");\n          app.controls.next_button = $(\"#\" + itemdata.uniqueid + \"_container .minilesson-speechcards_nextbutton\");\n          app.controls.slider = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_speechcards_target_phrase\");\n        },\n        next_question: function() {\n          var stepdata = {};\n          stepdata.index = index;\n          stepdata.hasgrade = true;\n          stepdata.totalitems = app.terms.length;\n          stepdata.correctitems = app.results.filter(function(e){return e.points>0;}).length;\n          stepdata.grade = Math.round((stepdata.correctitems/stepdata.totalitems)*100);\n          quizhelper.do_next(stepdata);\n        },\n        register_events: function() {\n\n          $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n            app.next_question();\n          });\n\n          app.controls.next_button.click(function() {\n            //user has given up ,update word as failed\n            app.check(false);\n\n            //transition if required\n            if (app.is_end()) {\n              setTimeout(function() {\n                app.do_end();\n              }, 200);\n            } else {\n              setTimeout(function() {\n                app.do_next();\n              }, 200);\n            }\n\n          });\n        },\n\n        initComponents: function() {\n\n              var theCallback = function(message) {\n\n                switch (message.type) {\n                  case 'recording':\n\n                    break;\n\n                  case 'speech':\n                    log.debug(\"speech at speechcards\");\n                    var speechtext = message.capturedspeech;\n                    var spoken_clean  = quizhelper.cleanText(speechtext);\n                    var correct_clean = quizhelper.cleanText(app.terms[app.pointer - 1]);\n                    var correctphonetic = app.phonetics[app.pointer - 1];\n        log.debug('speechtext:',speechtext);\n        log.debug('spoken:',spoken_clean);\n        log.debug('correct:',correct_clean);\n                    //Similarity check by character matching\n                    var similarity_js = quizhelper.similarity(spoken_clean, correct_clean);\n                    log.debug('JS similarity: ' + spoken_clean + ':' + correct_clean + ':' + similarity_js);\n\n                    //Similarity check by direct-match/acceptable-mistranscription\n                    if (similarity_js >= app.passmark ||\n                      app.wordsDoMatch(spoken_clean, correct_clean)) {\n                      log.debug('local match:' + ':' + spoken_clean + ':' + correct_clean);\n                      app.showStarRating(100);\n                      app.flagCorrectAndTransition();\n                      return;\n                    }\n\n                    //Similarity check by phonetics(ajax)\n                    quizhelper.checkByPhonetic(correct_clean, spoken_clean, correctphonetic, app.language).then(function(similarity_php) {\n                      if (similarity_php === false) {\n                        return $.Deferred().reject();\n                      } else {\n                        log.debug('PHP similarity: ' + spoken_clean + ':' + correct_clean + ':' + similarity_php);\n\n                        if (similarity_php >= app.passmark) {\n                            app.showStarRating(similarity_php);\n                            app.flagCorrectAndTransition();\n                        }else{\n                            //show the greater of the ratings\n                            app.showStarRating(Math.max(similarity_js,similarity_php));\n                        }\n                      } //end of if check_by_phonetic result\n                    }); //end of check by phonetic\n\n                } //end of switch message type\n              };\n\n              //init tt recorder\n              var opts = {};\n              opts.uniqueid = itemdata.uniqueid;\n              opts.callback = theCallback;\n              opts.stt_guided=quizhelper.is_stt_guided();\n              app.ttrec = ttrecorder.clone();\n              app.ttrec.init(opts);\n              //init prompt for first card\n              //in some cases ttrecorder wants to know the target\n              app.ttrec.currentPrompt=app.displayterms[app.pointer - 1];\n\n              //init progress dots\n              app.progress_dots(app.results, app.terms);\n\n              app.initSlider();\n\n\n        },\n\n        initSlider: function() {\n          app.controls.slider.text(app.displayterms[app.pointer - 1]);\n          app.controls.slider.show();\n        },\n\n        writeCurrentTerm: function() {\n            /*\n            app.controls.slider.toggle(\"slide\",{direction:\"left\"});\n            app.controls.slider.text(app.displayterms[app.pointer - 1]);\n            app.controls.slider.toggle(\"slide\",{direction:\"right\"})\n             */\n            anim.do_animate(app.controls.slider,'zoomOut animate__faster','out').then(\n                function(){\n                    app.controls.slider.text(app.displayterms[app.pointer - 1]);\n                    anim.do_animate(app.controls.slider,'zoomIn animate__faster','in');\n                }\n            );\n        },\n\n        flagCorrectAndTransition: function() {\n\n          //update students word log if matched\n          app.check(true);\n\n          //transition if required\n          if (app.is_end()) {\n            setTimeout(function() {\n              app.do_end();\n            }, 700);\n          } else {\n            setTimeout(function() {\n              app.do_next();\n            }, 700);\n          }\n\n        },\n\n        wordsDoMatch: function(phraseheard, currentphrase) {\n          //lets lower case everything\n          phraseheard = quizhelper.cleanText(phraseheard);\n          currentphrase = quizhelper.cleanText(currentphrase);\n          if (phraseheard == currentphrase) {\n            return true;\n          }\n          return false;\n        },\n\n\n        showStarRating: function(similarity) {\n          //how many stars code\n          var stars = [true, true, true];\n          if (similarity < app.passmark) {\n            stars = [true, true, false];\n          }\n          if (similarity < .75) {\n            stars = [true, false, false];\n          }\n          if (similarity < 0.5) {\n            stars = [false, false, false];\n          }\n\n          //prepare stars html\n          var code = \"\";\n          stars.forEach(function(star) {\n            if (star === true) {\n              code += '<i class=\"fa fa-star\"></i>';\n            } else {\n              code += '<i class=\"fa fa-star-o\"></i>';\n            }\n          });\n\n          app.controls.star_rating.html(code);\n        },\n\n        check: function(correct) {\n          var points = 1;\n          if (correct == true) {\n            points = 1;\n          } else {\n            points = 0;\n          }\n          var result = {\n            points: points\n          };\n          app.results.push(result);\n        },\n\n        do_next: function() {\n          app.pointer++;\n          app.progress_dots(app.results, app.terms);\n          app.clearStarRating();\n          if (!app.is_end()) {\n            app.writeCurrentTerm();\n            //in some cases ttrecorder wants to know the target\n            if(quizhelper.use_ttrecorder()) {\n                app.ttrec.currentPrompt=app.displayterms[app.pointer - 1];\n            }\n\n          } else {\n            app.do_end();\n          }\n        },\n\n        clearStarRating: function() {\n          app.controls.star_rating.html('· · ·');\n        },\n\n        do_end: function() {\n          app.next_question();\n        },\n\n        is_end: function() {\n          //pointer is 1 based but array is, of course, 0 based\n          if (app.pointer <= app.terms.length) {\n            return false;\n          } else {\n            return true;\n          }\n        },\n\n        progress_dots: function(results, terms) {\n\n          var code = \"\";\n          var color = \"\";\n          terms.forEach(function(o, i) {\n            color = \"darkgray\";\n            if (results[i] !== undefined) {\n              if (results[i].points) {\n                color = \"green\";\n              } else {\n                color = \"red\";\n              }\n            }\n            code += '<i style=\"color:' + color + ';\" class=\"fa fa-circle\"></i>';\n          });\n\n          $(\"#\" + itemdata.uniqueid + \"_container .minilesson_progress_dots\").html(code);\n\n        },\n      }; //end of app definition\n      app.init();\n\n    } //end of init_App\n\n\n  }; //end of return value\n});"],"names":["define","$","log","Ajax","def","polly","ttrecorder","anim","debug","clone","extend","this","init","index","itemdata","quizhelper","init_app","console","app","passmark","pointer","jsondata","props","dryRun","language","terms","phonetics","displayterms","results","controls","ttrec","i","sentences","length","sentence","phonetic","prompt","animopts","useanimatecss","init_controls","initComponents","register_events","star_rating","uniqueid","next_button","slider","next_question","stepdata","hasgrade","totalitems","correctitems","filter","e","points","grade","Math","round","do_next","on","click","check","is_end","setTimeout","do_end","opts","callback","message","type","speechtext","capturedspeech","spoken_clean","cleanText","correct_clean","correctphonetic","similarity_js","similarity","wordsDoMatch","showStarRating","flagCorrectAndTransition","checkByPhonetic","then","similarity_php","Deferred","reject","max","stt_guided","is_stt_guided","currentPrompt","progress_dots","initSlider","text","show","writeCurrentTerm","do_animate","phraseheard","currentphrase","stars","code","forEach","star","html","correct","result","push","clearStarRating","use_ttrecorder","color","o","undefined"],"mappings":"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"}