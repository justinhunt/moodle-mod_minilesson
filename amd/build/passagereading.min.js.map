{"version":3,"file":"passagereading.min.js","sources":["../src/passagereading.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions','mod_minilesson/cloudpoodllloader',\n    'mod_minilesson/ttrecorder','core/notification','core/str'],\n    function($, log, def,cloudpoodll, ttrecorder, notification, str) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the Passage Reading item type\n   */\n\n  log.debug('MiniLesson Passage Reading: initialising');\n\n  var app= {\n\n    allwords: {},\n    totalcorrect: 0,\n    strings: {},\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.index = index;\n      this.itemdata = itemdata;\n      this.quizhelper = quizhelper;\n      this.init_strings();\n      this.init_components(quizhelper,itemdata);\n      this.register_events(index, itemdata, quizhelper);\n\n    },\n\n    init_strings: function(){\n      var self = this; \n      str.get_strings([\n          { \"key\": \"reattempt\", \"component\": 'mod_minilesson'},\n          { \"key\": \"reallyreattempt\", \"component\": 'mod_minilesson'},\n      ]).done(function (s) {\n          var i = 0;\n          self.strings.reattempt = s[i++];\n          self.strings.reallyreattempt = s[i++];\n      });\n  }, \n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = self.allwords.length;\n      stepdata.correctitems = self.totalcorrect;\n      var percent = 0;\n      if(self.allwords.length> 0) {\n        percent = Math.round((self.totalcorrect /self.allwords.length) * 100 );\n      }\n      stepdata.grade = percent;\n      this.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      var self = this;\n      \n      self.nextbutton.on('click', function(e) {\n        e.preventDefault();\n        self.next_question();\n      });\n\n      self.reattemptbutton.on('click', function(e) {\n        e.preventDefault();\n        notification.confirm(self.strings.reattempt, \n                            self.strings.reallyreattempt,\n                            self.strings.reattempt,'',\n                            function(){\n                                self.reattemptcontainer.hide();\n                                self.recordercontainer.show();\n                                 //Reset all words css\n                                self.allwords.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n                                self.allspaces.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n                            });\n      });\n\n    },\n\n    init_components: function(quizhelper,itemdata){\n          var self=this;\n          self.allwords = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_word\");\n          self.allspaces = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_space\");\n          self.recordercontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .ml_passagereading_speakbtncontainer\");\n          self.reattemptcontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .ml_passagereading_reattemptcontainer\");\n          self.reattemptbutton =  self.reattemptcontainer.find(\".ml_reattemptbutton\");\n          self.nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n\n          var theCallback = function(message) {\n\n            switch (message.type) {\n              case 'recording':\n\n                break;\n\n              case 'speech':\n                log.debug(\"speech at speechcards\");\n                var speechtext = message.capturedspeech;\n                var spoken_clean  = quizhelper.cleanText(speechtext);\n                var phonetic = ''; // TO DO - add phonetic option\n                log.debug('speechtext:',speechtext);\n                log.debug('spoken:',spoken_clean);\n                self.getComparison(\n                  self.itemdata.passagetext,\n                  spoken_clean,\n                  phonetic,\n                  function(comparison) {\n                      self.gotComparison(comparison, message);\n                  }\n              );\n               \n    \n            } //end of switch message type\n          };\n\n\n\n        if(quizhelper.use_ttrecorder()) {\n            //init tt recorder\n            var opts = {};\n            opts.uniqueid = itemdata.uniqueid;\n            opts.callback = theCallback;\n            opts.stt_guided=quizhelper.is_stt_guided();\n            self.ttrec = ttrecorder.clone();\n            self.ttrec.init(opts);\n            //init prompt for first card\n            //in some cases ttrecorder wants to know the target\n            //app.ttrec.currentPrompt=app.displayterms[app.pointer - 1];\n\n        }else{\n            //init cloudpoodll push recorder\n            cloudpoodll.init('minilesson-recorder-passagereading-' + itemdata.id, theCallback);\n        }\n\n\n    }, //end of init components\n\n    getComparison: function(passage, transcript, phonetic, callback) {\n      var self = this;\n      \n      //TO DO disable the TT Recorder button\n      $(\"#\" + self.thebutton ).prop(\"disabled\", true);\n\n      self.quizhelper.comparePassageToTranscript(passage,transcript,phonetic,self.itemdata.language).then(function(ajaxresult) {\n            var payloadobject = JSON.parse(ajaxresult);\n            if (payloadobject) {\n                callback(payloadobject);\n            } else {\n                callback(false);\n            }\n       });\n\n    },\n\n    gotComparison: function(comparison, typed) {\n      var self = this;\n      log.debug(\"gotComparison\");\n\n      //Reset all words css\n      self.allwords.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n      self.allspaces.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n\n      //how many correct\n      var allCorrect = comparison.filter(function(e){return !e.matched;}).length==0;\n      \n      //mark up the words as correct or not\n      if (allCorrect && comparison && comparison.length > 0) {\n\n        log.debug(\"gotComparison: all correct\");\n        self.allwords.addClass(\"pr_correct\");\n        self.allspaces.addClass(\"pr_correct\");\n\n      } else {\n        log.debug(\"gotComparison: not all correct\");\n        var lastmatched = 0;\n        comparison.forEach(function(obj) {\n          var theword = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_word[data-wordnumber='\" + obj.wordnumber + \"']\");\n          var thespace = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_space[data-wordnumber='\" + obj.wordnumber + \"']\");\n          if(!obj.matched){\n            theword.addClass(\"pr_incorrect\");\n            thespace.addClass(\"pr_incorrect\");\n          } else {\n            theword.addClass(\"pr_correct\");\n            thespace.addClass(\"pr_correct\");\n            if(lastmatched < obj.wordnumber){\n              lastmatched = obj.wordnumber;\n            }\n          }\n        });\n\n        //2nd pass now we know what each word is\n        comparison.forEach(function(obj) {\n          var theword = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_word[data-wordnumber='\" + obj.wordnumber + \"']\");\n          var thespace = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_space[data-wordnumber='\" + obj.wordnumber + \"']\");\n          var nextword = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_word[data-wordnumber='\" + (obj.wordnumber + 1) + \"']\");\n          //mark incorrect as unreached if after last match\n          if(lastmatched < obj.wordnumber && theword.hasClass('pr_incorrect')){\n            theword.addClass(\"pr_unreached\");\n            thespace.addClass(\"pr_unreached\");\n            theword.removeClass(\"pr_incorrect\");\n            thespace.removeClass(\"pr_incorrect\");\n          }\n          //clear formatting on spaces in between correct/incorrect and incorrect/correct words\n          if(nextword.length>0){\n            if(theword.hasClass('pr_incorrect') && nextword.hasClass('pr_correct')){\n              thespace.removeClass('pr_incorrect');\n            }else if(theword.hasClass('pr_correct') && nextword.hasClass('pr_incorrect')){\n              thespace.removeClass('pr_correct');\n            }\n          }\n        });\n      }\n\n      //update our scores\n      var correctwords = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_word.pr_correct\");\n      self.totalcorrect = correctwords.length;\n      log.debug((\"totalcorrect\", self.totalcorrect));\n      log.debug((\"allwords\", self.allwords.length));\n\n       //Hide the recorder and show the reattempt button\n       self.recordercontainer.hide();\n       self.reattemptcontainer.show();\n\n       //To auto transition you could do this\n       var moveon = false;\n       if (moveon) {\n          setTimeout(function() {\n            self.end();\n          }, 2200);\n        }\n    },\n\n  };//end of return objects\n  return app;\n});"],"names":["define","$","log","def","cloudpoodll","ttrecorder","notification","str","debug","allwords","totalcorrect","strings","clone","extend","this","init","index","itemdata","quizhelper","init_strings","init_components","register_events","self","get_strings","done","s","i","reattempt","reallyreattempt","next_question","stepdata","hasgrade","totalitems","length","correctitems","percent","Math","round","grade","do_next","nextbutton","on","e","preventDefault","reattemptbutton","confirm","reattemptcontainer","hide","recordercontainer","show","removeClass","allspaces","uniqueid","find","theCallback","message","type","speechtext","capturedspeech","spoken_clean","cleanText","getComparison","passagetext","comparison","gotComparison","use_ttrecorder","opts","callback","stt_guided","is_stt_guided","ttrec","id","passage","transcript","phonetic","thebutton","prop","comparePassageToTranscript","language","then","ajaxresult","payloadobject","JSON","parse","typed","filter","matched","addClass","lastmatched","forEach","obj","theword","wordnumber","thespace","nextword","hasClass","correctwords"],"mappings":"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"}