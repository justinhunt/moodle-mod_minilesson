{"version":3,"file":"passagereading.min.js","sources":["../src/passagereading.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions',\n    'mod_minilesson/ttrecorder','core/notification','core/str', 'core/templates'],\n    function($, log, def, ttrecorder, notification, str, templates) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the Passage Reading item type\n   */\n\n  log.debug('MiniLesson Passage Reading: initialising');\n\n  var app= {\n\n    allwords: {},\n    strings: {},\n    totals: {correct: 0,incorrect: 0,unreached: 0,read: 0,accuracy: 0,score: 0,comparison: {}},\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.index = index;\n      this.itemdata = itemdata;\n      this.quizhelper = quizhelper;\n      this.init_strings();\n      this.init_components(quizhelper,itemdata);\n      this.register_events(index, itemdata, quizhelper);\n\n    },\n\n    init_strings: function(){\n      var self = this; \n      str.get_strings([\n          { \"key\": \"reattempt\", \"component\": 'mod_minilesson'},\n          { \"key\": \"reallyreattempt\", \"component\": 'mod_minilesson'},\n      ]).done(function (s) {\n          var i = 0;\n          self.strings.reattempt = s[i++];\n          self.strings.reallyreattempt = s[i++];\n      });\n  }, \n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = 0;\n      stepdata.correctitems = 0;\n      var percent = 0;\n      if(self.allwords.length> 0) {\n        percent = Math.round((self.totals.correct /self.allwords.length) * 100 );\n        //If total marks is set, we use percent to calc correct items / total items\n        if(self.itemdata.totalmarks > 0){\n          stepdata.totalitems = self.itemdata.totalmarks;\n          stepdata.correctitems = Math.round((self.totals.correct /self.allwords.length) * self.itemdata.totalmarks);\n        }else{\n          stepdata.totalitems = self.allwords.length;\n          stepdata.correctitems = self.totals.correct;\n        }\n      }\n\n      stepdata.grade = percent;\n      stepdata.resultsdata = self.totals;\n      this.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      var self = this;\n      \n      self.nextbutton.on('click', function(e) {\n        e.preventDefault();\n        self.next_question();\n      });\n\n      self.reattemptbutton.on('click', function(e) {\n        e.preventDefault();\n        notification.confirm(self.strings.reattempt, \n                            self.strings.reallyreattempt,\n                            self.strings.reattempt,'',\n                            function(){\n                                self.resultscontainer.hide();\n                                self.reattemptcontainer.hide();\n                                self.recordercontainer.show();\n                                 //Reset all words css\n                                self.allwords.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n                                self.allspaces.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n                            });\n      });\n\n\n\n      $(\"#\" + itemdata.uniqueid + \"_container\").on('showElement', () => {\n        if (itemdata.timelimit > 0) {\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container\").show();\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container i\").show();\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                height: '5px',\n                timeLimit: itemdata.timelimit,\n                onFinish: function() {\n                    self.nextbutton.trigger('click');\n                }\n            });\n        }\n      });\n\n    },\n\n    init_components: function(quizhelper,itemdata){\n          var self=this;\n          self.allwords = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_word\");\n          self.allspaces = $(\"#\" + self.itemdata.uniqueid + \"_container .mod_minilesson_mu_passage_space\");\n          self.recordercontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .ml_passagereading_speakbtncontainer\");\n          self.reattemptcontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .ml_passagereading_reattemptcontainer\");\n          self.resultscontainer = $(\"#\" + self.itemdata.uniqueid + \"_container .ml_passagereading_resultscontainer\");\n          self.reattemptbutton =  self.reattemptcontainer.find(\".ml_reattemptbutton\");\n          self.nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n\n          var theCallback = function(message) {\n\n            switch (message.type) {\n              case 'recording':\n\n                break;\n\n              case 'speech':\n                var speechtext = message.capturedspeech;\n                var spoken_clean  = quizhelper.cleanText(speechtext);\n                var phonetic = ''; // TO DO - add phonetic option\n                log.debug('speechtext:',speechtext);\n                log.debug('spoken:',spoken_clean);\n                self.getComparison(\n                  self.itemdata.passagetext,\n                  spoken_clean,\n                  phonetic,\n                  function(comparison) {\n                      self.gotComparison(comparison, message);\n                  }\n              );\n            } //end of switch message type\n          };\n\n          //init tt recorder\n          var opts = {};\n          opts.uniqueid = itemdata.uniqueid;\n          opts.callback = theCallback;\n          opts.stt_guided=quizhelper.is_stt_guided();\n          self.ttrec = ttrecorder.clone();\n          self.ttrec.init(opts);\n          //init prompt for first card\n          //in some cases ttrecorder wants to know the target\n          //app.ttrec.currentPrompt=app.displayterms[app.pointer - 1];\n\n    }, //end of init components\n\n    getComparison: function(passage, transcript, phonetic, callback) {\n      var self = this;\n      \n      //TO DO disable the TT Recorder button\n      $(\"#\" + self.thebutton ).prop(\"disabled\", true);\n\n      self.quizhelper.comparePassageToTranscript(passage,transcript,phonetic,self.itemdata.language, self.itemdata.alternates).then(function(ajaxresult) {\n            var payloadobject = JSON.parse(ajaxresult);\n            if (payloadobject) {\n                callback(payloadobject);\n            } else {\n                callback(false);\n            }\n       });\n\n    },\n\n    gotComparison: function(comparison, typed) {\n      var self = this;\n      log.debug(\"gotComparison\");\n      var containerid = self.itemdata.uniqueid + \"_container\";\n      self.doComparisonMarkup(comparison, containerid);\n\n      //update our scores\n      var correctwords = $(\"#\" + containerid + \" .mod_minilesson_mu_passage_word.pr_correct\");\n      var incorrectwords = $(\"#\" + containerid + \" .mod_minilesson_mu_passage_word.pr_incorrect\");\n      var unreachedwords = $(\"#\" + containerid + \" .mod_minilesson_mu_passage_word.pr_unreached\");\n      self.totals.correct = correctwords.length;\n      self.totals.incorrect = incorrectwords.length;\n      self.totals.unreached = unreachedwords.length;\n      self.totals.read = incorrectwords.length + correctwords.length;\n      self.totals.accuracy = Math.round((self.totals.correct / self.totals.read) * 100);\n      self.totals.score = Math.round((self.totals.correct /self.allwords.length) * 100);\n      self.totals.comparison = comparison;\n      log.debug((\"total correct\", self.totals.correct));\n      log.debug((\"allwords\", self.allwords.length));\n\n      //display results or move next if not show item review\n      if(!self.quizhelper.showitemreview){\n        //clear markup .. though it was briefly shown (so we could calculate the score)\n        self.allwords.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n        self.allspaces.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n        self.next_question();\n      }else{\n        //display results\n       //Hide the recorder and show the reattempt button and results\n        templates.render('mod_minilesson/passagereadingresults',self.totals).then(\n          function(html,js){\n              self.recordercontainer.hide();\n              self.resultscontainer.html(html);\n              self.resultscontainer.show();\n              self.reattemptcontainer.show();\n          }\n        );\n      }//end of show item review or transition\n    },\n\n  doComparisonMarkup: function(comparison, containerid){\n      var allwords = $(\"#\" + containerid + \" .mod_minilesson_mu_passage_word\");\n      var allspaces = $(\"#\" + + containerid + \"  .mod_minilesson_mu_passage_space\");\n\n      //Reset all words css\n      allwords.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n      allspaces.removeClass(\"pr_correct pr_incorrect pr_unreached\");\n\n      //how many correct\n      var allCorrect = comparison.filter(function(e){return !e.matched;}).length==0;\n\n      //mark up the words as correct or not\n      if (allCorrect && comparison && comparison.length > 0) {\n\n          log.debug(\"gotComparison: all correct\");\n          allwords.addClass(\"pr_correct\");\n          allspaces.addClass(\"pr_correct\");\n\n      } else {\n          log.debug(\"gotComparison: not all correct\");\n          var lastmatched = 0;\n          comparison.forEach(function(obj) {\n              var theword = $(\"#\" + containerid + \"  .mod_minilesson_mu_passage_word[data-wordnumber='\" + obj.wordnumber + \"']\");\n              var thespace = $(\"#\" + containerid + \"  .mod_minilesson_mu_passage_space[data-wordnumber='\" + obj.wordnumber + \"']\");\n\n              if(!obj.matched){\n                  theword.addClass(\"pr_incorrect\");\n                  thespace.addClass(\"pr_incorrect\");\n              } else {\n                  theword.addClass(\"pr_correct\");\n                  thespace.addClass(\"pr_correct\");\n                  if(lastmatched < obj.wordnumber){\n                      lastmatched = obj.wordnumber;\n                  }\n              }\n          });\n\n          //2nd pass now we know what each word is\n          comparison.forEach(function(obj) {\n              var theword = $(\"#\" + containerid + \"  .mod_minilesson_mu_passage_word[data-wordnumber='\" + obj.wordnumber + \"']\");\n              var thespace = $(\"#\" + containerid + \"  .mod_minilesson_mu_passage_space[data-wordnumber='\" + obj.wordnumber + \"']\");\n              var nextword = $(\"#\" + containerid + \"  .mod_minilesson_mu_passage_word[data-wordnumber='\" + (obj.wordnumber + 1) + \"']\");\n              //mark incorrect as unreached if after last match\n              if(lastmatched < obj.wordnumber && theword.hasClass('pr_incorrect')){\n                  theword.addClass(\"pr_unreached\");\n                  thespace.addClass(\"pr_unreached\");\n                  theword.removeClass(\"pr_incorrect\");\n                  thespace.removeClass(\"pr_incorrect\");\n              }\n              //clear formatting on spaces in between correct/incorrect and incorrect/correct words\n              if(nextword.length>0){\n                  if(theword.hasClass('pr_incorrect') && nextword.hasClass('pr_correct')){\n                      thespace.removeClass('pr_incorrect');\n                  }else if(theword.hasClass('pr_correct') && nextword.hasClass('pr_incorrect')){\n                      thespace.removeClass('pr_correct');\n                  }\n              }\n          });\n      }\n\n  }\n\n  };//end of return objects\n  return app;\n});"],"names":["define","$","log","def","ttrecorder","notification","str","templates","debug","allwords","strings","totals","correct","incorrect","unreached","read","accuracy","score","comparison","clone","extend","this","init","index","itemdata","quizhelper","init_strings","init_components","register_events","self","get_strings","done","s","i","reattempt","reallyreattempt","next_question","stepdata","hasgrade","totalitems","correctitems","percent","length","Math","round","totalmarks","grade","resultsdata","do_next","nextbutton","on","e","preventDefault","reattemptbutton","confirm","resultscontainer","hide","reattemptcontainer","recordercontainer","show","removeClass","allspaces","uniqueid","timelimit","progressTimer","height","timeLimit","onFinish","trigger","find","opts","callback","message","type","speechtext","capturedspeech","spoken_clean","cleanText","getComparison","passagetext","gotComparison","stt_guided","is_stt_guided","ttrec","passage","transcript","phonetic","thebutton","prop","comparePassageToTranscript","language","alternates","then","ajaxresult","payloadobject","JSON","parse","typed","containerid","doComparisonMarkup","correctwords","incorrectwords","unreachedwords","showitemreview","render","html","js","filter","matched","addClass","lastmatched","forEach","obj","theword","wordnumber","thespace","nextword","hasClass"],"mappings":"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"}