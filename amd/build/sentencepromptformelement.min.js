define(["exports","core/log"],(function(_exports,_log){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.registerElement=void 0,_log=(obj=_log)&&obj.__esModule?obj:{default:obj};const regionSelector=regionname=>'[data-region="'.concat(regionname,'"]');_exports.registerElement=_ref=>{let{elementid:elementid}=_ref;const element=document.getElementById(elementid);if(element){_log.default.debug(element);const textarea=element.querySelector(regionSelector("textarea")),lineNumbersEle=element.querySelector(regionSelector("lines")),textareaStyles=getComputedStyle(textarea);["fontFamily","fontSize","fontWeight","letterSpacing","lineHeight","padding"].forEach((property=>{lineNumbersEle.style[property]=textareaStyles[property]}));const parseValue=v=>v.endsWith("px")?parseInt(v.slice(0,-2),10):0,font="".concat(textareaStyles.fontSize," ").concat(textareaStyles.fontFamily),paddingLeft=parseValue(textareaStyles.paddingLeft),paddingRight=parseValue(textareaStyles.paddingRight),context=document.createElement("canvas").getContext("2d");context.font=font;const calculateNumLines=str=>{const textareaWidth=textarea.getBoundingClientRect().width-paddingLeft-paddingRight,words=str.split(" ");let lineCount=0,currentLine="";for(let i=0;i<words.length;i++){const wordWidth=context.measureText(words[i]+" ").width;context.measureText(currentLine).width+wordWidth>textareaWidth?(lineCount++,currentLine=words[i]+" "):currentLine+=words[i]+" "}return""!==currentLine.trim()&&lineCount++,lineCount},calculateLineNumbers=()=>{const numLines=textarea.value.split("\n").map((line=>calculateNumLines(line)));let i=1;const lineNumbers=[];for(;numLines.length>0;){const numLinesOfSentence=numLines.shift();lineNumbers.push(i),numLinesOfSentence>1&&Array(numLinesOfSentence-1).fill("").forEach((()=>lineNumbers.push(""))),i++}return lineNumbers},displayLineNumbers=()=>{const lineNumbers=calculateLineNumbers();lineNumbersEle.innerHTML=Array.from({length:lineNumbers.length},((_,i)=>"<div>".concat(lineNumbers[i]||"&nbsp;","</div>"))).join("")};textarea.addEventListener("input",(()=>{displayLineNumbers()})),displayLineNumbers();new ResizeObserver((()=>{const rect=textarea.getBoundingClientRect();lineNumbersEle.style.height="".concat(rect.height,"px"),displayLineNumbers()})).observe(textarea),textarea.addEventListener("scroll",(()=>{lineNumbersEle.scrollTop=textarea.scrollTop}))}}}));

//# sourceMappingURL=sentencepromptformelement.min.js.map