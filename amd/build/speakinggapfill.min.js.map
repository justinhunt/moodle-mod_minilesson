{"version":3,"file":"speakinggapfill.min.js","sources":["../src/speakinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/cloudpoodllloader',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates'\n], function($, log, ajax, def, polly, cloudpoodll, ttrecorder, anim, progresstimer, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson speaking gap fill: initialising');\n\n    return {\n\n        //a handle on the tt recorder\n        ttrec: null,\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            var theCallback = function(message) {\n\n                switch (message.type) {\n                    case 'recording':\n                        break;\n\n                    case 'speech':\n                        log.debug(\"Speech at speaking gap fill -\");\n                        var words = self.items[self.game.pointer].words;\n                        var maskedwords = [];\n\n                        Object.keys(words).forEach(function(key) {\n                            maskedwords.push(words[key]);\n                        });\n\n                        self.getComparison(\n                            maskedwords.join(\" \"),\n                            message.capturedspeech,\n                            self.items[self.game.pointer].phonetic,\n                            function(comparison) {\n                                self.gotComparison(comparison, message);\n                            }\n                        );\n                        break;\n\n                }\n\n            };\n\n            if (quizhelper.use_ttrecorder()) {\n                var opts = {};\n                opts.uniqueid = itemdata.uniqueid;\n                opts.callback = theCallback;\n                opts.stt_guided = quizhelper.is_stt_guided();\n                opts.wwwroot = quizhelper.is_stt_guided();\n                self.ttrec = ttrecorder.clone();\n                self.ttrec.init(opts);\n            } else {\n                // Init cloudpoodll push recorder\n                cloudpoodll.init('minilesson-recorder-listenrepeat-' + itemdata.id, theCallback);\n            }\n\n            self.itemdata = itemdata;\n            log.debug(\"itemdata\");\n            log.debug(itemdata);\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        next_question: function(percent) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\");\n            var qbox = $(\"#\" + self.itemdata.uniqueid + \"_container .question\");\n            var recorderbox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\");\n            var gamebox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_game\");\n            var controlsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\");\n            var resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_resultscontainer\");\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n            // On next button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n            // On start button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER Button events\n            var audioplayerbtn=$(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\");\n            // On listen button click\n            if(self.itemdata.readsentence) {\n                audioplayerbtn.on(\"click\", function () {\n                    var theaudio = self.items[self.game.pointer].audio;\n\n                    //if we are already playing stop playing\n                    if(!theaudio.paused){\n                        theaudio.pause();\n                        theaudio.currentTime=0;\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                        return;\n                    }\n\n                    //change icon to indicate playing state\n                    theaudio.addEventListener('ended', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    });\n\n                    theaudio.addEventListener('play', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                        $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                    });\n                    theaudio.load();\n                    theaudio.play();\n                });\n            }\n\n            // On skip button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").on(\"click\", function() {\n                // Disable the buttons\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n                // Reveal the prompt\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speech.sgapfill_teacher_left\").text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal the answer\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                if (self.game.pointer < self.items.length - 1) {\n                    // Move on after short time to next prompt\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                    // End question\n                } else {\n                    self.end();\n                }\n\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        usevoice: '',\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    displayprompt: target.displayprompt,\n                    definition: target.definition,\n                    phonetic: target.phonetic,\n                    words: target.words,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            if(self.itemdata.readsentence) {\n                $.each(self.items, function (index, item) {\n                    polly.fetch_polly_url(item.prompt, self.voiceoption, self.usevoice).then(function (audiourl) {\n                        item.audio = new Audio();\n                        item.audio.src = audiourl;\n                        if (self.items.filter(function (e) {\n                            return e.audio === null;\n                        }).length === 0) {\n                            self.appReady();\n                        }\n                    });\n                });\n            }else{\n                self.appReady();\n            }\n\n\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_loaded\").show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison, typed) {\n            log.debug(\"sgapfill comparison\");\n            var self = this;\n            var countdownStarted = false;\n            var feedback = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").removeClass(\"sgapfill_correct sgapfill_incorrect\");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_feedback\").removeClass(\"fa fa-check fa-times\");\n\n            var allCorrect = comparison.filter(function(e) {\n                return !e.matched;\n            }).length == 0;\n            log.debug('allcorrect=' + allCorrect);\n\n            if (allCorrect && comparison && comparison.length > 0) {\n\n                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                    if (data.type === 'input') {\n                        characterinput.val(data.character);\n                    }\n                });\n\n                feedback.removeClass(\"fa fa-times\");\n                feedback.addClass(\"fa fa-check\");\n                //make the input boxes green and move forward\n                log.debug('applying correct class to input boxes');\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" input\").addClass(\"ml_gapfill_char_correct\");\n\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = typed;\n\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if ((self.game.pointer < self.items.length - 1) && !countdownStarted) {\n                    countdownStarted = true;\n                    log.debug('moving to next prompt B');\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.updateProgressDots();\n                    self.end();\n                }\n            } else {\n                feedback.removeClass(\"fa fa-check\");\n                feedback.addClass(\"fa fa-times\");\n                // Mark up the words as correct or not\n                comparison.forEach(function(obj) {\n                    var words = self.items[self.game.pointer].words;\n\n                    Object.keys(words).forEach(function(key) {\n                        if (words[key] == obj.word) {\n                            if (!obj.matched) {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val('');\n                                    }\n                                });\n                            } else {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val(data.character);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n\n                // Show all the correct words\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord.sgapfill_correct\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                //if they cant retry OR the time limit is up, move on\n                var timelimit_progressbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\");\n                if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')){\n                    self.items[self.game.pointer].answered = true;\n                    self.items[self.game.pointer].correct = false;\n                    self.items[self.game.pointer].typed = typed;\n\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                    self.stopTimer(self.items[self.game.pointer].timer);\n\n                    if(!countdownStarted) {\n                        if (self.game.pointer < self.items.length - 1) {\n                            log.debug('moving to next prompt A');\n                            countdownStarted = true;\n                            setTimeout(function () {\n                                $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                                self.game.pointer++;\n                                self.nextPrompt();\n                            }, 2000);\n                        } else {\n                            self.updateProgressDots();\n                            self.end();\n                        }\n                    }//end of if countdown not started\n                } //end of if can't retry or time limit up\n            }//end of if -all -correct or not\n        },\n\n        getComparison: function(passage, transcript, phonetic, callback) {\n            var self = this;\n\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            self.quizhelper.comparePassageToTranscript(passage, transcript, phonetic, self.itemdata.language, self.itemdata.alternates).then(function(ajaxresult) {\n                var payloadobject = JSON.parse(ajaxresult);\n                if (payloadobject) {\n                    callback(payloadobject);\n                } else {\n                    callback(false);\n                }\n            });\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\").show();\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            if(self.itemdata.readsentence) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\").show();\n            }\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\").show();\n\n            self.nextPrompt();\n        },\n\n        updateProgressDots: function(){\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_title\").html(progress);\n        },\n\n        nextPrompt: function() {\n            var self = this;\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", false);\n            self.updateProgressDots();\n            var newprompt = $(\".sgapfill_prompt_\" + self.game.pointer);\n            anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.nextReply();\n        },\n        \n\n        nextReply: function() {\n            var self = this;\n\n            var code = \"<div class='sgapfill_reply sgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            //correct or not\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            //definition\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n            var newreply = $(\".sgapfill_reply_\" + self.game.pointer);\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n\n            if (!self.quizhelper.mobile_user()) {\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\").trigger('click');\n                }, 1000);\n            }\n\n            //target is the speech we expect\n            var target = self.items[self.game.pointer].target;\n            //in some cases ttrecorder wants to know the target\n            if(self.quizhelper.use_ttrecorder()) {\n                self.ttrec.currentPrompt=target;\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","cloudpoodll","ttrecorder","anim","progresstimer","templates","debug","ttrec","clone","extend","this","init","index","itemdata","quizhelper","self","theCallback","message","type","words","items","game","pointer","maskedwords","Object","keys","forEach","key","push","getComparison","join","capturedspeech","phonetic","comparison","gotComparison","use_ttrecorder","opts","uniqueid","callback","stt_guided","is_stt_guided","wwwroot","id","animopts","useanimatecss","register_events","setvoice","getItems","next_question","percent","stepdata","hasgrade","totalitems","length","correctitems","filter","e","correct","grade","Math","round","do_next","show_item_review","review_data","listencont","qbox","recorderbox","gamebox","controlsbox","resultsbox","render","then","html","js","show","hide","runTemplateJS","on","start","audioplayerbtn","readsentence","theaudio","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","sgapfill_targetWord","sgapfill_targetWords","val","stopTimer","timer","answered","setTimeout","nextPrompt","end","usevoice","voiceoption","text_items","sentences","map","target","sentence","parsedstring","displayprompt","definition","typed","item","fetch_polly_url","audiourl","Audio","src","appReady","hidestartpage","countdownStarted","feedback","allCorrect","matched","characterinput","character","updateProgressDots","obj","word","thereply","do_animate","timelimit_progressbar","allowretry","hasClass","passage","transcript","comparePassageToTranscript","language","alternates","ajaxresult","payloadobject","JSON","parse","showitemreview","spoken","color","progress","idx","newprompt","nextReply","code","append","newreply","timelimit","progressTimer","height","timeLimit","onFinish","trigger","attr","mobile_user","currentPrompt","timers","clearInterval"],"mappings":"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"}