{"version":3,"file":"speakinggapfill.min.js","sources":["../src/speakinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates'\n], function($, log, ajax, def, polly, ttrecorder, anim, progresstimer, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson speaking gap fill: initialising');\n\n    return {\n\n        //a handle on the tt recorder\n        ttrec: null,\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            var theCallback = function(message) {\n\n                switch (message.type) {\n                    case 'recording':\n                        break;\n\n                    case 'speech':\n                        log.debug(\"Speech at speaking gap fill -\");\n                        var words = self.items[self.game.pointer].words;\n                        var maskedwords = [];\n\n                        Object.keys(words).forEach(function(key) {\n                            maskedwords.push(words[key]);\n                        });\n\n                        self.getComparison(\n                            maskedwords.join(\" \"),\n                            message.capturedspeech,\n                            self.items[self.game.pointer].phonetic,\n                            function(comparison) {\n                                self.gotComparison(comparison, message);\n                            }\n                        );\n                        break;\n\n                }\n\n            };\n\n            // Init the TT Recorder\n            var opts = {};\n            opts.uniqueid = itemdata.uniqueid;\n            opts.callback = theCallback;\n            opts.stt_guided = quizhelper.is_stt_guided();\n            opts.wwwroot = quizhelper.is_stt_guided();\n            self.ttrec = ttrecorder.clone();\n            self.ttrec.init(opts);\n\n            self.itemdata = itemdata;\n            log.debug(\"itemdata\");\n            log.debug(itemdata);\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        next_question: function(percent) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n\n            //stop audio\n            self.stop_audio();\n\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\");\n            var qbox = $(\"#\" + self.itemdata.uniqueid + \"_container .question\");\n            var recorderbox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\");\n            var gamebox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_game\");\n            var controlsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\");\n            var resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_resultscontainer\");\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n            // On next button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n            // On start button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER Button events\n            var audioplayerbtn=$(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\");\n            // On listen button click\n            if(self.itemdata.readsentence) {\n                audioplayerbtn.on(\"click\", function () {\n                    var theaudio = self.items[self.game.pointer].audio;\n\n                    //if we are already playing stop playing\n                    if(!theaudio.paused){\n                        theaudio.pause();\n                        theaudio.currentTime=0;\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                        return;\n                    }\n\n                    //change icon to indicate playing state\n                    theaudio.addEventListener('ended', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    });\n\n                    theaudio.addEventListener('play', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                        $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                    });\n                    theaudio.load();\n                    theaudio.play();\n                });\n            }\n\n            // On skip button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").on(\"click\", function() {\n                // Disable the buttons\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n                // Reveal the prompt\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speech.sgapfill_teacher_left\").text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal the answer\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                if (self.game.pointer < self.items.length - 1) {\n                    // Move on after short time to next prompt\n                    setTimeout(function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                    // End question\n                } else {\n                    self.end();\n                }\n\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        usevoice: '',\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    displayprompt: target.displayprompt,\n                    definition: target.definition,\n                    phonetic: target.phonetic,\n                    words: target.words,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    audiourl: target.audiourl ? target.audiourl : \"\",\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            if(self.itemdata.readsentence) {\n                $.each(self.items, function (index, item) {\n                    item.audio = new Audio();\n                    item.audio.src = item.audiourl;\n                });\n                self.appReady();\n            }else{\n                self.appReady();\n            }\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_loaded\").show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison, typed) {\n            log.debug(\"sgapfill comparison\");\n            var self = this;\n            var countdownStarted = false;\n            var feedback = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").removeClass(\"sgapfill_correct sgapfill_incorrect\");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_feedback\").removeClass(\"fa fa-check fa-times\");\n\n            var allCorrect = comparison.filter(function(e) {\n                return !e.matched;\n            }).length == 0;\n            log.debug('allcorrect=' + allCorrect);\n\n            if (allCorrect && comparison && comparison.length > 0) {\n\n                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                    if (data.type === 'input') {\n                        characterinput.val(data.character);\n                    }\n                });\n\n                feedback.removeClass(\"fa fa-times\");\n                feedback.addClass(\"fa fa-check\");\n                //make the input boxes green and move forward\n                log.debug('applying correct class to input boxes');\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" input\").addClass(\"ml_gapfill_char_correct\");\n\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = typed;\n\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if ((self.game.pointer < self.items.length - 1) && !countdownStarted) {\n                    countdownStarted = true;\n                    log.debug('moving to next prompt B');\n                    setTimeout(function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.updateProgressDots();\n                    self.end();\n                }\n            } else {\n                feedback.removeClass(\"fa fa-check\");\n                feedback.addClass(\"fa fa-times\");\n                // Mark up the words as correct or not\n                comparison.forEach(function(obj) {\n                    var words = self.items[self.game.pointer].words;\n\n                    Object.keys(words).forEach(function(key) {\n                        if (words[key] == obj.word) {\n                            if (!obj.matched) {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val('');\n                                    }\n                                });\n                            } else {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val(data.character);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n\n                // Show all the correct words\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord.sgapfill_correct\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                //if they cant retry OR the time limit is up, move on\n                var timelimit_progressbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\");\n                if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')){\n                    self.items[self.game.pointer].answered = true;\n                    self.items[self.game.pointer].correct = false;\n                    self.items[self.game.pointer].typed = typed;\n\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                    self.stopTimer(self.items[self.game.pointer].timer);\n\n                    if(!countdownStarted) {\n                        if (self.game.pointer < self.items.length - 1) {\n                            log.debug('moving to next prompt A');\n                            countdownStarted = true;\n                            setTimeout(function () {\n                                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer).hide();\n                                self.game.pointer++;\n                                self.nextPrompt();\n                            }, 2000);\n                        } else {\n                            self.updateProgressDots();\n                            self.end();\n                        }\n                    }//end of if countdown not started\n                } //end of if can't retry or time limit up\n            }//end of if -all -correct or not\n        },\n\n        getComparison: function(passage, transcript, phonetic, callback) {\n            var self = this;\n\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            self.quizhelper.comparePassageToTranscript(passage, transcript, phonetic, self.itemdata.language, self.itemdata.alternates).then(function(ajaxresult) {\n                var payloadobject = JSON.parse(ajaxresult);\n                if (payloadobject) {\n                    callback(payloadobject);\n                } else {\n                    callback(false);\n                }\n            });\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\").show();\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            if(self.itemdata.readsentence) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\").show();\n            }\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\").show();\n\n            self.nextPrompt();\n        },\n\n        updateProgressDots: function(){\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_title\").html(progress);\n        },\n\n        nextPrompt: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n            self.updateProgressDots();\n            var newprompt = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_prompt_\" + self.game.pointer);\n            anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.nextReply();\n        },\n        \n\n        nextReply: function() {\n            var self = this;\n\n            var code = \"<div class='sgapfill_reply sgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            //correct or not\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            //hint - image\n            if( self.items[self.game.pointer].imageurl) {\n                code += \"<div class='minilesson_sentence_image'><div class='minilesson_padded_image'><img src='\"\n                    + self.items[self.game.pointer].imageurl + \"' alt='Image for gap fill' /></div></div>\";\n            }\n            //hint - definition\n            if( self.items[self.game.pointer].definition) {\n                code += \"<div class='definition-container'><div class='definition'>\"\n                    + self.items[self.game.pointer].definition + \"</div>\";\n            }\n\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n\n\n            var newreply = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer);\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n\n            if (!self.quizhelper.mobile_user()) {\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\").trigger('click');\n                }, 1000);\n            }\n\n            //target is the speech we expect\n            var target = self.items[self.game.pointer].target;\n            //in some cases ttrecorder wants to know the target\n            if(self.quizhelper.use_ttrecorder()) {\n                self.ttrec.currentPrompt=target;\n            }\n        },\n\n        // Stop audio .. usually when leaving the item or sentence\n        stop_audio: function(){\n            var self =this;\n            //pause audio if its playing\n            var theaudio = self.items[self.game.pointer].audio;\n            if(theaudio && !theaudio.paused) {\n                theaudio.pause();\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","ttrecorder","anim","progresstimer","templates","debug","ttrec","clone","extend","this","init","index","itemdata","quizhelper","self","opts","uniqueid","callback","message","type","words","items","game","pointer","maskedwords","Object","keys","forEach","key","push","getComparison","join","capturedspeech","phonetic","comparison","gotComparison","stt_guided","is_stt_guided","wwwroot","animopts","useanimatecss","register_events","setvoice","getItems","next_question","percent","stepdata","hasgrade","totalitems","length","correctitems","filter","e","correct","grade","Math","round","stop_audio","do_next","show_item_review","review_data","listencont","qbox","recorderbox","gamebox","controlsbox","resultsbox","render","then","html","js","show","hide","runTemplateJS","on","start","audioplayerbtn","readsentence","theaudio","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","sgapfill_targetWord","sgapfill_targetWords","val","stopTimer","timer","answered","setTimeout","nextPrompt","end","usevoice","voiceoption","text_items","sentences","map","target","sentence","parsedstring","displayprompt","definition","typed","audiourl","imageurl","item","Audio","src","appReady","hidestartpage","countdownStarted","feedback","allCorrect","matched","characterinput","character","updateProgressDots","obj","word","thereply","do_animate","timelimit_progressbar","allowretry","hasClass","passage","transcript","comparePassageToTranscript","language","alternates","ajaxresult","payloadobject","JSON","parse","showitemreview","spoken","color","progress","idx","newprompt","nextReply","code","append","newreply","timelimit","progressTimer","height","timeLimit","onFinish","trigger","attr","mobile_user","use_ttrecorder","currentPrompt","timers","clearInterval"],"mappings":"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"}