{"version":3,"file":"speakinggapfill.min.js","sources":["../src/speakinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates',\n    'core/str',\n    'core/notification'\n], function($, log, ajax, def, polly, ttrecorder, anim, progresstimer, templates,str,notification) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson speaking gap fill: initialising');\n\n    return {\n\n        //a handle on the tt recorder\n        ttrec: null,\n        controls: {},\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.strings = {};\n            var theCallback = function(message) {\n\n                switch (message.type) {\n                    case 'recording':\n                        break;\n\n                    case 'speech':\n                        log.debug(\"Speech at speaking gap fill -\");\n                        var words = self.items[self.game.pointer].words;\n                        var maskedwords = [];\n\n                        Object.keys(words).forEach(function(key) {\n                            maskedwords.push(words[key]);\n                        });\n\n                        self.getComparison(\n                            maskedwords.join(\" \"),\n                            message.capturedspeech,\n                            self.items[self.game.pointer].phonetic,\n                            function(comparison) {\n                                self.gotComparison(comparison, message);\n                            }\n                        );\n                        break;\n\n                }\n\n            };\n\n            // Init the TT Recorder\n            var opts = {};\n            opts.uniqueid = itemdata.uniqueid;\n            opts.callback = theCallback;\n            opts.stt_guided = quizhelper.is_stt_guided();\n            opts.wwwroot = quizhelper.is_stt_guided();\n            self.ttrec = ttrecorder.clone();\n            self.ttrec.init(opts);\n\n            self.itemdata = itemdata;\n            log.debug(\"itemdata\");\n            log.debug(itemdata);\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n            self.init_controls();\n            self.init_strings();\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        init_controls: function() {\n            var self = this;\n            self.controls = {\n                container: $(\"#\" + self.itemdata.uniqueid + \"_container\"),\n                listen_cont: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\"),\n                nextbutton: $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\"),\n                start_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\"),\n                skip_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\"),\n                ctrl_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\"),\n                speakbtncontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\"),\n                game: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_game\"),\n                controlsbox: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\"),\n                resultscontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_resultscontainer\"),\n                mainmenu: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_mainmenu\"),\n                title: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_title\"),\n                progress_container: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\"),\n                progress_bar: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\"),\n                question: $(\"#\" + self.itemdata.uniqueid + \"_container .question\"),\n                listen_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\"),\n            };\n        },\n\n        init_strings: function() {\n            var self = this;\n            str.get_strings([\n                { \"key\": \"nextlessonitem\", \"component\": 'mod_minilesson'},\n                { \"key\": \"confirm_desc\", \"component\": 'mod_minilesson'},\n                { \"key\": \"yes\", \"component\": 'moodle'},\n                { \"key\": \"no\", \"component\": 'moodle'},\n            ]).done(function (s) {\n                var i = 0;\n                self.strings.nextlessonitem = s[i++];\n                self.strings.confirm_desc = s[i++];\n                self.strings.yes = s[i++];\n                self.strings.no = s[i++];\n            });\n        },\n\n        next_question: function(percent) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n\n            //stop audio\n            self.stop_audio();\n\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = self.controls.listen_cont;\n            var qbox = self.controls.question;\n            var recorderbox = self.controls.speakbtncontainer;\n            var gamebox = self.controls.game;\n            var controlsbox = self.controls.controlsbox;\n            var resultsbox = self.controls.resultscontainer;\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n            // On next button click\n            self.controls.container.find('.minilesson_nextbutton').on('click', function(e) {\n                if (self.items.some(item => !item.answered)) {\n                    notification.confirm(self.strings.nextlessonitem,\n                        self.strings.confirm_desc,\n                        self.strings.yes,\n                        self.strings.no,\n                        function() {\n                            self.next_question();\n                        }\n                    );\n                } else {\n                    self.next_question();\n                }\n            });\n            // On start button click\n            self.controls.start_btn.on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER Button events\n            var audioplayerbtn=self.controls.listen_btn;\n            // On listen button click\n            if(self.itemdata.readsentence) {\n                audioplayerbtn.on(\"click\", function () {\n                    var theaudio = self.items[self.game.pointer].audio;\n\n                    //if we are already playing stop playing\n                    if(!theaudio.paused){\n                        theaudio.pause();\n                        theaudio.currentTime=0;\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                        return;\n                    }\n\n                    //change icon to indicate playing state\n                    theaudio.addEventListener('ended', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    });\n\n                    theaudio.addEventListener('play', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                        $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                    });\n                    theaudio.load();\n                    theaudio.play();\n                });\n            }\n\n            // On skip button click\n            self.controls.skip_btn.on(\"click\", function() {\n                // Disable the buttons\n                self.controls.ctrl_btn.prop(\"disabled\", true);\n                // Reveal the prompt\n                self.controls.container.find('.sgapfill_speech.sgapfill_teacher_left').text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal the answer\n                self.controls.container.find('.sgapfill_targetWord').each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                if (self.game.pointer < self.items.length - 1) {\n                    self.controls.skip_btn.prop(\"disabled\", true);\n                    self.controls.skip_btn.children('.fa').removeClass('fa-arrow-right');\n                    self.controls.skip_btn.children('.fa').addClass('fa-spinner fa-spin');\n                    // Move on after short time to next prompt\n                    setTimeout(function() {\n                        self.controls.skip_btn.children('.fa').removeClass('fa-spinner fa-spin');\n                        self.controls.skip_btn.children('.fa').addClass('fa-arrow-right');\n                        self.controls.skip_btn.prop(\"disabled\", false);\n                        self.controls.container.find('.sgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                    // End question\n                } else {\n                    self.end();\n                }\n\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        usevoice: '',\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    segmentedsentence: target.segmentedsentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    displayprompt: target.displayprompt,\n                    definition: target.definition,\n                    phonetic: target.phonetic,\n                    words: target.words,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    audiourl: target.audiourl ? target.audiourl : \"\",\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            if(self.itemdata.readsentence) {\n                $.each(self.items, function (index, item) {\n                    item.audio = new Audio();\n                    item.audio.src = item.audiourl;\n                });\n                self.appReady();\n            }else{\n                self.appReady();\n            }\n        },\n\n        appReady: function() {\n            var self = this;\n            self.controls.container.find('.sgapfill_not_loaded').hide();\n            self.controls.container.find('.sgapfill_loaded').show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n               self.controls.start_btn.prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison, typed) {\n            log.debug(\"sgapfill comparison\");\n            var self = this;\n            var countdownStarted = false;\n            var feedback = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\");\n\n            self.controls.container.find('.sgapfill_targetWord').removeClass(\"sgapfill_correct sgapfill_incorrect\");\n            self.controls.container.find('.sgapfill_feedback').removeClass(\"fa fa-check fa-times\");\n\n            var allCorrect = comparison.filter(function(e) {\n                return !e.matched;\n            }).length == 0;\n            log.debug('allcorrect=' + allCorrect);\n\n            if (allCorrect && comparison && comparison.length > 0) {\n\n                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                    var characterinput = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                    if (data.type === 'input') {\n                        characterinput.val(data.character);\n                    }\n                });\n\n                feedback.removeClass(\"fa fa-times\");\n                feedback.addClass(\"fa fa-check\");\n                //make the input boxes green and move forward\n                log.debug('applying correct class to input boxes');\n                self.controls.container.find('.sgapfill_reply_' + self.game.pointer + \" input\").addClass(\"ml_gapfill_char_correct\");\n\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = typed;\n\n                self.controls.ctrl_btn.prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if ((self.game.pointer < self.items.length - 1) && !countdownStarted) {\n                    countdownStarted = true;\n                    log.debug('moving to next prompt B');\n                    setTimeout(function() {\n                        self.controls.container.find('.sgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.updateProgressDots();\n                    self.end();\n                }\n            } else {\n                feedback.removeClass(\"fa fa-check\");\n                feedback.addClass(\"fa fa-times\");\n                // Mark up the words as correct or not\n                comparison.forEach(function(obj) {\n                    var words = self.items[self.game.pointer].words;\n\n                    Object.keys(words).forEach(function(key) {\n                        if (words[key] == obj.word) {\n                            if (!obj.matched) {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val('');\n                                    }\n                                });\n                            } else {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val(data.character);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n                var thereply = self.controls.container.find('.sgapfill_reply_' + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        self.controls.ctrl_btn.prop(\"disabled\", false);\n                    }\n                );\n\n                // Show all the correct words\n                self.controls.container.find('.sgapfill_targetWord.sgapfill_correct').each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(targetWord);\n                });\n\n                //if they cant retry OR the time limit is up, move on\n                var timelimit_progressbar = self.controls.progress_bar;\n                if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')){\n                    self.items[self.game.pointer].answered = true;\n                    self.items[self.game.pointer].correct = false;\n                    self.items[self.game.pointer].typed = typed;\n\n                    self.controls.ctrl_btn.prop(\"disabled\", true);\n\n                    self.stopTimer(self.items[self.game.pointer].timer);\n\n                    if(!countdownStarted) {\n                        if (self.game.pointer < self.items.length - 1) {\n                            countdownStarted = true;\n                            setTimeout(function () {\n                                self.controls.container.find('.sgapfill_reply_' + self.game.pointer).hide();\n                                self.game.pointer++;\n                                self.nextPrompt();\n                            }, 2000);\n                        } else {\n                            self.updateProgressDots();\n                            self.end();\n                        }\n                    }//end of if countdown not started\n                } //end of if can't retry or time limit up\n            }//end of if -all -correct or not\n        },\n\n        getComparison: function(passage, transcript, phonetic, callback) {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n            self.quizhelper.comparePassageToTranscript(passage, transcript, phonetic, self.itemdata.language, self.itemdata.alternates).then(function(ajaxresult) {\n                var payloadobject = JSON.parse(ajaxresult);\n                if (payloadobject) {\n                    callback(payloadobject);\n                } else {\n                    callback(false);\n                }\n            });\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n\n        },\n\n        start: function() {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n            self.controls.speakbtncontainer.show();\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            self.controls.question.show();\n            if(self.itemdata.readsentence) {\n                self.controls.listen_cont.show();\n            }\n            self.controls.start_btn.hide();\n            self.controls.mainmenu.hide();\n            self.controls.controlsbox.show();\n\n            self.nextPrompt();\n        },\n\n        updateProgressDots: function(){\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            self.controls.title.html(progress);\n        },\n\n        nextPrompt: function() {\n            var self = this;\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n            self.updateProgressDots();\n            var newprompt = self.controls.container.find('.sgapfill_prompt_' + self.game.pointer);\n            anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.nextReply();\n        },\n\n\n        nextReply: function() {\n            var self = this;\n\n            var code = \"<div class='sgapfill_reply sgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n            var brackets = {started: false, ended: false, index: null};\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (brackets.started && !brackets.ended && brackets.index !== data.index) {\n                    brackets.started = brackets.ended = false;\n                    code += '</span>';\n                }\n                if ((data.type === 'input' || data.type === 'mtext') && !brackets.started) {\n                    code += '<span class=\"form-input-phrase-online\" data-mindex=\"'+data.index+'\">';\n                    brackets.started = true;\n                }\n                brackets.index = data.index;\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            if (brackets.started && !brackets.ended) {\n                code += '</span>';\n            }\n            //correct or not\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            //hints\n            // We need to set a higher margin for the image if there is no hint, to stop it being overlapped by the recorder\n            var hasdefinition = self.items[self.game.pointer].definition && self.items[self.game.pointer].definition !== \"\";\n            var imagebottommargin  = hasdefinition ? \"margin-bottom: 5px\" : \"margin-bottom: 50px\";\n            if( self.items[self.game.pointer].imageurl) {\n                code += \"<div class='minilesson_sentence_image' style='\"+imagebottommargin+\"'><div class='minilesson_padded_image'><img src='\"\n                    + self.items[self.game.pointer].imageurl + \"' alt='Image for gap fill' /></div></div>\";\n            }\n            //hint - definition\n            if(hasdefinition ) {\n                code += \"<div class='definition-container'><div class='definition'>\"\n                    + self.items[self.game.pointer].definition + \"</div>\";\n            }\n\n\n            self.controls.question.append(code);\n\n\n            var newreply = self.controls.container.find('.sgapfill_reply_' + self.game.pointer);\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            // Start the timer (if we have one)\n            self.startTimer();\n\n            // We autoplay the audio on item entry, if its not a mobile user.\n            // If we do not have a start page and its the first item, we play on the item show event\n            if (!self.quizhelper.mobile_user()){\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        setTimeout(function() {\n                            self.controls.listen_btn.trigger('click');\n                        }, 1000);\n                    });\n                }else{\n                    setTimeout(function() {\n                        self.controls.listen_btn.trigger('click');\n                    }, 1000);\n                }\n            }\n\n            //target is the speech we expect\n            var target = self.items[self.game.pointer].target;\n            //in some cases ttrecorder wants to know the target\n            if(self.quizhelper.use_ttrecorder()) {\n                self.ttrec.currentPrompt=target;\n            }\n        },\n\n        // Stop audio .. usually when leaving the item or sentence\n        stop_audio: function(){\n            var self =this;\n            //pause audio if its playing\n            var theaudio = self.items[self.game.pointer].audio;\n            if(theaudio && !theaudio.paused) {\n                theaudio.pause();\n            }\n        },\n\n        startTimer: function(){\n            var self = this;\n            // If we have a time limit, set up the timer, otherwise return\n            if (self.itemdata.timelimit > 0) {\n               // This is a function to start the timer (we call it conditionally below)\n                var doStartTimer = function() {\n                     // This shows progress bar\n                    self.controls.progress_container.show();\n                    self.controls.progress_container.find('i').show();\n                    var progresbar = self.controls.progress_container.find('#progresstimer').progressTimer({\n                        height: '5px',\n                        timeLimit: self.itemdata.timelimit,\n                        onFinish: function() {\n                            self.controls.skip_btn.trigger('click');\n                        }\n                    });\n                    progresbar.each(function() {\n                        self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                    });\n                }\n\n                // This adds the timer and starts it. But if we dont have a start page and its the first item\n                // we need to defer the timer start until the item is shown\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        doStartTimer();\n                    });\n                }else{\n                    doStartTimer();\n                }\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","ttrecorder","anim","progresstimer","templates","str","notification","debug","ttrec","controls","clone","extend","this","init","index","itemdata","quizhelper","self","strings","opts","uniqueid","callback","message","type","words","items","game","pointer","maskedwords","Object","keys","forEach","key","push","getComparison","join","capturedspeech","phonetic","comparison","gotComparison","stt_guided","is_stt_guided","wwwroot","animopts","useanimatecss","init_controls","init_strings","register_events","setvoice","getItems","container","listen_cont","nextbutton","start_btn","skip_btn","ctrl_btn","speakbtncontainer","controlsbox","resultscontainer","mainmenu","title","progress_container","progress_bar","question","listen_btn","get_strings","done","s","i","nextlessonitem","confirm_desc","yes","no","next_question","percent","stepdata","hasgrade","totalitems","length","correctitems","filter","e","correct","grade","Math","round","stop_audio","do_next","show_item_review","review_data","listencont","qbox","recorderbox","gamebox","resultsbox","render","then","html","js","show","hide","runTemplateJS","find","on","some","item","answered","confirm","start","audioplayerbtn","readsentence","theaudio","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","sgapfill_targetWord","sgapfill_targetWords","val","stopTimer","timer","setTimeout","nextPrompt","end","usevoice","voiceoption","text_items","sentences","map","target","sentence","segmentedsentence","parsedstring","displayprompt","definition","typed","audiourl","imageurl","Audio","src","appReady","hidestartpage","countdownStarted","feedback","allCorrect","matched","characterinput","character","updateProgressDots","obj","word","thereply","do_animate","targetWord","timelimit_progressbar","allowretry","hasClass","passage","transcript","comparePassageToTranscript","language","alternates","ajaxresult","payloadobject","JSON","parse","showitemreview","spoken","color","progress","idx","newprompt","nextReply","code","brackets","started","ended","hasdefinition","imagebottommargin","append","newreply","startTimer","mobile_user","trigger","use_ttrecorder","currentPrompt","timelimit","doStartTimer","progressTimer","height","timeLimit","onFinish","attr","timers","clearInterval"],"mappings":"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"}