{"version":3,"file":"speakinggapfill.min.js","sources":["../src/speakinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n    'core/templates'\n], function($, log, ajax, def, polly, ttrecorder, anim, progresstimer, templates) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson speaking gap fill: initialising');\n\n    return {\n\n        //a handle on the tt recorder\n        ttrec: null,\n        controls: {},\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            var theCallback = function(message) {\n\n                switch (message.type) {\n                    case 'recording':\n                        break;\n\n                    case 'speech':\n                        log.debug(\"Speech at speaking gap fill -\");\n                        var words = self.items[self.game.pointer].words;\n                        var maskedwords = [];\n\n                        Object.keys(words).forEach(function(key) {\n                            maskedwords.push(words[key]);\n                        });\n\n                        self.getComparison(\n                            maskedwords.join(\" \"),\n                            message.capturedspeech,\n                            self.items[self.game.pointer].phonetic,\n                            function(comparison) {\n                                self.gotComparison(comparison, message);\n                            }\n                        );\n                        break;\n\n                }\n\n            };\n\n            // Init the TT Recorder\n            var opts = {};\n            opts.uniqueid = itemdata.uniqueid;\n            opts.callback = theCallback;\n            opts.stt_guided = quizhelper.is_stt_guided();\n            opts.wwwroot = quizhelper.is_stt_guided();\n            self.ttrec = ttrecorder.clone();\n            self.ttrec.init(opts);\n\n            self.itemdata = itemdata;\n            log.debug(\"itemdata\");\n            log.debug(itemdata);\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n            self.init_controls();\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        init_controls: function() {\n            var self = this;\n            self.controls = {\n                container: $(\"#\" + self.itemdata.uniqueid + \"_container\"),\n                listen_cont: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\"),\n                nextbutton: $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\"),\n                start_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\"),\n                skip_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\"),\n                ctrl_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\"),\n                speakbtncontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\"),\n                game: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_game\"),\n                controlsbox: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\"),\n                resultscontainer: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_resultscontainer\"),\n                mainmenu: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_mainmenu\"),\n                title: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_title\"),\n                progress_container: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\"),\n                progress_bar: $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\"),\n                question: $(\"#\" + self.itemdata.uniqueid + \"_container .question\"),\n                listen_btn: $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\"),\n            };\n        },\n\n        next_question: function(percent) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n\n            //stop audio\n            self.stop_audio();\n\n            self.quizhelper.do_next(stepdata);\n        },\n\n        show_item_review:function(){\n            var self=this;\n            var review_data = {};\n            review_data.items = self.items;\n            review_data.totalitems=self.items.length;\n            review_data.correctitems=self.items.filter(function(e) {return e.correct;}).length;\n\n            //Get controls\n            var listencont = self.controls.listen_cont;\n            var qbox = self.controls.question;\n            var recorderbox = self.controls.speakbtncontainer;\n            var gamebox = self.controls.game;\n            var controlsbox = self.controls.controlsbox;\n            var resultsbox = self.controls.resultscontainer;\n\n            //display results\n            templates.render('mod_minilesson/listitemresults',review_data).then(\n              function(html,js){\n                  resultsbox.html(html);\n                  //show and hide\n                  resultsbox.show();\n                  gamebox.hide();\n                  controlsbox.hide();\n                  listencont.hide();\n                  qbox.hide();\n                  recorderbox.hide();\n                  // Run js for audio player events\n                  templates.runTemplateJS(js);\n              }\n            );// End of templates\n        },\n\n        register_events: function() {\n\n            var self = this;\n            // On next button click\n            self.controls.container.find('.minilesson_nextbutton').on('click', function(e) {\n                self.next_question();\n            });\n            // On start button click\n            self.controls.start_btn.on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER Button events\n            var audioplayerbtn=self.controls.listen_btn;\n            // On listen button click\n            if(self.itemdata.readsentence) {\n                audioplayerbtn.on(\"click\", function () {\n                    var theaudio = self.items[self.game.pointer].audio;\n\n                    //if we are already playing stop playing\n                    if(!theaudio.paused){\n                        theaudio.pause();\n                        theaudio.currentTime=0;\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                        return;\n                    }\n\n                    //change icon to indicate playing state\n                    theaudio.addEventListener('ended', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    });\n\n                    theaudio.addEventListener('play', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                        $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                    });\n                    theaudio.load();\n                    theaudio.play();\n                });\n            }\n\n            // On skip button click\n            self.controls.skip_btn.on(\"click\", function() {\n                // Disable the buttons\n                self.controls.ctrl_btn.prop(\"disabled\", true);\n                // Reveal the prompt\n                self.controls.container.find('.sgapfill_speech.sgapfill_teacher_left').text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal the answer\n                self.controls.container.find('.sgapfill_targetWord').each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                //mark as answered and incorrect\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n\n                if (self.game.pointer < self.items.length - 1) {\n                    // Move on after short time to next prompt\n                    setTimeout(function() {\n                        self.controls.container.find('.sgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                    // End question\n                } else {\n                    self.end();\n                }\n\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        usevoice: '',\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    displayprompt: target.displayprompt,\n                    definition: target.definition,\n                    phonetic: target.phonetic,\n                    words: target.words,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null,\n                    audiourl: target.audiourl ? target.audiourl : \"\",\n                    imageurl: target.imageurl,\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            if(self.itemdata.readsentence) {\n                $.each(self.items, function (index, item) {\n                    item.audio = new Audio();\n                    item.audio.src = item.audiourl;\n                });\n                self.appReady();\n            }else{\n                self.appReady();\n            }\n        },\n\n        appReady: function() {\n            var self = this;\n            self.controls.container.find('.sgapfill_not_loaded').hide();\n            self.controls.container.find('.sgapfill_loaded').show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n               self.controls.start_btn.prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison, typed) {\n            log.debug(\"sgapfill comparison\");\n            var self = this;\n            var countdownStarted = false;\n            var feedback = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\");\n\n            self.controls.container.find('.sgapfill_targetWord').removeClass(\"sgapfill_correct sgapfill_incorrect\");\n            self.controls.container.find('.sgapfill_feedback').removeClass(\"fa fa-check fa-times\");\n\n            var allCorrect = comparison.filter(function(e) {\n                return !e.matched;\n            }).length == 0;\n            log.debug('allcorrect=' + allCorrect);\n\n            if (allCorrect && comparison && comparison.length > 0) {\n\n                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                    var characterinput = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                    if (data.type === 'input') {\n                        characterinput.val(data.character);\n                    }\n                });\n\n                feedback.removeClass(\"fa fa-times\");\n                feedback.addClass(\"fa fa-check\");\n                //make the input boxes green and move forward\n                log.debug('applying correct class to input boxes');\n                self.controls.container.find('.sgapfill_reply_' + self.game.pointer + \" input\").addClass(\"ml_gapfill_char_correct\");\n\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = typed;\n\n                self.controls.ctrl_btn.prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if ((self.game.pointer < self.items.length - 1) && !countdownStarted) {\n                    countdownStarted = true;\n                    log.debug('moving to next prompt B');\n                    setTimeout(function() {\n                        self.controls.container.find('.sgapfill_reply_' + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.updateProgressDots();\n                    self.end();\n                }\n            } else {\n                feedback.removeClass(\"fa fa-check\");\n                feedback.addClass(\"fa fa-times\");\n                // Mark up the words as correct or not\n                comparison.forEach(function(obj) {\n                    var words = self.items[self.game.pointer].words;\n\n                    Object.keys(words).forEach(function(key) {\n                        if (words[key] == obj.word) {\n                            if (!obj.matched) {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val('');\n                                    }\n                                });\n                            } else {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = self.controls.container.find('.sgapfill_reply_' + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val(data.character);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n                var thereply = self.controls.container.find('.sgapfill_reply_' + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        self.controls.ctrl_btn.prop(\"disabled\", false);\n                    }\n                );\n\n                // Show all the correct words\n                self.controls.container.find('.sgapfill_targetWord.sgapfill_correct').each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(targetWord);\n                });\n\n                //if they cant retry OR the time limit is up, move on\n                var timelimit_progressbar = self.controls.progress_bar;\n                if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')){\n                    self.items[self.game.pointer].answered = true;\n                    self.items[self.game.pointer].correct = false;\n                    self.items[self.game.pointer].typed = typed;\n\n                    $self.controls.ctrl_btn.prop(\"disabled\", true);\n\n                    self.stopTimer(self.items[self.game.pointer].timer);\n\n                    if(!countdownStarted) {\n                        if (self.game.pointer < self.items.length - 1) {\n                            countdownStarted = true;\n                            setTimeout(function () {\n                                self.controls.container.find('.sgapfill_reply_' + self.game.pointer).hide();\n                                self.game.pointer++;\n                                self.nextPrompt();\n                            }, 2000);\n                        } else {\n                            self.updateProgressDots();\n                            self.end();\n                        }\n                    }//end of if countdown not started\n                } //end of if can't retry or time limit up\n            }//end of if -all -correct or not\n        },\n\n        getComparison: function(passage, transcript, phonetic, callback) {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n            self.quizhelper.comparePassageToTranscript(passage, transcript, phonetic, self.itemdata.language, self.itemdata.alternates).then(function(ajaxresult) {\n                var payloadobject = JSON.parse(ajaxresult);\n                if (payloadobject) {\n                    callback(payloadobject);\n                } else {\n                    callback(false);\n                }\n            });\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n\n            //progress dots are updated on next_item. The last item has no next item, so we update from here\n            self.updateProgressDots();\n\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\",false);\n                if(self.quizhelper.showitemreview){\n                    self.show_item_review();\n                }else{\n                    self.next_question();\n                }\n            }, 2000);\n\n        },\n\n        start: function() {\n            var self = this;\n\n            self.controls.ctrl_btn.prop(\"disabled\", true);\n            self.controls.speakbtncontainer.show();\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            self.controls.question.show();\n            if(self.itemdata.readsentence) {\n                self.controls.listen_cont.show();\n            }\n            self.controls.start_btn.hide();\n            self.controls.mainmenu.hide();\n            self.controls.controlsbox.show();\n\n            self.nextPrompt();\n        },\n\n        updateProgressDots: function(){\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            self.controls.title.html(progress);\n        },\n\n        nextPrompt: function() {\n            var self = this;\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n            self.updateProgressDots();\n            var newprompt = self.controls.container.find('.sgapfill_prompt_' + self.game.pointer);\n            anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.nextReply();\n        },\n        \n\n        nextReply: function() {\n            var self = this;\n\n            var code = \"<div class='sgapfill_reply sgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n            var brackets = {started: false, ended: false, index: null};\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (brackets.started && !brackets.ended && brackets.index !== data.index) {\n                    brackets.started = brackets.ended = false;\n                    code += '</span>';\n                }\n                if ((data.type === 'input' || data.type === 'mtext') && !brackets.started) {\n                    code += '<span class=\"form-input-phrase-online\" data-mindex=\"'+data.index+'\">';\n                    brackets.started = true;\n                }\n                brackets.index = data.index;\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            if (brackets.started && !brackets.ended) {\n                code += '</span>';\n            }\n            //correct or not\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            //hints\n            // We need to set a higher margin for the image if there is no hint, to stop it being overlapped by the recorder\n            var hasdefinition = self.items[self.game.pointer].definition && self.items[self.game.pointer].definition !== \"\";\n            var imagebottommargin  = hasdefinition ? \"margin-bottom: 5px\" : \"margin-bottom: 50px\";\n            if( self.items[self.game.pointer].imageurl) {\n                code += \"<div class='minilesson_sentence_image' style='\"+imagebottommargin+\"'><div class='minilesson_padded_image'><img src='\"\n                    + self.items[self.game.pointer].imageurl + \"' alt='Image for gap fill' /></div></div>\";\n            }\n            //hint - definition\n            if(hasdefinition ) {\n                code += \"<div class='definition-container'><div class='definition'>\"\n                    + self.items[self.game.pointer].definition + \"</div>\";\n            }\n\n\n            self.controls.question.append(code);\n\n\n            var newreply = self.controls.container.find('.sgapfill_reply_' + self.game.pointer);\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.controls.ctrl_btn.prop(\"disabled\", false);\n\n            // Start the timer (if we have one)\n            self.startTimer();\n\n            // We autoplay the audio on item entry, if its not a mobile user.\n            // If we do not have a start page and its the first item, we play on the item show event\n            if (!self.quizhelper.mobile_user()){\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        setTimeout(function() {\n                            self.controls.listen_btn.trigger('click');\n                        }, 1000);\n                    });\n                }else{\n                    setTimeout(function() {\n                        self.controls.listen_btn.trigger('click');\n                    }, 1000);\n                }\n            }\n\n            //target is the speech we expect\n            var target = self.items[self.game.pointer].target;\n            //in some cases ttrecorder wants to know the target\n            if(self.quizhelper.use_ttrecorder()) {\n                self.ttrec.currentPrompt=target;\n            }\n        },\n\n        // Stop audio .. usually when leaving the item or sentence\n        stop_audio: function(){\n            var self =this;\n            //pause audio if its playing\n            var theaudio = self.items[self.game.pointer].audio;\n            if(theaudio && !theaudio.paused) {\n                theaudio.pause();\n            }\n        },\n\n        startTimer: function(){\n            var self = this;\n            // If we have a time limit, set up the timer, otherwise return\n            if (self.itemdata.timelimit > 0) {\n               // This is a function to start the timer (we call it conditionally below)\n                var doStartTimer = function() {\n                     // This shows progress bar\n                    self.controls.progress_container.show();\n                    self.controls.progress_container.find('i').show();\n                    var progresbar = self.controls.progress_container.find('#progresstimer').progressTimer({\n                        height: '5px',\n                        timeLimit: self.itemdata.timelimit,\n                        onFinish: function() {\n                            self.controls.skip_btn.trigger('click');\n                        }\n                    });\n                    progresbar.each(function() {\n                        self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                    });\n                }\n\n                // This adds the timer and starts it. But if we dont have a start page and its the first item\n                // we need to defer the timer start until the item is shown\n                if(self.itemdata.hidestartpage && self.game.pointer === 0){\n                    self.controls.container.on(\"showElement\", () => {\n                        doStartTimer();\n                    });\n                }else{\n                    doStartTimer();\n                }\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","ttrecorder","anim","progresstimer","templates","debug","ttrec","controls","clone","extend","this","init","index","itemdata","quizhelper","self","opts","uniqueid","callback","message","type","words","items","game","pointer","maskedwords","Object","keys","forEach","key","push","getComparison","join","capturedspeech","phonetic","comparison","gotComparison","stt_guided","is_stt_guided","wwwroot","animopts","useanimatecss","init_controls","register_events","setvoice","getItems","container","listen_cont","nextbutton","start_btn","skip_btn","ctrl_btn","speakbtncontainer","controlsbox","resultscontainer","mainmenu","title","progress_container","progress_bar","question","listen_btn","next_question","percent","stepdata","hasgrade","totalitems","length","correctitems","filter","e","correct","grade","Math","round","stop_audio","do_next","show_item_review","review_data","listencont","qbox","recorderbox","gamebox","resultsbox","render","then","html","js","show","hide","runTemplateJS","find","on","start","audioplayerbtn","readsentence","theaudio","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","sgapfill_targetWord","sgapfill_targetWords","val","stopTimer","timer","answered","setTimeout","nextPrompt","end","usevoice","voiceoption","text_items","sentences","map","target","sentence","parsedstring","displayprompt","definition","typed","audiourl","imageurl","item","Audio","src","appReady","hidestartpage","countdownStarted","feedback","allCorrect","matched","characterinput","character","updateProgressDots","obj","word","thereply","do_animate","targetWord","timelimit_progressbar","allowretry","hasClass","$self","passage","transcript","comparePassageToTranscript","language","alternates","ajaxresult","payloadobject","JSON","parse","showitemreview","spoken","color","progress","idx","newprompt","nextReply","code","brackets","started","ended","hasdefinition","imagebottommargin","append","newreply","startTimer","mobile_user","trigger","use_ttrecorder","currentPrompt","timelimit","doStartTimer","progressTimer","height","timeLimit","onFinish","attr","timers","clearInterval"],"mappings":"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"}