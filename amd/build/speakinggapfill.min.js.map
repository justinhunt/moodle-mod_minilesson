{"version":3,"file":"speakinggapfill.min.js","sources":["../src/speakinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/cloudpoodllloader',\n    'mod_minilesson/ttrecorder',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer'\n], function($, log, ajax, def, polly, cloudpoodll, ttrecorder, anim, progresstimer) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson speaking gap fill: initialising');\n\n    return {\n\n        //a handle on the tt recorder\n        ttrec: null,\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            var theCallback = function(message) {\n\n                switch (message.type) {\n                    case 'recording':\n                        break;\n\n                    case 'speech':\n                        log.debug(\"Speech at speaking gap fill -\");\n                        var words = self.items[self.game.pointer].words;\n                        var maskedwords = [];\n\n                        Object.keys(words).forEach(function(key) {\n                            maskedwords.push(words[key]);\n                        });\n\n                        self.getComparison(\n                            maskedwords.join(\" \"),\n                            message.capturedspeech,\n                            self.items[self.game.pointer].phonetic,\n                            function(comparison) {\n                                self.gotComparison(comparison, message);\n                            }\n                        );\n                        break;\n\n                }\n\n            };\n\n            if (quizhelper.use_ttrecorder()) {\n                var opts = {};\n                opts.uniqueid = itemdata.uniqueid;\n                opts.callback = theCallback;\n                opts.stt_guided = quizhelper.is_stt_guided();\n                opts.wwwroot = quizhelper.is_stt_guided();\n                self.ttrec = ttrecorder.clone();\n                self.ttrec.init(opts);\n            } else {\n                // Init cloudpoodll push recorder\n                cloudpoodll.init('minilesson-recorder-listenrepeat-' + itemdata.id, theCallback);\n            }\n\n            self.itemdata = itemdata;\n            log.debug(\"itemdata\");\n            log.debug(itemdata);\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        next_question: function(percent) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        register_events: function() {\n\n            var self = this;\n            // On next button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n            // On start button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER Button events\n            var audioplayerbtn=$(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\");\n            // On listen button click\n            if(self.itemdata.readsentence) {\n                audioplayerbtn.on(\"click\", function () {\n                    var theaudio = self.items[self.game.pointer].audio;\n\n                    //if we are already playing stop playing\n                    if(!theaudio.paused){\n                        theaudio.pause();\n                        theaudio.currentTime=0;\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                        return;\n                    }\n\n                    //change icon to indicate playing state\n                    theaudio.addEventListener('ended', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    });\n\n                    theaudio.addEventListener('play', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                        $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                    });\n                    theaudio.load();\n                    theaudio.play();\n                });\n            }\n\n            // On skip button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").on(\"click\", function() {\n                // Disable the buttons\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n                // Reveal the prompt\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speech.sgapfill_teacher_left\").text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal the answer\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if (self.game.pointer < self.items.length - 1) {\n                    // Move on after short time to next prompt\n                    log.debug('moving to next prompt C');\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.items[self.game.pointer].answered = true;\n                        self.items[self.game.pointer].correct = false;\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                    // End question\n                } else {\n                    self.updateProgressDots();\n                    self.end();\n                }\n\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        usevoice: '',\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    displayprompt: target.displayprompt,\n                    definition: target.definition,\n                    phonetic: target.phonetic,\n                    words: target.words,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            if(self.itemdata.readsentence) {\n                $.each(self.items, function (index, item) {\n                    polly.fetch_polly_url(item.prompt, self.voiceoption, self.usevoice).then(function (audiourl) {\n                        item.audio = new Audio();\n                        item.audio.src = audiourl;\n                        if (self.items.filter(function (e) {\n                            return e.audio === null;\n                        }).length === 0) {\n                            self.appReady();\n                        }\n                    });\n                });\n            }else{\n                self.appReady();\n            }\n\n\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_loaded\").show();\n            if(self.itemdata.hidestartpage){\n                self.start();\n            }else{\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").prop(\"disabled\", false);\n            }\n        },\n\n        gotComparison: function(comparison, typed) {\n            log.debug(\"sgapfill comparison\");\n            var self = this;\n            var countdownStarted = false;\n            var feedback = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").removeClass(\"sgapfill_correct sgapfill_incorrect\");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_feedback\").removeClass(\"fa fa-check fa-times\");\n\n            var allCorrect = comparison.filter(function(e) {\n                return !e.matched;\n            }).length == 0;\n            log.debug('allcorrect=' + allCorrect);\n\n            if (allCorrect && comparison && comparison.length > 0) {\n\n                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                    if (data.type === 'input') {\n                        characterinput.val(data.character);\n                    }\n                });\n\n                feedback.removeClass(\"fa fa-times\");\n                feedback.addClass(\"fa fa-check\");\n                //make the input boxes green and move forward\n                log.debug('applying correct class to input boxes');\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" input\").addClass(\"ml_gapfill_char_correct\");\n\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = typed;\n\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if ((self.game.pointer < self.items.length - 1) && !countdownStarted) {\n                    countdownStarted = true;\n                    log.debug('moving to next prompt B');\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.updateProgressDots();\n                    self.end();\n                }\n            } else {\n                feedback.removeClass(\"fa fa-check\");\n                feedback.addClass(\"fa fa-times\");\n                // Mark up the words as correct or not\n                comparison.forEach(function(obj) {\n                    var words = self.items[self.game.pointer].words;\n\n                    Object.keys(words).forEach(function(key) {\n                        if (words[key] == obj.word) {\n                            if (!obj.matched) {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val('');\n                                    }\n                                });\n                            } else {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val(data.character);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n\n                // Show all the correct words\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord.sgapfill_correct\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                //if they cant retry OR the time limit is up, move on\n                var timelimit_progressbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\");\n                if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')){\n                    self.items[self.game.pointer].answered = true;\n                    self.items[self.game.pointer].correct = false;\n                    self.items[self.game.pointer].typed = typed;\n\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                    self.stopTimer(self.items[self.game.pointer].timer);\n\n                    if(!countdownStarted) {\n                        if (self.game.pointer < self.items.length - 1) {\n                            log.debug('moving to next prompt A');\n                            countdownStarted = true;\n                            setTimeout(function () {\n                                $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                                self.game.pointer++;\n                                self.nextPrompt();\n                            }, 2000);\n                        } else {\n                            self.updateProgressDots();\n                            self.end();\n                        }\n                    }//end of if countdown not started\n                } //end of if can't retry or time limit up\n            }//end of if -all -correct or not\n        },\n\n        getComparison: function(passage, transcript, phonetic, callback) {\n            var self = this;\n\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            self.quizhelper.comparePassageToTranscript(passage, transcript, phonetic, self.itemdata.language).then(function(ajaxresult) {\n                var payloadobject = JSON.parse(ajaxresult);\n                if (payloadobject) {\n                    callback(payloadobject);\n                } else {\n                    callback(false);\n                }\n            });\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function() {\n\n                $(\".minilesson_nextbutton\").prop(\"disabled\", false);\n                self.next_question();\n\n            }, 2000);\n\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\").show();\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            if(self.itemdata.readsentence) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\").show();\n            }\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\").show();\n\n            self.nextPrompt();\n        },\n\n        updateProgressDots: function(){\n            var self = this;\n            var color;\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_title\").html(progress);\n        },\n\n        nextPrompt: function() {\n            var self = this;\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", false);\n            self.updateProgressDots();\n            var newprompt = $(\".sgapfill_prompt_\" + self.game.pointer);\n            anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.nextReply();\n        },\n\n        nextReply: function() {\n            var self = this;\n\n            var code = \"<div class='sgapfill_reply sgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            //correct or not\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            //definition\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n            var newreply = $(\".sgapfill_reply_\" + self.game.pointer);\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n\n            if (!self.quizhelper.mobile_user()) {\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\").trigger('click');\n                }, 1000);\n            }\n\n            //target is the speech we expect\n            var target = self.items[self.game.pointer].target;\n            //in some cases ttrecorder wants to know the target\n            if(self.quizhelper.use_ttrecorder()) {\n                self.ttrec.currentPrompt=target;\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","cloudpoodll","ttrecorder","anim","progresstimer","debug","ttrec","clone","extend","this","init","index","itemdata","quizhelper","self","theCallback","message","type","words","items","game","pointer","maskedwords","Object","keys","forEach","key","push","getComparison","join","capturedspeech","phonetic","comparison","gotComparison","use_ttrecorder","opts","uniqueid","callback","stt_guided","is_stt_guided","wwwroot","id","animopts","useanimatecss","register_events","setvoice","getItems","next_question","percent","stepdata","hasgrade","totalitems","length","correctitems","filter","e","correct","grade","Math","round","do_next","on","start","audioplayerbtn","readsentence","theaudio","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","sgapfill_targetWord","sgapfill_targetWords","val","stopTimer","timer","setTimeout","hide","answered","nextPrompt","updateProgressDots","end","usevoice","voiceoption","text_items","sentences","map","target","sentence","parsedstring","displayprompt","definition","typed","item","fetch_polly_url","then","audiourl","Audio","src","appReady","show","hidestartpage","countdownStarted","feedback","allCorrect","matched","characterinput","character","obj","word","thereply","do_animate","timelimit_progressbar","allowretry","hasClass","passage","transcript","comparePassageToTranscript","language","ajaxresult","payloadobject","JSON","parse","spoken","color","progress","idx","html","newprompt","nextReply","code","append","newreply","timelimit","progressTimer","height","timeLimit","onFinish","trigger","attr","mobile_user","currentPrompt","timers","clearInterval"],"mappings":"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"}