{"version":3,"file":"freespeaking.min.js","sources":["../src/freespeaking.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions',\n    'mod_minilesson/ttrecorder', 'mod_minilesson/correctionsmarkup', 'core/templates'],\n    function($, log, def, ttrecorder, correctionsmarkup, templates) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the free speaking item type\n   */\n\n  log.debug('MiniLesson FreeSpeaking: initialising');\n\n  return {\n\n     transcript_evaluation: null,\n     rawscore: 0,\n     percentscore: 0,\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.itemdata = itemdata;\n      log.debug('itemdata',itemdata);\n      this.quizhelper = quizhelper;\n      this.init_components(quizhelper,itemdata);\n      this.register_events(index, itemdata, quizhelper);\n\n    },\n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = self.itemdata.totalmarks;\n      stepdata.correctitems = self.rawscore > 0 ? self.rawscore : 0;\n      stepdata.grade = self.percentscore;\n      stepdata.resultsdata = self.transcript_evaluation;\n      self.quizhelper.do_next(stepdata);\n    },\n\n    calculate_score: function(transcript_evaluation) {\n      var self = this;\n\n      if(transcript_evaluation === null){\n        return 0;\n      }\n\n      //words ratio\n      var wordsratio = 1;\n      if(self.itemdata.countwords) {\n        wordsratio = transcript_evaluation.stats.words / self.itemdata.targetwordcount;\n        if(wordsratio > 1){wordsratio = 1;}\n      }\n\n      //relevance\n      var relevanceratio = 1;\n      if(self.itemdata.relevance > 0){\n        relevanceratio = (transcript_evaluation.stats.relevance + 10) / 100;\n        if(relevanceratio > 1){relevanceratio = 1;}\n      }\n      //calculate score based on AI grade * relevance * wordcount\n      var score = Math.round(transcript_evaluation.marks * relevanceratio * wordsratio);\n      return score;\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n      \n      var self = this;\n      self.index = index;\n      self.quizhelper = quizhelper;\n      var nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n      \n      nextbutton.on('click', function(e) {\n        self.next_question();\n      });\n\n    },\n\n    init_components: function(quizhelper,itemdata){\n      var self=this;\n      self.allwords = $(\"#\" + self.itemdata.uniqueid + \"_container.mod_minilesson_mu_passage_word\");\n      self.thebutton = \"thettrbutton\"; // To Do impl. this\n      self.wordcount = $(\"#\" + self.itemdata.uniqueid + \"_container span.ml_wordcount\");\n      self.actionbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_actionbox\");\n      self.pendingbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_pendingbox\");\n      self.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_resultsbox\");\n      self.timerdisplay = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_timerdisplay\");\n\n      // Callback: Recorder updates.\n      var recorderCallback = function(message) {\n\n        switch (message.type) {\n          case 'recording':\n            break;\n\n          case 'interimspeech':\n            var wordcount = self.quizhelper.count_words(message.capturedspeech);\n            self.wordcount.text(wordcount);\n            break;\n\n          case 'speech':\n            var speechtext = message.capturedspeech;\n\n            //update the wordcount\n            var wordcount = self.quizhelper.count_words(speechtext);\n            self.wordcount.text(wordcount);\n\n            self.do_evaluation(speechtext);    \n        } //end of switch message type\n      };\n\n      //init tt recorder\n      var opts = {};\n      opts.uniqueid = itemdata.uniqueid;\n      opts.callback = recorderCallback;\n      opts.stt_guided=false;\n      self.ttrec = ttrecorder.clone();\n      self.ttrec.init(opts);\n\n    }, //end of init components\n\n    do_corrections_markup: function(grammarerrors,grammarmatches,insertioncount) {\n      var self = this;\n      //corrected text container is created at runtime, so it wont exist at init_components time\n      //thats we find it here \n       var correctionscontainer = self.resultsbox.find('.mlfsr_correctedtext');\n       correctionsmarkup.init({ \"correctionscontainer\": correctionscontainer,\n            \"grammarerrors\": grammarerrors,\n            \"grammarmatches\": grammarmatches,\n            \"insertioncount\": insertioncount});\n    },\n\n    do_evaluation: function(speechtext) {\n      var self = this;\n\n      //show a spinner while we do the AI stuff\n      self.resultsbox.hide();\n      self.actionbox.hide();\n      self.pendingbox.show();\n      \n      //do evaluation\n      this.quizhelper.evaluateTranscript(speechtext,this.itemdata.itemid).then(function(ajaxresult) {\n        var transcript_evaluation = JSON.parse(ajaxresult);\n        if (transcript_evaluation) {\n          //calculate raw score and percent score\n          transcript_evaluation.rawscore = self.calculate_score(transcript_evaluation);\n          self.rawscore = self.calculate_score(transcript_evaluation);\n          if(self.itemdata.totalmarks > 0){\n            self.percentscore = Math.round((self.rawscore / self.itemdata.totalmarks) * 100);\n          }\n          //add raw and percent score to trancript_evaluation for mustache\n          transcript_evaluation.rawscore = self.rawscore;\n          transcript_evaluation.percentscore = self.percentscore;\n          transcript_evaluation.rawspeech = speechtext;\n          transcript_evaluation.maxscore = self.itemdata.totalmarks;\n          self.transcript_evaluation = transcript_evaluation;\n\n          log.debug(transcript_evaluation);\n          //display results or move next if not show item review\n          if(!self.quizhelper.showitemreview){\n            self.next_question();\n          }else{\n            //display results\n            templates.render('mod_minilesson/freespeakingresults',transcript_evaluation).then(\n              function(html,js){\n                  self.resultsbox.html(html);\n                  //do corrections markup\n                  if(transcript_evaluation.hasOwnProperty('grammarerrors')){\n                    self.do_corrections_markup(transcript_evaluation.grammarerrors,\n                      transcript_evaluation.grammarmatches,\n                      transcript_evaluation.insertioncount\n                    );\n                  }\n                  //show and hide\n                  self.resultsbox.show();\n                  self.pendingbox.hide();\n                  self.actionbox.hide();\n                  templates.runTemplateJS(js);\n                  //reset timer and wordcount on this page, in case reattempt\n                  self.wordcount.text('0');\n                  self.ttrec.timer.reset();\n                  var displaytime = self.ttrec.timer.fetch_display_time();\n                  self.timerdisplay.html(displaytime);\n              }\n            );// End of templates\n          } //end of if show item review\n        } else {\n          log.debug('transcript_evaluation: oh no it failed');\n          self.resultsbox.hide();\n          self.pendingbox.hide();\n          self.actionbox.show();\n        }\n      }); \n    },\n  };\n});"],"names":["define","$","log","def","ttrecorder","correctionsmarkup","templates","debug","transcript_evaluation","rawscore","percentscore","clone","extend","this","init","index","itemdata","quizhelper","init_components","register_events","next_question","stepdata","hasgrade","totalitems","totalmarks","correctitems","grade","resultsdata","do_next","calculate_score","wordsratio","countwords","stats","words","targetwordcount","relevanceratio","relevance","Math","round","marks","self","uniqueid","on","e","allwords","thebutton","wordcount","actionbox","pendingbox","resultsbox","timerdisplay","opts","callback","message","type","count_words","capturedspeech","text","speechtext","do_evaluation","stt_guided","ttrec","do_corrections_markup","grammarerrors","grammarmatches","insertioncount","correctionscontainer","find","hide","show","evaluateTranscript","itemid","then","ajaxresult","JSON","parse","rawspeech","maxscore","showitemreview","render","html","js","hasOwnProperty","runTemplateJS","timer","reset","displaytime","fetch_display_time"],"mappings":"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"}