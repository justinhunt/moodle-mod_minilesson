{"version":3,"file":"freespeaking.min.js","sources":["../src/freespeaking.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions',\n    'mod_minilesson/ttrecorder', 'mod_minilesson/correctionsmarkup', 'core/templates'],\n    function($, log, def, ttrecorder, correctionsmarkup, templates) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the free speaking item type\n   */\n\n  log.debug('MiniLesson FreeSpeaking: initialising');\n\n  return {\n\n     transcript_evaluation: null,\n     rawscore: 0,\n     percentscore: 0,\n\n    //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(index, itemdata, quizhelper) {\n      this.itemdata = itemdata;\n      log.debug('itemdata',itemdata);\n      this.quizhelper = quizhelper;\n      this.init_components(quizhelper,itemdata);\n      this.register_events(index, itemdata, quizhelper);\n\n    },\n\n    next_question: function() {\n      var self = this;\n      var stepdata = {};\n      stepdata.index = self.index;\n      stepdata.hasgrade = true;\n      stepdata.totalitems = self.itemdata.totalmarks;\n      stepdata.correctitems = self.rawscore > 0 ? self.rawscore : 0;\n      stepdata.grade = self.percentscore;\n      stepdata.resultsdata = self.transcript_evaluation;\n      self.quizhelper.do_next(stepdata);\n    },\n\n    calculate_score: function(transcript_evaluation) {\n      var self = this;\n\n      if(transcript_evaluation === null){\n        return 0;\n      }\n\n      //words ratio\n      var wordsratio = 1;\n      if(self.itemdata.countwords) {\n        wordsratio = transcript_evaluation.stats.words / self.itemdata.targetwordcount;\n        if(wordsratio > 1){wordsratio = 1;}\n      }\n\n      //relevance\n      var relevanceratio = 1;\n      if(self.itemdata.relevance > 0){\n        relevanceratio = (transcript_evaluation.stats.relevance + 10) / 100;\n        if(relevanceratio > 1){relevanceratio = 1;}\n      }\n      //calculate score based on AI grade * relevance * wordcount\n      var score = Math.round(transcript_evaluation.marks * relevanceratio * wordsratio);\n      return score;\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n\n      var self = this;\n      self.index = index;\n      self.quizhelper = quizhelper;\n      var nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n\n      nextbutton.on('click', function(e) {\n        self.next_question();\n      });\n\n      $(\"#\" + itemdata.uniqueid + \"_container\").on('showElement', () => {\n        if (itemdata.timelimit > 0) {\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container\").show();\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container i\").show();\n            $(\"#\" + itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                height: '5px',\n                timeLimit: itemdata.timelimit,\n                onFinish: function() {\n                    nextbutton.trigger('click');\n                }\n            });\n        }\n      });\n\n    },\n\n    init_components: function(quizhelper,itemdata){\n      var self=this;\n      self.allwords = $(\"#\" + self.itemdata.uniqueid + \"_container.mod_minilesson_mu_passage_word\");\n      self.thebutton = \"thettrbutton\"; // To Do impl. this\n      self.wordcount = $(\"#\" + self.itemdata.uniqueid + \"_container span.ml_wordcount\");\n      self.actionbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_actionbox\");\n      self.pendingbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_pendingbox\");\n      self.resultsbox = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_resultsbox\");\n      self.timerdisplay = $(\"#\" + self.itemdata.uniqueid + \"_container div.ml_freespeaking_timerdisplay\");\n\n      // Callback: Recorder updates.\n      var recorderCallback = function(message) {\n\n        switch (message.type) {\n          case 'recording':\n            break;\n\n          case 'interimspeech':\n            var wordcount = self.quizhelper.count_words(message.capturedspeech);\n            self.wordcount.text(wordcount);\n            break;\n\n          case 'speech':\n            var speechtext = message.capturedspeech;\n\n            //update the wordcount\n            var wordcount = self.quizhelper.count_words(speechtext);\n            self.wordcount.text(wordcount);\n\n            self.do_evaluation(speechtext);\n        } //end of switch message type\n      };\n\n      //init tt recorder\n      var opts = {};\n      opts.uniqueid = itemdata.uniqueid;\n      opts.callback = recorderCallback;\n      opts.stt_guided=false;\n      self.ttrec = ttrecorder.clone();\n      self.ttrec.init(opts);\n\n    }, //end of init components\n\n    do_corrections_markup: function(grammarerrors,grammarmatches,insertioncount) {\n      var self = this;\n      //corrected text container is created at runtime, so it wont exist at init_components time\n      //thats we find it here\n       var correctionscontainer = self.resultsbox.find('.mlfsr_correctedtext');\n       correctionsmarkup.init({ \"correctionscontainer\": correctionscontainer,\n            \"grammarerrors\": grammarerrors,\n            \"grammarmatches\": grammarmatches,\n            \"insertioncount\": insertioncount});\n    },\n\n    do_evaluation: function(speechtext) {\n      var self = this;\n\n      //show a spinner while we do the AI stuff\n      self.resultsbox.hide();\n      self.actionbox.hide();\n      self.pendingbox.show();\n\n      //do evaluation\n      this.quizhelper.evaluateTranscript(speechtext,this.itemdata.itemid).then(function(ajaxresult) {\n        var transcript_evaluation = JSON.parse(ajaxresult);\n        if (transcript_evaluation) {\n          transcript_evaluation.reviewsettings = self.itemdata.reviewsettings;\n          //calculate raw score and percent score\n          transcript_evaluation.rawscore = self.calculate_score(transcript_evaluation);\n          self.rawscore = self.calculate_score(transcript_evaluation);\n          self.percentscore = 0;\n          if(self.itemdata.totalmarks > 0){\n            self.percentscore = Math.round((self.rawscore / self.itemdata.totalmarks) * 100);\n          }\n          if (isNaN(self.percentscore)) {\n            self.percentscore = 0;\n          }\n          //add raw and percent score to trancript_evaluation for mustache\n          transcript_evaluation.rawscore = self.rawscore;\n          transcript_evaluation.percentscore = self.percentscore;\n          transcript_evaluation.rawspeech = speechtext;\n          transcript_evaluation.maxscore = self.itemdata.totalmarks;\n          self.transcript_evaluation = transcript_evaluation;\n\n          var ystarcnt = 0;\n          var gstarcnt;\n          if (transcript_evaluation.reviewsettings.showscorestarrating) {\n              if (self.percentscore == 0) {\n                ystarcnt = 0;\n              } else if (self.percentscore < 19) {\n                ystarcnt = 1;\n              } else if (self.percentscore < 39) {\n                ystarcnt = 2;\n              } else if (self.percentscore < 59) {\n                ystarcnt = 3;\n              } else if (self.percentscore < 79) {\n                ystarcnt = 4;\n              } else {\n                ystarcnt = 5;\n              }\n\n              gstarcnt = 5 - ystarcnt;\n              self.transcript_evaluation.yellowstars = new Array(ystarcnt).fill(M.cfg, 0, ystarcnt);\n              self.transcript_evaluation.graystars = new Array(gstarcnt).fill(M.cfg, 0, gstarcnt);\n          }\n\n          log.debug(transcript_evaluation);\n          //display results or move next if not show item review\n          if(!self.quizhelper.showitemreview){\n            self.next_question();\n          }else{\n            //display results\n            templates.render('mod_minilesson/freespeakingresults',transcript_evaluation).then(\n              function(html,js){\n                  self.resultsbox.html(html);\n                  //do corrections markup\n                  if(transcript_evaluation.hasOwnProperty('grammarerrors')){\n                    self.do_corrections_markup(transcript_evaluation.grammarerrors,\n                      transcript_evaluation.grammarmatches,\n                      transcript_evaluation.insertioncount\n                    );\n                  }\n                  //show and hide\n                  self.resultsbox.show();\n                  self.pendingbox.hide();\n                  self.actionbox.hide();\n                  templates.runTemplateJS(js);\n                  //reset timer and wordcount on this page, in case reattempt\n                  self.wordcount.text('0');\n                  self.ttrec.timer.reset();\n                  var displaytime = self.ttrec.timer.fetch_display_time();\n                  self.timerdisplay.html(displaytime);\n              }\n            );// End of templates\n          } //end of if show item review\n        } else {\n          log.debug('transcript_evaluation: oh no it failed');\n          self.resultsbox.hide();\n          self.pendingbox.hide();\n          self.actionbox.show();\n        }\n      });\n    },\n  };\n});"],"names":["define","$","log","def","ttrecorder","correctionsmarkup","templates","debug","transcript_evaluation","rawscore","percentscore","clone","extend","this","init","index","itemdata","quizhelper","init_components","register_events","next_question","stepdata","hasgrade","totalitems","totalmarks","correctitems","grade","resultsdata","do_next","calculate_score","wordsratio","countwords","stats","words","targetwordcount","relevanceratio","relevance","Math","round","marks","self","nextbutton","uniqueid","on","e","timelimit","show","progressTimer","height","timeLimit","onFinish","trigger","allwords","thebutton","wordcount","actionbox","pendingbox","resultsbox","timerdisplay","opts","callback","message","type","count_words","capturedspeech","text","speechtext","do_evaluation","stt_guided","ttrec","do_corrections_markup","grammarerrors","grammarmatches","insertioncount","correctionscontainer","find","hide","evaluateTranscript","itemid","then","ajaxresult","JSON","parse","reviewsettings","isNaN","rawspeech","maxscore","gstarcnt","ystarcnt","showscorestarrating","yellowstars","Array","fill","M","cfg","graystars","showitemreview","render","html","js","hasOwnProperty","runTemplateJS","timer","reset","displaytime","fetch_display_time"],"mappings":"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"}