define(["jquery","core/log"],(function($,log){return log.debug("MS Speech initialising"),{thetoken:null,theregion:null,thelanguage:null,thereferencetext:null,speechsdk:null,clone:function(){return $.extend(!0,{},this)},init:function(mstoken,msregion,mslanguage,referencetext){var that=this;this.thetoken=mstoken,this.theregion=msregion,this.thelanguage=mslanguage,this.thereferencetext=referencetext,log.debug("MS Speech init"),window.hasOwnProperty("SpeechSDK")||(log.debug("MS Speech loading"),$.getScript("https://aka.ms/csspeech/jsbrowserpackageraw",(function(){log.debug("MS Speech loaded"),that.speechsdk=window.SpeechSDK,log.debug(that.speechsdk)})))},recognize:function(blob,callback){var that=this;blob.name="audio.wav";let audioConfig=that.speechsdk.AudioConfig.fromWavFileInput(blob,blob.name);var speechConfig=that.speechsdk.SpeechConfig.fromAuthorizationToken(that.thetoken,that.theregion);speechConfig.speechRecognitionLanguage=that.thelanguage;var referencetext=that.thereferencetext;const pronunciationAssessmentConfig=new that.speechsdk.PronunciationAssessmentConfig(referencetext,that.speechsdk.PronunciationAssessmentGradingSystem.HundredMark,that.speechsdk.PronunciationAssessmentGranularity.Phoneme,!0);pronunciationAssessmentConfig.enableProsodyAssessment=!0;var reco=new that.speechsdk.SpeechRecognizer(speechConfig,audioConfig);reco.sessionStarted=(_s,e)=>{console.log("SESSION ID: ".concat(e.sessionId))},pronunciationAssessmentConfig.applyTo(reco),reco.recognizeOnceAsync((function(speechRecognitionResult){var pronunciationAssessmentResult=that.speechsdk.PronunciationAssessmentResult.fromResult(speechRecognitionResult);callback(pronunciationAssessmentResult)}),(function(err){console.log("ERROR: "+err),exit()}))},on_recognition:function(){}}}));

//# sourceMappingURL=ttmsspeech.min.js.map